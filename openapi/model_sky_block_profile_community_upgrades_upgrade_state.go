/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileCommunityUpgradesUpgradeState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileCommunityUpgradesUpgradeState{}

// SkyBlockProfileCommunityUpgradesUpgradeState struct for SkyBlockProfileCommunityUpgradesUpgradeState
type SkyBlockProfileCommunityUpgradesUpgradeState struct {
	ClaimedBy string                                      `json:"claimed_by"`
	StartedBy string                                      `json:"started_by"`
	StartedMs int64                                       `json:"started_ms"`
	Tier      int64                                       `json:"tier"`
	Upgrade   SkyBlockProfileCommunityUpgradesUpgradeType `json:"upgrade"`
}

type _SkyBlockProfileCommunityUpgradesUpgradeState SkyBlockProfileCommunityUpgradesUpgradeState

// NewSkyBlockProfileCommunityUpgradesUpgradeState instantiates a new SkyBlockProfileCommunityUpgradesUpgradeState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileCommunityUpgradesUpgradeState(claimedBy string, startedBy string, startedMs int64, tier int64, upgrade SkyBlockProfileCommunityUpgradesUpgradeType) *SkyBlockProfileCommunityUpgradesUpgradeState {
	this := SkyBlockProfileCommunityUpgradesUpgradeState{}
	this.ClaimedBy = claimedBy
	this.StartedBy = startedBy
	this.StartedMs = startedMs
	this.Tier = tier
	this.Upgrade = upgrade
	return &this
}

// NewSkyBlockProfileCommunityUpgradesUpgradeStateWithDefaults instantiates a new SkyBlockProfileCommunityUpgradesUpgradeState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileCommunityUpgradesUpgradeStateWithDefaults() *SkyBlockProfileCommunityUpgradesUpgradeState {
	this := SkyBlockProfileCommunityUpgradesUpgradeState{}
	return &this
}

// GetClaimedBy returns the ClaimedBy field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetClaimedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClaimedBy
}

// GetClaimedByOk returns a tuple with the ClaimedBy field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetClaimedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClaimedBy, true
}

// SetClaimedBy sets field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) SetClaimedBy(v string) {
	o.ClaimedBy = v
}

// GetStartedBy returns the StartedBy field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetStartedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartedBy
}

// GetStartedByOk returns a tuple with the StartedBy field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetStartedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedBy, true
}

// SetStartedBy sets field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) SetStartedBy(v string) {
	o.StartedBy = v
}

// GetStartedMs returns the StartedMs field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetStartedMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartedMs
}

// GetStartedMsOk returns a tuple with the StartedMs field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetStartedMsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedMs, true
}

// SetStartedMs sets field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) SetStartedMs(v int64) {
	o.StartedMs = v
}

// GetTier returns the Tier field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetTier() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetTierOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) SetTier(v int64) {
	o.Tier = v
}

// GetUpgrade returns the Upgrade field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetUpgrade() SkyBlockProfileCommunityUpgradesUpgradeType {
	if o == nil {
		var ret SkyBlockProfileCommunityUpgradesUpgradeType
		return ret
	}

	return o.Upgrade
}

// GetUpgradeOk returns a tuple with the Upgrade field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) GetUpgradeOk() (*SkyBlockProfileCommunityUpgradesUpgradeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Upgrade, true
}

// SetUpgrade sets field value
func (o *SkyBlockProfileCommunityUpgradesUpgradeState) SetUpgrade(v SkyBlockProfileCommunityUpgradesUpgradeType) {
	o.Upgrade = v
}

func (o SkyBlockProfileCommunityUpgradesUpgradeState) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileCommunityUpgradesUpgradeState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["claimed_by"] = o.ClaimedBy
	toSerialize["started_by"] = o.StartedBy
	toSerialize["started_ms"] = o.StartedMs
	toSerialize["tier"] = o.Tier
	toSerialize["upgrade"] = o.Upgrade
	return toSerialize, nil
}

func (o *SkyBlockProfileCommunityUpgradesUpgradeState) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"claimed_by",
		"started_by",
		"started_ms",
		"tier",
		"upgrade",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileCommunityUpgradesUpgradeState := _SkyBlockProfileCommunityUpgradesUpgradeState{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileCommunityUpgradesUpgradeState)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileCommunityUpgradesUpgradeState(varSkyBlockProfileCommunityUpgradesUpgradeState)

	return err
}

type NullableSkyBlockProfileCommunityUpgradesUpgradeState struct {
	value *SkyBlockProfileCommunityUpgradesUpgradeState
	isSet bool
}

func (v NullableSkyBlockProfileCommunityUpgradesUpgradeState) Get() *SkyBlockProfileCommunityUpgradesUpgradeState {
	return v.value
}

func (v *NullableSkyBlockProfileCommunityUpgradesUpgradeState) Set(val *SkyBlockProfileCommunityUpgradesUpgradeState) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileCommunityUpgradesUpgradeState) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileCommunityUpgradesUpgradeState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileCommunityUpgradesUpgradeState(val *SkyBlockProfileCommunityUpgradesUpgradeState) *NullableSkyBlockProfileCommunityUpgradesUpgradeState {
	return &NullableSkyBlockProfileCommunityUpgradesUpgradeState{value: val, isSet: true}
}

func (v NullableSkyBlockProfileCommunityUpgradesUpgradeState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileCommunityUpgradesUpgradeState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
