/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockFireSale type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockFireSale{}

// SkyBlockFireSale struct for SkyBlockFireSale
type SkyBlockFireSale struct {
	// The amount of items available for this sale
	Amount *int64 `json:"amount,omitempty"`
	// The end time in unix milliseconds for the sale
	End *int64 `json:"end,omitempty"`
	// The SkyBlock item ID for this sale
	ItemId *string `json:"item_id,omitempty"`
	// The price in Gems for this sale
	Price *int64 `json:"price,omitempty"`
	// The start time in unix milliseconds for the sale
	Start *int64 `json:"start,omitempty"`
}

// NewSkyBlockFireSale instantiates a new SkyBlockFireSale object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockFireSale() *SkyBlockFireSale {
	this := SkyBlockFireSale{}
	return &this
}

// NewSkyBlockFireSaleWithDefaults instantiates a new SkyBlockFireSale object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockFireSaleWithDefaults() *SkyBlockFireSale {
	this := SkyBlockFireSale{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SkyBlockFireSale) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockFireSale) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SkyBlockFireSale) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *SkyBlockFireSale) SetAmount(v int64) {
	o.Amount = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *SkyBlockFireSale) GetEnd() int64 {
	if o == nil || IsNil(o.End) {
		var ret int64
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockFireSale) GetEndOk() (*int64, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *SkyBlockFireSale) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int64 and assigns it to the End field.
func (o *SkyBlockFireSale) SetEnd(v int64) {
	o.End = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *SkyBlockFireSale) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockFireSale) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *SkyBlockFireSale) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *SkyBlockFireSale) SetItemId(v string) {
	o.ItemId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *SkyBlockFireSale) GetPrice() int64 {
	if o == nil || IsNil(o.Price) {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockFireSale) GetPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *SkyBlockFireSale) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *SkyBlockFireSale) SetPrice(v int64) {
	o.Price = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *SkyBlockFireSale) GetStart() int64 {
	if o == nil || IsNil(o.Start) {
		var ret int64
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockFireSale) GetStartOk() (*int64, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *SkyBlockFireSale) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int64 and assigns it to the Start field.
func (o *SkyBlockFireSale) SetStart(v int64) {
	o.Start = &v
}

func (o SkyBlockFireSale) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockFireSale) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	return toSerialize, nil
}

type NullableSkyBlockFireSale struct {
	value *SkyBlockFireSale
	isSet bool
}

func (v NullableSkyBlockFireSale) Get() *SkyBlockFireSale {
	return v.value
}

func (v *NullableSkyBlockFireSale) Set(val *SkyBlockFireSale) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockFireSale) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockFireSale) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockFireSale(val *SkyBlockFireSale) *NullableSkyBlockFireSale {
	return &NullableSkyBlockFireSale{value: val, isSet: true}
}

func (v NullableSkyBlockFireSale) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockFireSale) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
