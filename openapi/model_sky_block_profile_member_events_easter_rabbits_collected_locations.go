/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations{}

// SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations struct for SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations
type SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations struct {
	Combat1        []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat1Inner        `json:"combat_1,omitempty"`
	Combat3        []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat3Inner        `json:"combat_3,omitempty"`
	CrimsonIsle    []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrimsonIsleInner    `json:"crimson_isle,omitempty"`
	CrystalHollows []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrystalHollowsInner `json:"crystal_hollows,omitempty"`
	DungeonHub     []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsDungeonHubInner     `json:"dungeon_hub,omitempty"`
	Farming1       []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFarming1Inner       `json:"farming_1,omitempty"`
	Fishing1       []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFishing1Inner       `json:"fishing_1,omitempty"`
	Foraging1      []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsForaging1Inner      `json:"foraging_1,omitempty"`
	Hub            []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsHubInner            `json:"hub,omitempty"`
	Mining1        []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining1Inner        `json:"mining_1,omitempty"`
	Mining2        []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining2Inner        `json:"mining_2,omitempty"`
	Mining3        []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining3Inner        `json:"mining_3,omitempty"`
}

// NewSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations instantiates a new SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations() *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations {
	this := SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations{}
	return &this
}

// NewSkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsWithDefaults instantiates a new SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsWithDefaults() *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations {
	this := SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations{}
	return &this
}

// GetCombat1 returns the Combat1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCombat1() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat1Inner {
	if o == nil || IsNil(o.Combat1) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat1Inner
		return ret
	}
	return o.Combat1
}

// GetCombat1Ok returns a tuple with the Combat1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCombat1Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat1Inner, bool) {
	if o == nil || IsNil(o.Combat1) {
		return nil, false
	}
	return o.Combat1, true
}

// HasCombat1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasCombat1() bool {
	if o != nil && !IsNil(o.Combat1) {
		return true
	}

	return false
}

// SetCombat1 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat1Inner and assigns it to the Combat1 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetCombat1(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat1Inner) {
	o.Combat1 = v
}

// GetCombat3 returns the Combat3 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCombat3() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat3Inner {
	if o == nil || IsNil(o.Combat3) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat3Inner
		return ret
	}
	return o.Combat3
}

// GetCombat3Ok returns a tuple with the Combat3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCombat3Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat3Inner, bool) {
	if o == nil || IsNil(o.Combat3) {
		return nil, false
	}
	return o.Combat3, true
}

// HasCombat3 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasCombat3() bool {
	if o != nil && !IsNil(o.Combat3) {
		return true
	}

	return false
}

// SetCombat3 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat3Inner and assigns it to the Combat3 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetCombat3(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCombat3Inner) {
	o.Combat3 = v
}

// GetCrimsonIsle returns the CrimsonIsle field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCrimsonIsle() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrimsonIsleInner {
	if o == nil || IsNil(o.CrimsonIsle) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrimsonIsleInner
		return ret
	}
	return o.CrimsonIsle
}

// GetCrimsonIsleOk returns a tuple with the CrimsonIsle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCrimsonIsleOk() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrimsonIsleInner, bool) {
	if o == nil || IsNil(o.CrimsonIsle) {
		return nil, false
	}
	return o.CrimsonIsle, true
}

// HasCrimsonIsle returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasCrimsonIsle() bool {
	if o != nil && !IsNil(o.CrimsonIsle) {
		return true
	}

	return false
}

// SetCrimsonIsle gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrimsonIsleInner and assigns it to the CrimsonIsle field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetCrimsonIsle(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrimsonIsleInner) {
	o.CrimsonIsle = v
}

// GetCrystalHollows returns the CrystalHollows field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCrystalHollows() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrystalHollowsInner {
	if o == nil || IsNil(o.CrystalHollows) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrystalHollowsInner
		return ret
	}
	return o.CrystalHollows
}

// GetCrystalHollowsOk returns a tuple with the CrystalHollows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetCrystalHollowsOk() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrystalHollowsInner, bool) {
	if o == nil || IsNil(o.CrystalHollows) {
		return nil, false
	}
	return o.CrystalHollows, true
}

// HasCrystalHollows returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasCrystalHollows() bool {
	if o != nil && !IsNil(o.CrystalHollows) {
		return true
	}

	return false
}

// SetCrystalHollows gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrystalHollowsInner and assigns it to the CrystalHollows field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetCrystalHollows(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsCrystalHollowsInner) {
	o.CrystalHollows = v
}

// GetDungeonHub returns the DungeonHub field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetDungeonHub() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsDungeonHubInner {
	if o == nil || IsNil(o.DungeonHub) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsDungeonHubInner
		return ret
	}
	return o.DungeonHub
}

// GetDungeonHubOk returns a tuple with the DungeonHub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetDungeonHubOk() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsDungeonHubInner, bool) {
	if o == nil || IsNil(o.DungeonHub) {
		return nil, false
	}
	return o.DungeonHub, true
}

// HasDungeonHub returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasDungeonHub() bool {
	if o != nil && !IsNil(o.DungeonHub) {
		return true
	}

	return false
}

// SetDungeonHub gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsDungeonHubInner and assigns it to the DungeonHub field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetDungeonHub(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsDungeonHubInner) {
	o.DungeonHub = v
}

// GetFarming1 returns the Farming1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetFarming1() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFarming1Inner {
	if o == nil || IsNil(o.Farming1) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFarming1Inner
		return ret
	}
	return o.Farming1
}

// GetFarming1Ok returns a tuple with the Farming1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetFarming1Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFarming1Inner, bool) {
	if o == nil || IsNil(o.Farming1) {
		return nil, false
	}
	return o.Farming1, true
}

// HasFarming1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasFarming1() bool {
	if o != nil && !IsNil(o.Farming1) {
		return true
	}

	return false
}

// SetFarming1 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFarming1Inner and assigns it to the Farming1 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetFarming1(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFarming1Inner) {
	o.Farming1 = v
}

// GetFishing1 returns the Fishing1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetFishing1() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFishing1Inner {
	if o == nil || IsNil(o.Fishing1) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFishing1Inner
		return ret
	}
	return o.Fishing1
}

// GetFishing1Ok returns a tuple with the Fishing1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetFishing1Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFishing1Inner, bool) {
	if o == nil || IsNil(o.Fishing1) {
		return nil, false
	}
	return o.Fishing1, true
}

// HasFishing1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasFishing1() bool {
	if o != nil && !IsNil(o.Fishing1) {
		return true
	}

	return false
}

// SetFishing1 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFishing1Inner and assigns it to the Fishing1 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetFishing1(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsFishing1Inner) {
	o.Fishing1 = v
}

// GetForaging1 returns the Foraging1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetForaging1() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsForaging1Inner {
	if o == nil || IsNil(o.Foraging1) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsForaging1Inner
		return ret
	}
	return o.Foraging1
}

// GetForaging1Ok returns a tuple with the Foraging1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetForaging1Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsForaging1Inner, bool) {
	if o == nil || IsNil(o.Foraging1) {
		return nil, false
	}
	return o.Foraging1, true
}

// HasForaging1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasForaging1() bool {
	if o != nil && !IsNil(o.Foraging1) {
		return true
	}

	return false
}

// SetForaging1 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsForaging1Inner and assigns it to the Foraging1 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetForaging1(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsForaging1Inner) {
	o.Foraging1 = v
}

// GetHub returns the Hub field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetHub() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsHubInner {
	if o == nil || IsNil(o.Hub) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsHubInner
		return ret
	}
	return o.Hub
}

// GetHubOk returns a tuple with the Hub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetHubOk() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsHubInner, bool) {
	if o == nil || IsNil(o.Hub) {
		return nil, false
	}
	return o.Hub, true
}

// HasHub returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasHub() bool {
	if o != nil && !IsNil(o.Hub) {
		return true
	}

	return false
}

// SetHub gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsHubInner and assigns it to the Hub field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetHub(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsHubInner) {
	o.Hub = v
}

// GetMining1 returns the Mining1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetMining1() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining1Inner {
	if o == nil || IsNil(o.Mining1) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining1Inner
		return ret
	}
	return o.Mining1
}

// GetMining1Ok returns a tuple with the Mining1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetMining1Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining1Inner, bool) {
	if o == nil || IsNil(o.Mining1) {
		return nil, false
	}
	return o.Mining1, true
}

// HasMining1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasMining1() bool {
	if o != nil && !IsNil(o.Mining1) {
		return true
	}

	return false
}

// SetMining1 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining1Inner and assigns it to the Mining1 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetMining1(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining1Inner) {
	o.Mining1 = v
}

// GetMining2 returns the Mining2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetMining2() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining2Inner {
	if o == nil || IsNil(o.Mining2) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining2Inner
		return ret
	}
	return o.Mining2
}

// GetMining2Ok returns a tuple with the Mining2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetMining2Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining2Inner, bool) {
	if o == nil || IsNil(o.Mining2) {
		return nil, false
	}
	return o.Mining2, true
}

// HasMining2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasMining2() bool {
	if o != nil && !IsNil(o.Mining2) {
		return true
	}

	return false
}

// SetMining2 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining2Inner and assigns it to the Mining2 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetMining2(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining2Inner) {
	o.Mining2 = v
}

// GetMining3 returns the Mining3 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetMining3() []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining3Inner {
	if o == nil || IsNil(o.Mining3) {
		var ret []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining3Inner
		return ret
	}
	return o.Mining3
}

// GetMining3Ok returns a tuple with the Mining3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) GetMining3Ok() ([]SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining3Inner, bool) {
	if o == nil || IsNil(o.Mining3) {
		return nil, false
	}
	return o.Mining3, true
}

// HasMining3 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) HasMining3() bool {
	if o != nil && !IsNil(o.Mining3) {
		return true
	}

	return false
}

// SetMining3 gets a reference to the given []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining3Inner and assigns it to the Mining3 field.
func (o *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) SetMining3(v []SkyBlockProfileMemberEventsEasterRabbitsCollectedLocationsMining3Inner) {
	o.Mining3 = v
}

func (o SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Combat1) {
		toSerialize["combat_1"] = o.Combat1
	}
	if !IsNil(o.Combat3) {
		toSerialize["combat_3"] = o.Combat3
	}
	if !IsNil(o.CrimsonIsle) {
		toSerialize["crimson_isle"] = o.CrimsonIsle
	}
	if !IsNil(o.CrystalHollows) {
		toSerialize["crystal_hollows"] = o.CrystalHollows
	}
	if !IsNil(o.DungeonHub) {
		toSerialize["dungeon_hub"] = o.DungeonHub
	}
	if !IsNil(o.Farming1) {
		toSerialize["farming_1"] = o.Farming1
	}
	if !IsNil(o.Fishing1) {
		toSerialize["fishing_1"] = o.Fishing1
	}
	if !IsNil(o.Foraging1) {
		toSerialize["foraging_1"] = o.Foraging1
	}
	if !IsNil(o.Hub) {
		toSerialize["hub"] = o.Hub
	}
	if !IsNil(o.Mining1) {
		toSerialize["mining_1"] = o.Mining1
	}
	if !IsNil(o.Mining2) {
		toSerialize["mining_2"] = o.Mining2
	}
	if !IsNil(o.Mining3) {
		toSerialize["mining_3"] = o.Mining3
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations struct {
	value *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations
	isSet bool
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) Get() *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations {
	return v.value
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) Set(val *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations(val *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) *NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations {
	return &NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
