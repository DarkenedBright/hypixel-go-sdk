/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberEventsEasterRabbits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberEventsEasterRabbits{}

// SkyBlockProfileMemberEventsEasterRabbits struct for SkyBlockProfileMemberEventsEasterRabbits
type SkyBlockProfileMemberEventsEasterRabbits struct {
	CollectedEggs        SkyBlockProfileMemberEventsEasterRabbitsCollectedEggs       `json:"collected_eggs"`
	CollectedLocations   *SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations `json:"collected_locations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SkyBlockProfileMemberEventsEasterRabbits SkyBlockProfileMemberEventsEasterRabbits

// NewSkyBlockProfileMemberEventsEasterRabbits instantiates a new SkyBlockProfileMemberEventsEasterRabbits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberEventsEasterRabbits(collectedEggs SkyBlockProfileMemberEventsEasterRabbitsCollectedEggs) *SkyBlockProfileMemberEventsEasterRabbits {
	this := SkyBlockProfileMemberEventsEasterRabbits{}
	this.CollectedEggs = collectedEggs
	return &this
}

// NewSkyBlockProfileMemberEventsEasterRabbitsWithDefaults instantiates a new SkyBlockProfileMemberEventsEasterRabbits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberEventsEasterRabbitsWithDefaults() *SkyBlockProfileMemberEventsEasterRabbits {
	this := SkyBlockProfileMemberEventsEasterRabbits{}
	return &this
}

// GetCollectedEggs returns the CollectedEggs field value
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedEggs() SkyBlockProfileMemberEventsEasterRabbitsCollectedEggs {
	if o == nil {
		var ret SkyBlockProfileMemberEventsEasterRabbitsCollectedEggs
		return ret
	}

	return o.CollectedEggs
}

// GetCollectedEggsOk returns a tuple with the CollectedEggs field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedEggsOk() (*SkyBlockProfileMemberEventsEasterRabbitsCollectedEggs, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectedEggs, true
}

// SetCollectedEggs sets field value
func (o *SkyBlockProfileMemberEventsEasterRabbits) SetCollectedEggs(v SkyBlockProfileMemberEventsEasterRabbitsCollectedEggs) {
	o.CollectedEggs = v
}

// GetCollectedLocations returns the CollectedLocations field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedLocations() SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations {
	if o == nil || IsNil(o.CollectedLocations) {
		var ret SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations
		return ret
	}
	return *o.CollectedLocations
}

// GetCollectedLocationsOk returns a tuple with the CollectedLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedLocationsOk() (*SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations, bool) {
	if o == nil || IsNil(o.CollectedLocations) {
		return nil, false
	}
	return o.CollectedLocations, true
}

// HasCollectedLocations returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) HasCollectedLocations() bool {
	if o != nil && !IsNil(o.CollectedLocations) {
		return true
	}

	return false
}

// SetCollectedLocations gets a reference to the given SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations and assigns it to the CollectedLocations field.
func (o *SkyBlockProfileMemberEventsEasterRabbits) SetCollectedLocations(v SkyBlockProfileMemberEventsEasterRabbitsCollectedLocations) {
	o.CollectedLocations = &v
}

func (o SkyBlockProfileMemberEventsEasterRabbits) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberEventsEasterRabbits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collected_eggs"] = o.CollectedEggs
	if !IsNil(o.CollectedLocations) {
		toSerialize["collected_locations"] = o.CollectedLocations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SkyBlockProfileMemberEventsEasterRabbits) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"collected_eggs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberEventsEasterRabbits := _SkyBlockProfileMemberEventsEasterRabbits{}

	err = json.Unmarshal(data, &varSkyBlockProfileMemberEventsEasterRabbits)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberEventsEasterRabbits(varSkyBlockProfileMemberEventsEasterRabbits)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "collected_eggs")
		delete(additionalProperties, "collected_locations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSkyBlockProfileMemberEventsEasterRabbits struct {
	value *SkyBlockProfileMemberEventsEasterRabbits
	isSet bool
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbits) Get() *SkyBlockProfileMemberEventsEasterRabbits {
	return v.value
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbits) Set(val *SkyBlockProfileMemberEventsEasterRabbits) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbits) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberEventsEasterRabbits(val *SkyBlockProfileMemberEventsEasterRabbits) *NullableSkyBlockProfileMemberEventsEasterRabbits {
	return &NullableSkyBlockProfileMemberEventsEasterRabbits{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
