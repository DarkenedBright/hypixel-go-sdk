/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberEventsEasterRabbits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberEventsEasterRabbits{}

// SkyBlockProfileMemberEventsEasterRabbits struct for SkyBlockProfileMemberEventsEasterRabbits
type SkyBlockProfileMemberEventsEasterRabbits struct {
	CollectedEggs        *map[string]int64    `json:"collected_eggs,omitempty"`
	CollectedLocations   *map[string][]string `json:"collected_locations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SkyBlockProfileMemberEventsEasterRabbits SkyBlockProfileMemberEventsEasterRabbits

// NewSkyBlockProfileMemberEventsEasterRabbits instantiates a new SkyBlockProfileMemberEventsEasterRabbits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberEventsEasterRabbits() *SkyBlockProfileMemberEventsEasterRabbits {
	this := SkyBlockProfileMemberEventsEasterRabbits{}
	return &this
}

// NewSkyBlockProfileMemberEventsEasterRabbitsWithDefaults instantiates a new SkyBlockProfileMemberEventsEasterRabbits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberEventsEasterRabbitsWithDefaults() *SkyBlockProfileMemberEventsEasterRabbits {
	this := SkyBlockProfileMemberEventsEasterRabbits{}
	return &this
}

// GetCollectedEggs returns the CollectedEggs field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedEggs() map[string]int64 {
	if o == nil || IsNil(o.CollectedEggs) {
		var ret map[string]int64
		return ret
	}
	return *o.CollectedEggs
}

// GetCollectedEggsOk returns a tuple with the CollectedEggs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedEggsOk() (*map[string]int64, bool) {
	if o == nil || IsNil(o.CollectedEggs) {
		return nil, false
	}
	return o.CollectedEggs, true
}

// HasCollectedEggs returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) HasCollectedEggs() bool {
	if o != nil && !IsNil(o.CollectedEggs) {
		return true
	}

	return false
}

// SetCollectedEggs gets a reference to the given map[string]int64 and assigns it to the CollectedEggs field.
func (o *SkyBlockProfileMemberEventsEasterRabbits) SetCollectedEggs(v map[string]int64) {
	o.CollectedEggs = &v
}

// GetCollectedLocations returns the CollectedLocations field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedLocations() map[string][]string {
	if o == nil || IsNil(o.CollectedLocations) {
		var ret map[string][]string
		return ret
	}
	return *o.CollectedLocations
}

// GetCollectedLocationsOk returns a tuple with the CollectedLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) GetCollectedLocationsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.CollectedLocations) {
		return nil, false
	}
	return o.CollectedLocations, true
}

// HasCollectedLocations returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterRabbits) HasCollectedLocations() bool {
	if o != nil && !IsNil(o.CollectedLocations) {
		return true
	}

	return false
}

// SetCollectedLocations gets a reference to the given map[string][]string and assigns it to the CollectedLocations field.
func (o *SkyBlockProfileMemberEventsEasterRabbits) SetCollectedLocations(v map[string][]string) {
	o.CollectedLocations = &v
}

func (o SkyBlockProfileMemberEventsEasterRabbits) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberEventsEasterRabbits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CollectedEggs) {
		toSerialize["collected_eggs"] = o.CollectedEggs
	}
	if !IsNil(o.CollectedLocations) {
		toSerialize["collected_locations"] = o.CollectedLocations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SkyBlockProfileMemberEventsEasterRabbits) UnmarshalJSON(data []byte) (err error) {
	varSkyBlockProfileMemberEventsEasterRabbits := _SkyBlockProfileMemberEventsEasterRabbits{}

	err = json.Unmarshal(data, &varSkyBlockProfileMemberEventsEasterRabbits)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberEventsEasterRabbits(varSkyBlockProfileMemberEventsEasterRabbits)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "collected_eggs")
		delete(additionalProperties, "collected_locations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSkyBlockProfileMemberEventsEasterRabbits struct {
	value *SkyBlockProfileMemberEventsEasterRabbits
	isSet bool
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbits) Get() *SkyBlockProfileMemberEventsEasterRabbits {
	return v.value
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbits) Set(val *SkyBlockProfileMemberEventsEasterRabbits) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbits) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberEventsEasterRabbits(val *SkyBlockProfileMemberEventsEasterRabbits) *NullableSkyBlockProfileMemberEventsEasterRabbits {
	return &NullableSkyBlockProfileMemberEventsEasterRabbits{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
