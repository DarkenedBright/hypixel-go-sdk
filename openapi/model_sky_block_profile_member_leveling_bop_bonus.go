/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberLevelingBopBonus the model 'SkyBlockProfileMemberLevelingBopBonus'
type SkyBlockProfileMemberLevelingBopBonus string

// List of SkyBlockProfileMemberLeveling_bop_bonus
const (
	SKYBLOCKPROFILEMEMBERLEVELINGBOPBONUS_DEFENSIVE_STRONGMAN SkyBlockProfileMemberLevelingBopBonus = "DEFENSIVE_STRONGMAN"
	SKYBLOCKPROFILEMEMBERLEVELINGBOPBONUS_EXTRA_INFLICTION    SkyBlockProfileMemberLevelingBopBonus = "EXTRA_INFLICTION"
	SKYBLOCKPROFILEMEMBERLEVELINGBOPBONUS_STACKED_HEALING     SkyBlockProfileMemberLevelingBopBonus = "STACKED_HEALING"
)

// All allowed values of SkyBlockProfileMemberLevelingBopBonus enum
var AllowedSkyBlockProfileMemberLevelingBopBonusEnumValues = []SkyBlockProfileMemberLevelingBopBonus{
	"DEFENSIVE_STRONGMAN",
	"EXTRA_INFLICTION",
	"STACKED_HEALING",
}

func (v *SkyBlockProfileMemberLevelingBopBonus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberLevelingBopBonus(value)
	for _, existing := range AllowedSkyBlockProfileMemberLevelingBopBonusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberLevelingBopBonus", value)
}

// NewSkyBlockProfileMemberLevelingBopBonusFromValue returns a pointer to a valid SkyBlockProfileMemberLevelingBopBonus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberLevelingBopBonusFromValue(v string) (*SkyBlockProfileMemberLevelingBopBonus, error) {
	ev := SkyBlockProfileMemberLevelingBopBonus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberLevelingBopBonus: valid values are %v", v, AllowedSkyBlockProfileMemberLevelingBopBonusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberLevelingBopBonus) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberLevelingBopBonusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberLeveling_bop_bonus value
func (v SkyBlockProfileMemberLevelingBopBonus) Ptr() *SkyBlockProfileMemberLevelingBopBonus {
	return &v
}

type NullableSkyBlockProfileMemberLevelingBopBonus struct {
	value *SkyBlockProfileMemberLevelingBopBonus
	isSet bool
}

func (v NullableSkyBlockProfileMemberLevelingBopBonus) Get() *SkyBlockProfileMemberLevelingBopBonus {
	return v.value
}

func (v *NullableSkyBlockProfileMemberLevelingBopBonus) Set(val *SkyBlockProfileMemberLevelingBopBonus) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberLevelingBopBonus) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberLevelingBopBonus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberLevelingBopBonus(val *SkyBlockProfileMemberLevelingBopBonus) *NullableSkyBlockProfileMemberLevelingBopBonus {
	return &NullableSkyBlockProfileMemberLevelingBopBonus{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberLevelingBopBonus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberLevelingBopBonus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
