/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort the model 'SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort'
type SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort string

// List of SkyBlockProfileMemberNetherIslandPlayerDataAbiphone_selected_sort
const (
	MOST_CALLED SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort = "most_called"
)

// All allowed values of SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort enum
var AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSortEnumValues = []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort{
	"most_called",
}

func (v *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort(value)
	for _, existing := range AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSortEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort", value)
}

// NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSortFromValue returns a pointer to a valid SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSortFromValue(v string) (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort, error) {
	ev := SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort: valid values are %v", v, AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSortEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSortEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberNetherIslandPlayerDataAbiphone_selected_sort value
func (v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) Ptr() *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort {
	return &v
}

type NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort struct {
	value *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) Get() *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) Set(val *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort(val *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
