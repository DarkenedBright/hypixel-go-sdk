/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V2ResourcesSkyblockElectionGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ResourcesSkyblockElectionGet200Response{}

// V2ResourcesSkyblockElectionGet200Response struct for V2ResourcesSkyblockElectionGet200Response
type V2ResourcesSkyblockElectionGet200Response struct {
	// Data regarding the current election, will not be provided if there is no open election ongoing
	Current     map[string]interface{} `json:"current,omitempty"`
	LastUpdated *int64                 `json:"lastUpdated,omitempty"`
	// Data regarding the current mayor
	Mayor   map[string]interface{} `json:"mayor,omitempty"`
	Success *bool                  `json:"success,omitempty"`
}

// NewV2ResourcesSkyblockElectionGet200Response instantiates a new V2ResourcesSkyblockElectionGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ResourcesSkyblockElectionGet200Response() *V2ResourcesSkyblockElectionGet200Response {
	this := V2ResourcesSkyblockElectionGet200Response{}
	return &this
}

// NewV2ResourcesSkyblockElectionGet200ResponseWithDefaults instantiates a new V2ResourcesSkyblockElectionGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ResourcesSkyblockElectionGet200ResponseWithDefaults() *V2ResourcesSkyblockElectionGet200Response {
	this := V2ResourcesSkyblockElectionGet200Response{}
	return &this
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockElectionGet200Response) GetCurrent() map[string]interface{} {
	if o == nil || IsNil(o.Current) {
		var ret map[string]interface{}
		return ret
	}
	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) GetCurrentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Current) {
		return map[string]interface{}{}, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given map[string]interface{} and assigns it to the Current field.
func (o *V2ResourcesSkyblockElectionGet200Response) SetCurrent(v map[string]interface{}) {
	o.Current = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockElectionGet200Response) GetLastUpdated() int64 {
	if o == nil || IsNil(o.LastUpdated) {
		var ret int64
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) GetLastUpdatedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given int64 and assigns it to the LastUpdated field.
func (o *V2ResourcesSkyblockElectionGet200Response) SetLastUpdated(v int64) {
	o.LastUpdated = &v
}

// GetMayor returns the Mayor field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockElectionGet200Response) GetMayor() map[string]interface{} {
	if o == nil || IsNil(o.Mayor) {
		var ret map[string]interface{}
		return ret
	}
	return o.Mayor
}

// GetMayorOk returns a tuple with the Mayor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) GetMayorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Mayor) {
		return map[string]interface{}{}, false
	}
	return o.Mayor, true
}

// HasMayor returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) HasMayor() bool {
	if o != nil && !IsNil(o.Mayor) {
		return true
	}

	return false
}

// SetMayor gets a reference to the given map[string]interface{} and assigns it to the Mayor field.
func (o *V2ResourcesSkyblockElectionGet200Response) SetMayor(v map[string]interface{}) {
	o.Mayor = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockElectionGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockElectionGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *V2ResourcesSkyblockElectionGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o V2ResourcesSkyblockElectionGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ResourcesSkyblockElectionGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Mayor) {
		toSerialize["mayor"] = o.Mayor
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableV2ResourcesSkyblockElectionGet200Response struct {
	value *V2ResourcesSkyblockElectionGet200Response
	isSet bool
}

func (v NullableV2ResourcesSkyblockElectionGet200Response) Get() *V2ResourcesSkyblockElectionGet200Response {
	return v.value
}

func (v *NullableV2ResourcesSkyblockElectionGet200Response) Set(val *V2ResourcesSkyblockElectionGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ResourcesSkyblockElectionGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ResourcesSkyblockElectionGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ResourcesSkyblockElectionGet200Response(val *V2ResourcesSkyblockElectionGet200Response) *NullableV2ResourcesSkyblockElectionGet200Response {
	return &NullableV2ResourcesSkyblockElectionGet200Response{value: val, isSet: true}
}

func (v NullableV2ResourcesSkyblockElectionGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ResourcesSkyblockElectionGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
