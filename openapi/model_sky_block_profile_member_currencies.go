/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberCurrencies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberCurrencies{}

// SkyBlockProfileMemberCurrencies struct for SkyBlockProfileMemberCurrencies
type SkyBlockProfileMemberCurrencies struct {
	CoinPurse  *float64                                                `json:"coin_purse,omitempty"`
	Essence    *map[string]SkyBlockProfileMemberCurrenciesEssenceValue `json:"essence,omitempty"`
	MotesPurse *float64                                                `json:"motes_purse,omitempty"`
}

// NewSkyBlockProfileMemberCurrencies instantiates a new SkyBlockProfileMemberCurrencies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberCurrencies() *SkyBlockProfileMemberCurrencies {
	this := SkyBlockProfileMemberCurrencies{}
	return &this
}

// NewSkyBlockProfileMemberCurrenciesWithDefaults instantiates a new SkyBlockProfileMemberCurrencies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberCurrenciesWithDefaults() *SkyBlockProfileMemberCurrencies {
	this := SkyBlockProfileMemberCurrencies{}
	return &this
}

// GetCoinPurse returns the CoinPurse field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberCurrencies) GetCoinPurse() float64 {
	if o == nil || IsNil(o.CoinPurse) {
		var ret float64
		return ret
	}
	return *o.CoinPurse
}

// GetCoinPurseOk returns a tuple with the CoinPurse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberCurrencies) GetCoinPurseOk() (*float64, bool) {
	if o == nil || IsNil(o.CoinPurse) {
		return nil, false
	}
	return o.CoinPurse, true
}

// HasCoinPurse returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberCurrencies) HasCoinPurse() bool {
	if o != nil && !IsNil(o.CoinPurse) {
		return true
	}

	return false
}

// SetCoinPurse gets a reference to the given float64 and assigns it to the CoinPurse field.
func (o *SkyBlockProfileMemberCurrencies) SetCoinPurse(v float64) {
	o.CoinPurse = &v
}

// GetEssence returns the Essence field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberCurrencies) GetEssence() map[string]SkyBlockProfileMemberCurrenciesEssenceValue {
	if o == nil || IsNil(o.Essence) {
		var ret map[string]SkyBlockProfileMemberCurrenciesEssenceValue
		return ret
	}
	return *o.Essence
}

// GetEssenceOk returns a tuple with the Essence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberCurrencies) GetEssenceOk() (*map[string]SkyBlockProfileMemberCurrenciesEssenceValue, bool) {
	if o == nil || IsNil(o.Essence) {
		return nil, false
	}
	return o.Essence, true
}

// HasEssence returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberCurrencies) HasEssence() bool {
	if o != nil && !IsNil(o.Essence) {
		return true
	}

	return false
}

// SetEssence gets a reference to the given map[string]SkyBlockProfileMemberCurrenciesEssenceValue and assigns it to the Essence field.
func (o *SkyBlockProfileMemberCurrencies) SetEssence(v map[string]SkyBlockProfileMemberCurrenciesEssenceValue) {
	o.Essence = &v
}

// GetMotesPurse returns the MotesPurse field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberCurrencies) GetMotesPurse() float64 {
	if o == nil || IsNil(o.MotesPurse) {
		var ret float64
		return ret
	}
	return *o.MotesPurse
}

// GetMotesPurseOk returns a tuple with the MotesPurse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberCurrencies) GetMotesPurseOk() (*float64, bool) {
	if o == nil || IsNil(o.MotesPurse) {
		return nil, false
	}
	return o.MotesPurse, true
}

// HasMotesPurse returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberCurrencies) HasMotesPurse() bool {
	if o != nil && !IsNil(o.MotesPurse) {
		return true
	}

	return false
}

// SetMotesPurse gets a reference to the given float64 and assigns it to the MotesPurse field.
func (o *SkyBlockProfileMemberCurrencies) SetMotesPurse(v float64) {
	o.MotesPurse = &v
}

func (o SkyBlockProfileMemberCurrencies) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberCurrencies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoinPurse) {
		toSerialize["coin_purse"] = o.CoinPurse
	}
	if !IsNil(o.Essence) {
		toSerialize["essence"] = o.Essence
	}
	if !IsNil(o.MotesPurse) {
		toSerialize["motes_purse"] = o.MotesPurse
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberCurrencies struct {
	value *SkyBlockProfileMemberCurrencies
	isSet bool
}

func (v NullableSkyBlockProfileMemberCurrencies) Get() *SkyBlockProfileMemberCurrencies {
	return v.value
}

func (v *NullableSkyBlockProfileMemberCurrencies) Set(val *SkyBlockProfileMemberCurrencies) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberCurrencies) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberCurrencies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberCurrencies(val *SkyBlockProfileMemberCurrencies) *NullableSkyBlockProfileMemberCurrencies {
	return &NullableSkyBlockProfileMemberCurrencies{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberCurrencies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberCurrencies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
