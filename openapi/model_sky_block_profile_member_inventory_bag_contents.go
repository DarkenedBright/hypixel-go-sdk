/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberInventoryBagContents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberInventoryBagContents{}

// SkyBlockProfileMemberInventoryBagContents struct for SkyBlockProfileMemberInventoryBagContents
type SkyBlockProfileMemberInventoryBagContents struct {
	FishingBag  *SkyBlockProfileMemberInventoryBase64GzipData `json:"fishing_bag,omitempty"`
	PotionBag   *SkyBlockProfileMemberInventoryBase64GzipData `json:"potion_bag,omitempty"`
	Quiver      *SkyBlockProfileMemberInventoryBase64GzipData `json:"quiver,omitempty"`
	SacksBag    *SkyBlockProfileMemberInventoryBase64GzipData `json:"sacks_bag,omitempty"`
	TalismanBag *SkyBlockProfileMemberInventoryBase64GzipData `json:"talisman_bag,omitempty"`
}

// NewSkyBlockProfileMemberInventoryBagContents instantiates a new SkyBlockProfileMemberInventoryBagContents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberInventoryBagContents() *SkyBlockProfileMemberInventoryBagContents {
	this := SkyBlockProfileMemberInventoryBagContents{}
	return &this
}

// NewSkyBlockProfileMemberInventoryBagContentsWithDefaults instantiates a new SkyBlockProfileMemberInventoryBagContents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberInventoryBagContentsWithDefaults() *SkyBlockProfileMemberInventoryBagContents {
	this := SkyBlockProfileMemberInventoryBagContents{}
	return &this
}

// GetFishingBag returns the FishingBag field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberInventoryBagContents) GetFishingBag() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.FishingBag) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.FishingBag
}

// GetFishingBagOk returns a tuple with the FishingBag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) GetFishingBagOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.FishingBag) {
		return nil, false
	}
	return o.FishingBag, true
}

// HasFishingBag returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) HasFishingBag() bool {
	if o != nil && !IsNil(o.FishingBag) {
		return true
	}

	return false
}

// SetFishingBag gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the FishingBag field.
func (o *SkyBlockProfileMemberInventoryBagContents) SetFishingBag(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.FishingBag = &v
}

// GetPotionBag returns the PotionBag field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberInventoryBagContents) GetPotionBag() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.PotionBag) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.PotionBag
}

// GetPotionBagOk returns a tuple with the PotionBag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) GetPotionBagOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.PotionBag) {
		return nil, false
	}
	return o.PotionBag, true
}

// HasPotionBag returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) HasPotionBag() bool {
	if o != nil && !IsNil(o.PotionBag) {
		return true
	}

	return false
}

// SetPotionBag gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the PotionBag field.
func (o *SkyBlockProfileMemberInventoryBagContents) SetPotionBag(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.PotionBag = &v
}

// GetQuiver returns the Quiver field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberInventoryBagContents) GetQuiver() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.Quiver) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.Quiver
}

// GetQuiverOk returns a tuple with the Quiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) GetQuiverOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.Quiver) {
		return nil, false
	}
	return o.Quiver, true
}

// HasQuiver returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) HasQuiver() bool {
	if o != nil && !IsNil(o.Quiver) {
		return true
	}

	return false
}

// SetQuiver gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the Quiver field.
func (o *SkyBlockProfileMemberInventoryBagContents) SetQuiver(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.Quiver = &v
}

// GetSacksBag returns the SacksBag field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberInventoryBagContents) GetSacksBag() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.SacksBag) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.SacksBag
}

// GetSacksBagOk returns a tuple with the SacksBag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) GetSacksBagOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.SacksBag) {
		return nil, false
	}
	return o.SacksBag, true
}

// HasSacksBag returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) HasSacksBag() bool {
	if o != nil && !IsNil(o.SacksBag) {
		return true
	}

	return false
}

// SetSacksBag gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the SacksBag field.
func (o *SkyBlockProfileMemberInventoryBagContents) SetSacksBag(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.SacksBag = &v
}

// GetTalismanBag returns the TalismanBag field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberInventoryBagContents) GetTalismanBag() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.TalismanBag) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.TalismanBag
}

// GetTalismanBagOk returns a tuple with the TalismanBag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) GetTalismanBagOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.TalismanBag) {
		return nil, false
	}
	return o.TalismanBag, true
}

// HasTalismanBag returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberInventoryBagContents) HasTalismanBag() bool {
	if o != nil && !IsNil(o.TalismanBag) {
		return true
	}

	return false
}

// SetTalismanBag gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the TalismanBag field.
func (o *SkyBlockProfileMemberInventoryBagContents) SetTalismanBag(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.TalismanBag = &v
}

func (o SkyBlockProfileMemberInventoryBagContents) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberInventoryBagContents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FishingBag) {
		toSerialize["fishing_bag"] = o.FishingBag
	}
	if !IsNil(o.PotionBag) {
		toSerialize["potion_bag"] = o.PotionBag
	}
	if !IsNil(o.Quiver) {
		toSerialize["quiver"] = o.Quiver
	}
	if !IsNil(o.SacksBag) {
		toSerialize["sacks_bag"] = o.SacksBag
	}
	if !IsNil(o.TalismanBag) {
		toSerialize["talisman_bag"] = o.TalismanBag
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberInventoryBagContents struct {
	value *SkyBlockProfileMemberInventoryBagContents
	isSet bool
}

func (v NullableSkyBlockProfileMemberInventoryBagContents) Get() *SkyBlockProfileMemberInventoryBagContents {
	return v.value
}

func (v *NullableSkyBlockProfileMemberInventoryBagContents) Set(val *SkyBlockProfileMemberInventoryBagContents) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberInventoryBagContents) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberInventoryBagContents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberInventoryBagContents(val *SkyBlockProfileMemberInventoryBagContents) *NullableSkyBlockProfileMemberInventoryBagContents {
	return &NullableSkyBlockProfileMemberInventoryBagContents{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberInventoryBagContents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberInventoryBagContents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
