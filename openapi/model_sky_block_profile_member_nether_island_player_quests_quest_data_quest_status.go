/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus the model 'SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus'
type SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus string

// List of SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuest_status
const (
	SKYBLOCKPROFILEMEMBERNETHERISLANDPLAYERQUESTSQUESTDATAQUESTSTATUS_ACTIVE   SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus = "ACTIVE"
	SKYBLOCKPROFILEMEMBERNETHERISLANDPLAYERQUESTSQUESTDATAQUESTSTATUS_COMPLETE SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus = "COMPLETE"
	SKYBLOCKPROFILEMEMBERNETHERISLANDPLAYERQUESTSQUESTDATAQUESTSTATUS_INACTIVE SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus = "INACTIVE"
)

// All allowed values of SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus enum
var AllowedSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatusEnumValues = []SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus{
	"ACTIVE",
	"COMPLETE",
	"INACTIVE",
}

func (v *SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus(value)
	for _, existing := range AllowedSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus", value)
}

// NewSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatusFromValue returns a pointer to a valid SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatusFromValue(v string) (*SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus, error) {
	ev := SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus: valid values are %v", v, AllowedSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuest_status value
func (v SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) Ptr() *SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus {
	return &v
}

type NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus struct {
	value *SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) Get() *SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) Set(val *SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus(val *SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) *NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
