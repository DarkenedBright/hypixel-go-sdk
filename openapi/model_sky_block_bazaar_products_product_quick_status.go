/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockBazaarProductsProductQuickStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockBazaarProductsProductQuickStatus{}

// SkyBlockBazaarProductsProductQuickStatus struct for SkyBlockBazaarProductsProductQuickStatus
type SkyBlockBazaarProductsProductQuickStatus struct {
	BuyMovingWeek  int64                   `json:"buyMovingWeek"`
	BuyOrders      int64                   `json:"buyOrders"`
	BuyPrice       float64                 `json:"buyPrice"`
	BuyVolume      int64                   `json:"buyVolume"`
	ProductId      SkyBlockBazaarProductId `json:"productId"`
	SellMovingWeek int64                   `json:"sellMovingWeek"`
	SellOrders     int64                   `json:"sellOrders"`
	SellPrice      float64                 `json:"sellPrice"`
	SellVolume     int64                   `json:"sellVolume"`
}

type _SkyBlockBazaarProductsProductQuickStatus SkyBlockBazaarProductsProductQuickStatus

// NewSkyBlockBazaarProductsProductQuickStatus instantiates a new SkyBlockBazaarProductsProductQuickStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockBazaarProductsProductQuickStatus(buyMovingWeek int64, buyOrders int64, buyPrice float64, buyVolume int64, productId SkyBlockBazaarProductId, sellMovingWeek int64, sellOrders int64, sellPrice float64, sellVolume int64) *SkyBlockBazaarProductsProductQuickStatus {
	this := SkyBlockBazaarProductsProductQuickStatus{}
	this.BuyMovingWeek = buyMovingWeek
	this.BuyOrders = buyOrders
	this.BuyPrice = buyPrice
	this.BuyVolume = buyVolume
	this.ProductId = productId
	this.SellMovingWeek = sellMovingWeek
	this.SellOrders = sellOrders
	this.SellPrice = sellPrice
	this.SellVolume = sellVolume
	return &this
}

// NewSkyBlockBazaarProductsProductQuickStatusWithDefaults instantiates a new SkyBlockBazaarProductsProductQuickStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockBazaarProductsProductQuickStatusWithDefaults() *SkyBlockBazaarProductsProductQuickStatus {
	this := SkyBlockBazaarProductsProductQuickStatus{}
	return &this
}

// GetBuyMovingWeek returns the BuyMovingWeek field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyMovingWeek() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BuyMovingWeek
}

// GetBuyMovingWeekOk returns a tuple with the BuyMovingWeek field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyMovingWeekOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuyMovingWeek, true
}

// SetBuyMovingWeek sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetBuyMovingWeek(v int64) {
	o.BuyMovingWeek = v
}

// GetBuyOrders returns the BuyOrders field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyOrders() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BuyOrders
}

// GetBuyOrdersOk returns a tuple with the BuyOrders field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyOrdersOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuyOrders, true
}

// SetBuyOrders sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetBuyOrders(v int64) {
	o.BuyOrders = v
}

// GetBuyPrice returns the BuyPrice field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.BuyPrice
}

// GetBuyPriceOk returns a tuple with the BuyPrice field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuyPrice, true
}

// SetBuyPrice sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetBuyPrice(v float64) {
	o.BuyPrice = v
}

// GetBuyVolume returns the BuyVolume field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyVolume() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BuyVolume
}

// GetBuyVolumeOk returns a tuple with the BuyVolume field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetBuyVolumeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuyVolume, true
}

// SetBuyVolume sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetBuyVolume(v int64) {
	o.BuyVolume = v
}

// GetProductId returns the ProductId field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetProductId() SkyBlockBazaarProductId {
	if o == nil {
		var ret SkyBlockBazaarProductId
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetProductIdOk() (*SkyBlockBazaarProductId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetProductId(v SkyBlockBazaarProductId) {
	o.ProductId = v
}

// GetSellMovingWeek returns the SellMovingWeek field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellMovingWeek() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SellMovingWeek
}

// GetSellMovingWeekOk returns a tuple with the SellMovingWeek field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellMovingWeekOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellMovingWeek, true
}

// SetSellMovingWeek sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetSellMovingWeek(v int64) {
	o.SellMovingWeek = v
}

// GetSellOrders returns the SellOrders field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellOrders() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SellOrders
}

// GetSellOrdersOk returns a tuple with the SellOrders field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellOrdersOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellOrders, true
}

// SetSellOrders sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetSellOrders(v int64) {
	o.SellOrders = v
}

// GetSellPrice returns the SellPrice field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SellPrice
}

// GetSellPriceOk returns a tuple with the SellPrice field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellPrice, true
}

// SetSellPrice sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetSellPrice(v float64) {
	o.SellPrice = v
}

// GetSellVolume returns the SellVolume field value
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellVolume() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SellVolume
}

// GetSellVolumeOk returns a tuple with the SellVolume field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductQuickStatus) GetSellVolumeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellVolume, true
}

// SetSellVolume sets field value
func (o *SkyBlockBazaarProductsProductQuickStatus) SetSellVolume(v int64) {
	o.SellVolume = v
}

func (o SkyBlockBazaarProductsProductQuickStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockBazaarProductsProductQuickStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buyMovingWeek"] = o.BuyMovingWeek
	toSerialize["buyOrders"] = o.BuyOrders
	toSerialize["buyPrice"] = o.BuyPrice
	toSerialize["buyVolume"] = o.BuyVolume
	toSerialize["productId"] = o.ProductId
	toSerialize["sellMovingWeek"] = o.SellMovingWeek
	toSerialize["sellOrders"] = o.SellOrders
	toSerialize["sellPrice"] = o.SellPrice
	toSerialize["sellVolume"] = o.SellVolume
	return toSerialize, nil
}

func (o *SkyBlockBazaarProductsProductQuickStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"buyMovingWeek",
		"buyOrders",
		"buyPrice",
		"buyVolume",
		"productId",
		"sellMovingWeek",
		"sellOrders",
		"sellPrice",
		"sellVolume",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockBazaarProductsProductQuickStatus := _SkyBlockBazaarProductsProductQuickStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockBazaarProductsProductQuickStatus)

	if err != nil {
		return err
	}

	*o = SkyBlockBazaarProductsProductQuickStatus(varSkyBlockBazaarProductsProductQuickStatus)

	return err
}

type NullableSkyBlockBazaarProductsProductQuickStatus struct {
	value *SkyBlockBazaarProductsProductQuickStatus
	isSet bool
}

func (v NullableSkyBlockBazaarProductsProductQuickStatus) Get() *SkyBlockBazaarProductsProductQuickStatus {
	return v.value
}

func (v *NullableSkyBlockBazaarProductsProductQuickStatus) Set(val *SkyBlockBazaarProductsProductQuickStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockBazaarProductsProductQuickStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockBazaarProductsProductQuickStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockBazaarProductsProductQuickStatus(val *SkyBlockBazaarProductsProductQuickStatus) *NullableSkyBlockBazaarProductsProductQuickStatus {
	return &NullableSkyBlockBazaarProductsProductQuickStatus{value: val, isSet: true}
}

func (v NullableSkyBlockBazaarProductsProductQuickStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockBazaarProductsProductQuickStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
