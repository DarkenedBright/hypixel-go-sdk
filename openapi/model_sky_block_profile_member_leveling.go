/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberLeveling type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberLeveling{}

// SkyBlockProfileMemberLeveling struct for SkyBlockProfileMemberLeveling
type SkyBlockProfileMemberLeveling struct {
	BopBonus                    *SkyBlockProfileMemberLevelingBopBonus    `json:"bop_bonus,omitempty"`
	CategoryExpanded            *bool                                     `json:"category_expanded,omitempty"`
	ClaimedTalisman             *bool                                     `json:"claimed_talisman,omitempty"`
	Completed                   []SkyBlockProfileMemberLevelingXPTask     `json:"completed,omitempty"`
	CompletedTasks              []SkyBlockProfileMemberLevelingXPTask     `json:"completed_tasks,omitempty"`
	Completions                 *SkyBlockProfileMemberLevelingCompletions `json:"completions,omitempty"`
	EmblemUnlocks               []SkyBlockProfileMemberLevelingEmblem     `json:"emblem_unlocks,omitempty"`
	Experience                  *int64                                    `json:"experience,omitempty"`
	FishingFestivalSharksKilled *int64                                    `json:"fishing_festival_sharks_killed,omitempty"`
	GuideSort                   *SkyBlockProfileMemberLevelingGuideSort   `json:"guide_sort,omitempty"`
	HighestPetScore             *int64                                    `json:"highest_pet_score,omitempty"`
	LastViewedTasks             []string                                  `json:"last_viewed_tasks,omitempty"`
	Migrated                    *bool                                     `json:"migrated,omitempty"`
	MigratedCompletions         *bool                                     `json:"migrated_completions,omitempty"`
	MigratedCompletions2        *bool                                     `json:"migrated_completions_2,omitempty"`
	MiningFiestaOresMined       *int64                                    `json:"mining_fiesta_ores_mined,omitempty"`
	SelectedSymbol              *SkyBlockProfileMemberLevelingEmblem      `json:"selected_symbol,omitempty"`
	TaskSort                    *SkyBlockProfileMemberLevelingTaskSort    `json:"task_sort,omitempty"`
}

// NewSkyBlockProfileMemberLeveling instantiates a new SkyBlockProfileMemberLeveling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberLeveling() *SkyBlockProfileMemberLeveling {
	this := SkyBlockProfileMemberLeveling{}
	return &this
}

// NewSkyBlockProfileMemberLevelingWithDefaults instantiates a new SkyBlockProfileMemberLeveling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberLevelingWithDefaults() *SkyBlockProfileMemberLeveling {
	this := SkyBlockProfileMemberLeveling{}
	return &this
}

// GetBopBonus returns the BopBonus field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetBopBonus() SkyBlockProfileMemberLevelingBopBonus {
	if o == nil || IsNil(o.BopBonus) {
		var ret SkyBlockProfileMemberLevelingBopBonus
		return ret
	}
	return *o.BopBonus
}

// GetBopBonusOk returns a tuple with the BopBonus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetBopBonusOk() (*SkyBlockProfileMemberLevelingBopBonus, bool) {
	if o == nil || IsNil(o.BopBonus) {
		return nil, false
	}
	return o.BopBonus, true
}

// HasBopBonus returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasBopBonus() bool {
	if o != nil && !IsNil(o.BopBonus) {
		return true
	}

	return false
}

// SetBopBonus gets a reference to the given SkyBlockProfileMemberLevelingBopBonus and assigns it to the BopBonus field.
func (o *SkyBlockProfileMemberLeveling) SetBopBonus(v SkyBlockProfileMemberLevelingBopBonus) {
	o.BopBonus = &v
}

// GetCategoryExpanded returns the CategoryExpanded field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetCategoryExpanded() bool {
	if o == nil || IsNil(o.CategoryExpanded) {
		var ret bool
		return ret
	}
	return *o.CategoryExpanded
}

// GetCategoryExpandedOk returns a tuple with the CategoryExpanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetCategoryExpandedOk() (*bool, bool) {
	if o == nil || IsNil(o.CategoryExpanded) {
		return nil, false
	}
	return o.CategoryExpanded, true
}

// HasCategoryExpanded returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasCategoryExpanded() bool {
	if o != nil && !IsNil(o.CategoryExpanded) {
		return true
	}

	return false
}

// SetCategoryExpanded gets a reference to the given bool and assigns it to the CategoryExpanded field.
func (o *SkyBlockProfileMemberLeveling) SetCategoryExpanded(v bool) {
	o.CategoryExpanded = &v
}

// GetClaimedTalisman returns the ClaimedTalisman field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetClaimedTalisman() bool {
	if o == nil || IsNil(o.ClaimedTalisman) {
		var ret bool
		return ret
	}
	return *o.ClaimedTalisman
}

// GetClaimedTalismanOk returns a tuple with the ClaimedTalisman field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetClaimedTalismanOk() (*bool, bool) {
	if o == nil || IsNil(o.ClaimedTalisman) {
		return nil, false
	}
	return o.ClaimedTalisman, true
}

// HasClaimedTalisman returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasClaimedTalisman() bool {
	if o != nil && !IsNil(o.ClaimedTalisman) {
		return true
	}

	return false
}

// SetClaimedTalisman gets a reference to the given bool and assigns it to the ClaimedTalisman field.
func (o *SkyBlockProfileMemberLeveling) SetClaimedTalisman(v bool) {
	o.ClaimedTalisman = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetCompleted() []SkyBlockProfileMemberLevelingXPTask {
	if o == nil || IsNil(o.Completed) {
		var ret []SkyBlockProfileMemberLevelingXPTask
		return ret
	}
	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetCompletedOk() ([]SkyBlockProfileMemberLevelingXPTask, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given []SkyBlockProfileMemberLevelingXPTask and assigns it to the Completed field.
func (o *SkyBlockProfileMemberLeveling) SetCompleted(v []SkyBlockProfileMemberLevelingXPTask) {
	o.Completed = v
}

// GetCompletedTasks returns the CompletedTasks field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetCompletedTasks() []SkyBlockProfileMemberLevelingXPTask {
	if o == nil || IsNil(o.CompletedTasks) {
		var ret []SkyBlockProfileMemberLevelingXPTask
		return ret
	}
	return o.CompletedTasks
}

// GetCompletedTasksOk returns a tuple with the CompletedTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetCompletedTasksOk() ([]SkyBlockProfileMemberLevelingXPTask, bool) {
	if o == nil || IsNil(o.CompletedTasks) {
		return nil, false
	}
	return o.CompletedTasks, true
}

// HasCompletedTasks returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasCompletedTasks() bool {
	if o != nil && !IsNil(o.CompletedTasks) {
		return true
	}

	return false
}

// SetCompletedTasks gets a reference to the given []SkyBlockProfileMemberLevelingXPTask and assigns it to the CompletedTasks field.
func (o *SkyBlockProfileMemberLeveling) SetCompletedTasks(v []SkyBlockProfileMemberLevelingXPTask) {
	o.CompletedTasks = v
}

// GetCompletions returns the Completions field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetCompletions() SkyBlockProfileMemberLevelingCompletions {
	if o == nil || IsNil(o.Completions) {
		var ret SkyBlockProfileMemberLevelingCompletions
		return ret
	}
	return *o.Completions
}

// GetCompletionsOk returns a tuple with the Completions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetCompletionsOk() (*SkyBlockProfileMemberLevelingCompletions, bool) {
	if o == nil || IsNil(o.Completions) {
		return nil, false
	}
	return o.Completions, true
}

// HasCompletions returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasCompletions() bool {
	if o != nil && !IsNil(o.Completions) {
		return true
	}

	return false
}

// SetCompletions gets a reference to the given SkyBlockProfileMemberLevelingCompletions and assigns it to the Completions field.
func (o *SkyBlockProfileMemberLeveling) SetCompletions(v SkyBlockProfileMemberLevelingCompletions) {
	o.Completions = &v
}

// GetEmblemUnlocks returns the EmblemUnlocks field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetEmblemUnlocks() []SkyBlockProfileMemberLevelingEmblem {
	if o == nil || IsNil(o.EmblemUnlocks) {
		var ret []SkyBlockProfileMemberLevelingEmblem
		return ret
	}
	return o.EmblemUnlocks
}

// GetEmblemUnlocksOk returns a tuple with the EmblemUnlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetEmblemUnlocksOk() ([]SkyBlockProfileMemberLevelingEmblem, bool) {
	if o == nil || IsNil(o.EmblemUnlocks) {
		return nil, false
	}
	return o.EmblemUnlocks, true
}

// HasEmblemUnlocks returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasEmblemUnlocks() bool {
	if o != nil && !IsNil(o.EmblemUnlocks) {
		return true
	}

	return false
}

// SetEmblemUnlocks gets a reference to the given []SkyBlockProfileMemberLevelingEmblem and assigns it to the EmblemUnlocks field.
func (o *SkyBlockProfileMemberLeveling) SetEmblemUnlocks(v []SkyBlockProfileMemberLevelingEmblem) {
	o.EmblemUnlocks = v
}

// GetExperience returns the Experience field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetExperience() int64 {
	if o == nil || IsNil(o.Experience) {
		var ret int64
		return ret
	}
	return *o.Experience
}

// GetExperienceOk returns a tuple with the Experience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetExperienceOk() (*int64, bool) {
	if o == nil || IsNil(o.Experience) {
		return nil, false
	}
	return o.Experience, true
}

// HasExperience returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasExperience() bool {
	if o != nil && !IsNil(o.Experience) {
		return true
	}

	return false
}

// SetExperience gets a reference to the given int64 and assigns it to the Experience field.
func (o *SkyBlockProfileMemberLeveling) SetExperience(v int64) {
	o.Experience = &v
}

// GetFishingFestivalSharksKilled returns the FishingFestivalSharksKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetFishingFestivalSharksKilled() int64 {
	if o == nil || IsNil(o.FishingFestivalSharksKilled) {
		var ret int64
		return ret
	}
	return *o.FishingFestivalSharksKilled
}

// GetFishingFestivalSharksKilledOk returns a tuple with the FishingFestivalSharksKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetFishingFestivalSharksKilledOk() (*int64, bool) {
	if o == nil || IsNil(o.FishingFestivalSharksKilled) {
		return nil, false
	}
	return o.FishingFestivalSharksKilled, true
}

// HasFishingFestivalSharksKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasFishingFestivalSharksKilled() bool {
	if o != nil && !IsNil(o.FishingFestivalSharksKilled) {
		return true
	}

	return false
}

// SetFishingFestivalSharksKilled gets a reference to the given int64 and assigns it to the FishingFestivalSharksKilled field.
func (o *SkyBlockProfileMemberLeveling) SetFishingFestivalSharksKilled(v int64) {
	o.FishingFestivalSharksKilled = &v
}

// GetGuideSort returns the GuideSort field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetGuideSort() SkyBlockProfileMemberLevelingGuideSort {
	if o == nil || IsNil(o.GuideSort) {
		var ret SkyBlockProfileMemberLevelingGuideSort
		return ret
	}
	return *o.GuideSort
}

// GetGuideSortOk returns a tuple with the GuideSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetGuideSortOk() (*SkyBlockProfileMemberLevelingGuideSort, bool) {
	if o == nil || IsNil(o.GuideSort) {
		return nil, false
	}
	return o.GuideSort, true
}

// HasGuideSort returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasGuideSort() bool {
	if o != nil && !IsNil(o.GuideSort) {
		return true
	}

	return false
}

// SetGuideSort gets a reference to the given SkyBlockProfileMemberLevelingGuideSort and assigns it to the GuideSort field.
func (o *SkyBlockProfileMemberLeveling) SetGuideSort(v SkyBlockProfileMemberLevelingGuideSort) {
	o.GuideSort = &v
}

// GetHighestPetScore returns the HighestPetScore field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetHighestPetScore() int64 {
	if o == nil || IsNil(o.HighestPetScore) {
		var ret int64
		return ret
	}
	return *o.HighestPetScore
}

// GetHighestPetScoreOk returns a tuple with the HighestPetScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetHighestPetScoreOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestPetScore) {
		return nil, false
	}
	return o.HighestPetScore, true
}

// HasHighestPetScore returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasHighestPetScore() bool {
	if o != nil && !IsNil(o.HighestPetScore) {
		return true
	}

	return false
}

// SetHighestPetScore gets a reference to the given int64 and assigns it to the HighestPetScore field.
func (o *SkyBlockProfileMemberLeveling) SetHighestPetScore(v int64) {
	o.HighestPetScore = &v
}

// GetLastViewedTasks returns the LastViewedTasks field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetLastViewedTasks() []string {
	if o == nil || IsNil(o.LastViewedTasks) {
		var ret []string
		return ret
	}
	return o.LastViewedTasks
}

// GetLastViewedTasksOk returns a tuple with the LastViewedTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetLastViewedTasksOk() ([]string, bool) {
	if o == nil || IsNil(o.LastViewedTasks) {
		return nil, false
	}
	return o.LastViewedTasks, true
}

// HasLastViewedTasks returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasLastViewedTasks() bool {
	if o != nil && !IsNil(o.LastViewedTasks) {
		return true
	}

	return false
}

// SetLastViewedTasks gets a reference to the given []string and assigns it to the LastViewedTasks field.
func (o *SkyBlockProfileMemberLeveling) SetLastViewedTasks(v []string) {
	o.LastViewedTasks = v
}

// GetMigrated returns the Migrated field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetMigrated() bool {
	if o == nil || IsNil(o.Migrated) {
		var ret bool
		return ret
	}
	return *o.Migrated
}

// GetMigratedOk returns a tuple with the Migrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetMigratedOk() (*bool, bool) {
	if o == nil || IsNil(o.Migrated) {
		return nil, false
	}
	return o.Migrated, true
}

// HasMigrated returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasMigrated() bool {
	if o != nil && !IsNil(o.Migrated) {
		return true
	}

	return false
}

// SetMigrated gets a reference to the given bool and assigns it to the Migrated field.
func (o *SkyBlockProfileMemberLeveling) SetMigrated(v bool) {
	o.Migrated = &v
}

// GetMigratedCompletions returns the MigratedCompletions field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetMigratedCompletions() bool {
	if o == nil || IsNil(o.MigratedCompletions) {
		var ret bool
		return ret
	}
	return *o.MigratedCompletions
}

// GetMigratedCompletionsOk returns a tuple with the MigratedCompletions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetMigratedCompletionsOk() (*bool, bool) {
	if o == nil || IsNil(o.MigratedCompletions) {
		return nil, false
	}
	return o.MigratedCompletions, true
}

// HasMigratedCompletions returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasMigratedCompletions() bool {
	if o != nil && !IsNil(o.MigratedCompletions) {
		return true
	}

	return false
}

// SetMigratedCompletions gets a reference to the given bool and assigns it to the MigratedCompletions field.
func (o *SkyBlockProfileMemberLeveling) SetMigratedCompletions(v bool) {
	o.MigratedCompletions = &v
}

// GetMigratedCompletions2 returns the MigratedCompletions2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetMigratedCompletions2() bool {
	if o == nil || IsNil(o.MigratedCompletions2) {
		var ret bool
		return ret
	}
	return *o.MigratedCompletions2
}

// GetMigratedCompletions2Ok returns a tuple with the MigratedCompletions2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetMigratedCompletions2Ok() (*bool, bool) {
	if o == nil || IsNil(o.MigratedCompletions2) {
		return nil, false
	}
	return o.MigratedCompletions2, true
}

// HasMigratedCompletions2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasMigratedCompletions2() bool {
	if o != nil && !IsNil(o.MigratedCompletions2) {
		return true
	}

	return false
}

// SetMigratedCompletions2 gets a reference to the given bool and assigns it to the MigratedCompletions2 field.
func (o *SkyBlockProfileMemberLeveling) SetMigratedCompletions2(v bool) {
	o.MigratedCompletions2 = &v
}

// GetMiningFiestaOresMined returns the MiningFiestaOresMined field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetMiningFiestaOresMined() int64 {
	if o == nil || IsNil(o.MiningFiestaOresMined) {
		var ret int64
		return ret
	}
	return *o.MiningFiestaOresMined
}

// GetMiningFiestaOresMinedOk returns a tuple with the MiningFiestaOresMined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetMiningFiestaOresMinedOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningFiestaOresMined) {
		return nil, false
	}
	return o.MiningFiestaOresMined, true
}

// HasMiningFiestaOresMined returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasMiningFiestaOresMined() bool {
	if o != nil && !IsNil(o.MiningFiestaOresMined) {
		return true
	}

	return false
}

// SetMiningFiestaOresMined gets a reference to the given int64 and assigns it to the MiningFiestaOresMined field.
func (o *SkyBlockProfileMemberLeveling) SetMiningFiestaOresMined(v int64) {
	o.MiningFiestaOresMined = &v
}

// GetSelectedSymbol returns the SelectedSymbol field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetSelectedSymbol() SkyBlockProfileMemberLevelingEmblem {
	if o == nil || IsNil(o.SelectedSymbol) {
		var ret SkyBlockProfileMemberLevelingEmblem
		return ret
	}
	return *o.SelectedSymbol
}

// GetSelectedSymbolOk returns a tuple with the SelectedSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetSelectedSymbolOk() (*SkyBlockProfileMemberLevelingEmblem, bool) {
	if o == nil || IsNil(o.SelectedSymbol) {
		return nil, false
	}
	return o.SelectedSymbol, true
}

// HasSelectedSymbol returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasSelectedSymbol() bool {
	if o != nil && !IsNil(o.SelectedSymbol) {
		return true
	}

	return false
}

// SetSelectedSymbol gets a reference to the given SkyBlockProfileMemberLevelingEmblem and assigns it to the SelectedSymbol field.
func (o *SkyBlockProfileMemberLeveling) SetSelectedSymbol(v SkyBlockProfileMemberLevelingEmblem) {
	o.SelectedSymbol = &v
}

// GetTaskSort returns the TaskSort field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLeveling) GetTaskSort() SkyBlockProfileMemberLevelingTaskSort {
	if o == nil || IsNil(o.TaskSort) {
		var ret SkyBlockProfileMemberLevelingTaskSort
		return ret
	}
	return *o.TaskSort
}

// GetTaskSortOk returns a tuple with the TaskSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLeveling) GetTaskSortOk() (*SkyBlockProfileMemberLevelingTaskSort, bool) {
	if o == nil || IsNil(o.TaskSort) {
		return nil, false
	}
	return o.TaskSort, true
}

// HasTaskSort returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLeveling) HasTaskSort() bool {
	if o != nil && !IsNil(o.TaskSort) {
		return true
	}

	return false
}

// SetTaskSort gets a reference to the given SkyBlockProfileMemberLevelingTaskSort and assigns it to the TaskSort field.
func (o *SkyBlockProfileMemberLeveling) SetTaskSort(v SkyBlockProfileMemberLevelingTaskSort) {
	o.TaskSort = &v
}

func (o SkyBlockProfileMemberLeveling) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberLeveling) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BopBonus) {
		toSerialize["bop_bonus"] = o.BopBonus
	}
	if !IsNil(o.CategoryExpanded) {
		toSerialize["category_expanded"] = o.CategoryExpanded
	}
	if !IsNil(o.ClaimedTalisman) {
		toSerialize["claimed_talisman"] = o.ClaimedTalisman
	}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.CompletedTasks) {
		toSerialize["completed_tasks"] = o.CompletedTasks
	}
	if !IsNil(o.Completions) {
		toSerialize["completions"] = o.Completions
	}
	if !IsNil(o.EmblemUnlocks) {
		toSerialize["emblem_unlocks"] = o.EmblemUnlocks
	}
	if !IsNil(o.Experience) {
		toSerialize["experience"] = o.Experience
	}
	if !IsNil(o.FishingFestivalSharksKilled) {
		toSerialize["fishing_festival_sharks_killed"] = o.FishingFestivalSharksKilled
	}
	if !IsNil(o.GuideSort) {
		toSerialize["guide_sort"] = o.GuideSort
	}
	if !IsNil(o.HighestPetScore) {
		toSerialize["highest_pet_score"] = o.HighestPetScore
	}
	if !IsNil(o.LastViewedTasks) {
		toSerialize["last_viewed_tasks"] = o.LastViewedTasks
	}
	if !IsNil(o.Migrated) {
		toSerialize["migrated"] = o.Migrated
	}
	if !IsNil(o.MigratedCompletions) {
		toSerialize["migrated_completions"] = o.MigratedCompletions
	}
	if !IsNil(o.MigratedCompletions2) {
		toSerialize["migrated_completions_2"] = o.MigratedCompletions2
	}
	if !IsNil(o.MiningFiestaOresMined) {
		toSerialize["mining_fiesta_ores_mined"] = o.MiningFiestaOresMined
	}
	if !IsNil(o.SelectedSymbol) {
		toSerialize["selected_symbol"] = o.SelectedSymbol
	}
	if !IsNil(o.TaskSort) {
		toSerialize["task_sort"] = o.TaskSort
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberLeveling struct {
	value *SkyBlockProfileMemberLeveling
	isSet bool
}

func (v NullableSkyBlockProfileMemberLeveling) Get() *SkyBlockProfileMemberLeveling {
	return v.value
}

func (v *NullableSkyBlockProfileMemberLeveling) Set(val *SkyBlockProfileMemberLeveling) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberLeveling) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberLeveling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberLeveling(val *SkyBlockProfileMemberLeveling) *NullableSkyBlockProfileMemberLeveling {
	return &NullableSkyBlockProfileMemberLeveling{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberLeveling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberLeveling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
