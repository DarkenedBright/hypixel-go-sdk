/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting the model 'SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting'
type SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting string

// List of SkyBlockProfileMemberDungeonsDungeonHubRaceSettings_selected_setting
const (
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONHUBRACESETTINGSSELECTEDSETTING_ANYTHING     SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting = "anything"
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONHUBRACESETTINGSSELECTEDSETTING_NO_ABILITIES SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting = "no_abilities"
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONHUBRACESETTINGSSELECTEDSETTING_NO_PEARLS    SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting = "no_pearls"
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONHUBRACESETTINGSSELECTEDSETTING_NOTHING      SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting = "nothing"
)

// All allowed values of SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting enum
var AllowedSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSettingEnumValues = []SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting{
	"anything",
	"no_abilities",
	"no_pearls",
	"nothing",
}

func (v *SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting(value)
	for _, existing := range AllowedSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSettingEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting", value)
}

// NewSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSettingFromValue returns a pointer to a valid SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSettingFromValue(v string) (*SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting, error) {
	ev := SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting: valid values are %v", v, AllowedSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSettingEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSettingEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberDungeonsDungeonHubRaceSettings_selected_setting value
func (v SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) Ptr() *SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting {
	return &v
}

type NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting struct {
	value *SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) Get() *SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) Set(val *SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting(val *SkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) *NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting {
	return &NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonHubRaceSettingsSelectedSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
