/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner the model 'SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner'
type SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner string

// List of SkyBlockProfileMemberRiftWestVillageMirrorverse_visited_rooms_inner
const (
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_CRAFTING_ROOM       SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "crafting room"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_DANCE_ROOM          SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "dance room"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_FOUR_LEVERS         SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "four levers"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_LAVA_MAZE           SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "lava maze"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_RED_GREEN_PUZZLE    SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "red-green puzzle"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_REWARD_ROOM         SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "reward room"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_TUBULATOR           SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "tubulator"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSEVISITEDROOMSINNER_UPSIDE_DOWN_PARKOUR SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner = "upside-down parkour"
)

// All allowed values of SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner enum
var AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInnerEnumValues = []SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner{
	"crafting room",
	"dance room",
	"four levers",
	"lava maze",
	"red-green puzzle",
	"reward room",
	"tubulator",
	"upside-down parkour",
}

func (v *SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner(value)
	for _, existing := range AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner", value)
}

// NewSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInnerFromValue returns a pointer to a valid SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInnerFromValue(v string) (*SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner, error) {
	ev := SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner: valid values are %v", v, AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberRiftWestVillageMirrorverse_visited_rooms_inner value
func (v SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) Ptr() *SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner {
	return &v
}

type NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner struct {
	value *SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) Get() *SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) Set(val *SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner(val *SkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner {
	return &NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseVisitedRoomsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
