/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockBazaarProductsProductSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockBazaarProductsProductSummary{}

// SkyBlockBazaarProductsProductSummary struct for SkyBlockBazaarProductsProductSummary
type SkyBlockBazaarProductsProductSummary struct {
	Amount       int64   `json:"amount"`
	Orders       int64   `json:"orders"`
	PricePerUnit float64 `json:"pricePerUnit"`
}

type _SkyBlockBazaarProductsProductSummary SkyBlockBazaarProductsProductSummary

// NewSkyBlockBazaarProductsProductSummary instantiates a new SkyBlockBazaarProductsProductSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockBazaarProductsProductSummary(amount int64, orders int64, pricePerUnit float64) *SkyBlockBazaarProductsProductSummary {
	this := SkyBlockBazaarProductsProductSummary{}
	this.Amount = amount
	this.Orders = orders
	this.PricePerUnit = pricePerUnit
	return &this
}

// NewSkyBlockBazaarProductsProductSummaryWithDefaults instantiates a new SkyBlockBazaarProductsProductSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockBazaarProductsProductSummaryWithDefaults() *SkyBlockBazaarProductsProductSummary {
	this := SkyBlockBazaarProductsProductSummary{}
	return &this
}

// GetAmount returns the Amount field value
func (o *SkyBlockBazaarProductsProductSummary) GetAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductSummary) GetAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SkyBlockBazaarProductsProductSummary) SetAmount(v int64) {
	o.Amount = v
}

// GetOrders returns the Orders field value
func (o *SkyBlockBazaarProductsProductSummary) GetOrders() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductSummary) GetOrdersOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Orders, true
}

// SetOrders sets field value
func (o *SkyBlockBazaarProductsProductSummary) SetOrders(v int64) {
	o.Orders = v
}

// GetPricePerUnit returns the PricePerUnit field value
func (o *SkyBlockBazaarProductsProductSummary) GetPricePerUnit() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.PricePerUnit
}

// GetPricePerUnitOk returns a tuple with the PricePerUnit field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaarProductsProductSummary) GetPricePerUnitOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PricePerUnit, true
}

// SetPricePerUnit sets field value
func (o *SkyBlockBazaarProductsProductSummary) SetPricePerUnit(v float64) {
	o.PricePerUnit = v
}

func (o SkyBlockBazaarProductsProductSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockBazaarProductsProductSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["orders"] = o.Orders
	toSerialize["pricePerUnit"] = o.PricePerUnit
	return toSerialize, nil
}

func (o *SkyBlockBazaarProductsProductSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"orders",
		"pricePerUnit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockBazaarProductsProductSummary := _SkyBlockBazaarProductsProductSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockBazaarProductsProductSummary)

	if err != nil {
		return err
	}

	*o = SkyBlockBazaarProductsProductSummary(varSkyBlockBazaarProductsProductSummary)

	return err
}

type NullableSkyBlockBazaarProductsProductSummary struct {
	value *SkyBlockBazaarProductsProductSummary
	isSet bool
}

func (v NullableSkyBlockBazaarProductsProductSummary) Get() *SkyBlockBazaarProductsProductSummary {
	return v.value
}

func (v *NullableSkyBlockBazaarProductsProductSummary) Set(val *SkyBlockBazaarProductsProductSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockBazaarProductsProductSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockBazaarProductsProductSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockBazaarProductsProductSummary(val *SkyBlockBazaarProductsProductSummary) *NullableSkyBlockBazaarProductsProductSummary {
	return &NullableSkyBlockBazaarProductsProductSummary{value: val, isSet: true}
}

func (v NullableSkyBlockBazaarProductsProductSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockBazaarProductsProductSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
