/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberMiningCoreBiomesGoblin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberMiningCoreBiomesGoblin{}

// SkyBlockProfileMemberMiningCoreBiomesGoblin struct for SkyBlockProfileMemberMiningCoreBiomesGoblin
type SkyBlockProfileMemberMiningCoreBiomesGoblin struct {
	KingQuestActive     bool   `json:"king_quest_active"`
	KingQuestsCompleted *int64 `json:"king_quests_completed,omitempty"`
}

type _SkyBlockProfileMemberMiningCoreBiomesGoblin SkyBlockProfileMemberMiningCoreBiomesGoblin

// NewSkyBlockProfileMemberMiningCoreBiomesGoblin instantiates a new SkyBlockProfileMemberMiningCoreBiomesGoblin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberMiningCoreBiomesGoblin(kingQuestActive bool) *SkyBlockProfileMemberMiningCoreBiomesGoblin {
	this := SkyBlockProfileMemberMiningCoreBiomesGoblin{}
	this.KingQuestActive = kingQuestActive
	return &this
}

// NewSkyBlockProfileMemberMiningCoreBiomesGoblinWithDefaults instantiates a new SkyBlockProfileMemberMiningCoreBiomesGoblin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberMiningCoreBiomesGoblinWithDefaults() *SkyBlockProfileMemberMiningCoreBiomesGoblin {
	this := SkyBlockProfileMemberMiningCoreBiomesGoblin{}
	return &this
}

// GetKingQuestActive returns the KingQuestActive field value
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) GetKingQuestActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KingQuestActive
}

// GetKingQuestActiveOk returns a tuple with the KingQuestActive field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) GetKingQuestActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KingQuestActive, true
}

// SetKingQuestActive sets field value
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) SetKingQuestActive(v bool) {
	o.KingQuestActive = v
}

// GetKingQuestsCompleted returns the KingQuestsCompleted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) GetKingQuestsCompleted() int64 {
	if o == nil || IsNil(o.KingQuestsCompleted) {
		var ret int64
		return ret
	}
	return *o.KingQuestsCompleted
}

// GetKingQuestsCompletedOk returns a tuple with the KingQuestsCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) GetKingQuestsCompletedOk() (*int64, bool) {
	if o == nil || IsNil(o.KingQuestsCompleted) {
		return nil, false
	}
	return o.KingQuestsCompleted, true
}

// HasKingQuestsCompleted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) HasKingQuestsCompleted() bool {
	if o != nil && !IsNil(o.KingQuestsCompleted) {
		return true
	}

	return false
}

// SetKingQuestsCompleted gets a reference to the given int64 and assigns it to the KingQuestsCompleted field.
func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) SetKingQuestsCompleted(v int64) {
	o.KingQuestsCompleted = &v
}

func (o SkyBlockProfileMemberMiningCoreBiomesGoblin) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberMiningCoreBiomesGoblin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["king_quest_active"] = o.KingQuestActive
	if !IsNil(o.KingQuestsCompleted) {
		toSerialize["king_quests_completed"] = o.KingQuestsCompleted
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberMiningCoreBiomesGoblin) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"king_quest_active",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberMiningCoreBiomesGoblin := _SkyBlockProfileMemberMiningCoreBiomesGoblin{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberMiningCoreBiomesGoblin)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberMiningCoreBiomesGoblin(varSkyBlockProfileMemberMiningCoreBiomesGoblin)

	return err
}

type NullableSkyBlockProfileMemberMiningCoreBiomesGoblin struct {
	value *SkyBlockProfileMemberMiningCoreBiomesGoblin
	isSet bool
}

func (v NullableSkyBlockProfileMemberMiningCoreBiomesGoblin) Get() *SkyBlockProfileMemberMiningCoreBiomesGoblin {
	return v.value
}

func (v *NullableSkyBlockProfileMemberMiningCoreBiomesGoblin) Set(val *SkyBlockProfileMemberMiningCoreBiomesGoblin) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberMiningCoreBiomesGoblin) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberMiningCoreBiomesGoblin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberMiningCoreBiomesGoblin(val *SkyBlockProfileMemberMiningCoreBiomesGoblin) *NullableSkyBlockProfileMemberMiningCoreBiomesGoblin {
	return &NullableSkyBlockProfileMemberMiningCoreBiomesGoblin{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberMiningCoreBiomesGoblin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberMiningCoreBiomesGoblin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
