/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockMuseumMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockMuseumMember{}

// SkyBlockMuseumMember struct for SkyBlockMuseumMember
type SkyBlockMuseumMember struct {
	Appraisal bool                       `json:"appraisal"`
	Items     SkyBlockMuseumMemberItems  `json:"items"`
	Special   []SkyBlockMuseumMemberItem `json:"special,omitempty"`
	Value     int64                      `json:"value"`
}

type _SkyBlockMuseumMember SkyBlockMuseumMember

// NewSkyBlockMuseumMember instantiates a new SkyBlockMuseumMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockMuseumMember(appraisal bool, items SkyBlockMuseumMemberItems, value int64) *SkyBlockMuseumMember {
	this := SkyBlockMuseumMember{}
	this.Appraisal = appraisal
	this.Items = items
	this.Value = value
	return &this
}

// NewSkyBlockMuseumMemberWithDefaults instantiates a new SkyBlockMuseumMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockMuseumMemberWithDefaults() *SkyBlockMuseumMember {
	this := SkyBlockMuseumMember{}
	return &this
}

// GetAppraisal returns the Appraisal field value
func (o *SkyBlockMuseumMember) GetAppraisal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Appraisal
}

// GetAppraisalOk returns a tuple with the Appraisal field value
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMember) GetAppraisalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Appraisal, true
}

// SetAppraisal sets field value
func (o *SkyBlockMuseumMember) SetAppraisal(v bool) {
	o.Appraisal = v
}

// GetItems returns the Items field value
func (o *SkyBlockMuseumMember) GetItems() SkyBlockMuseumMemberItems {
	if o == nil {
		var ret SkyBlockMuseumMemberItems
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMember) GetItemsOk() (*SkyBlockMuseumMemberItems, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *SkyBlockMuseumMember) SetItems(v SkyBlockMuseumMemberItems) {
	o.Items = v
}

// GetSpecial returns the Special field value if set, zero value otherwise.
func (o *SkyBlockMuseumMember) GetSpecial() []SkyBlockMuseumMemberItem {
	if o == nil || IsNil(o.Special) {
		var ret []SkyBlockMuseumMemberItem
		return ret
	}
	return o.Special
}

// GetSpecialOk returns a tuple with the Special field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMember) GetSpecialOk() ([]SkyBlockMuseumMemberItem, bool) {
	if o == nil || IsNil(o.Special) {
		return nil, false
	}
	return o.Special, true
}

// HasSpecial returns a boolean if a field has been set.
func (o *SkyBlockMuseumMember) HasSpecial() bool {
	if o != nil && !IsNil(o.Special) {
		return true
	}

	return false
}

// SetSpecial gets a reference to the given []SkyBlockMuseumMemberItem and assigns it to the Special field.
func (o *SkyBlockMuseumMember) SetSpecial(v []SkyBlockMuseumMemberItem) {
	o.Special = v
}

// GetValue returns the Value field value
func (o *SkyBlockMuseumMember) GetValue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMember) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SkyBlockMuseumMember) SetValue(v int64) {
	o.Value = v
}

func (o SkyBlockMuseumMember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockMuseumMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appraisal"] = o.Appraisal
	toSerialize["items"] = o.Items
	if !IsNil(o.Special) {
		toSerialize["special"] = o.Special
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *SkyBlockMuseumMember) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appraisal",
		"items",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockMuseumMember := _SkyBlockMuseumMember{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockMuseumMember)

	if err != nil {
		return err
	}

	*o = SkyBlockMuseumMember(varSkyBlockMuseumMember)

	return err
}

type NullableSkyBlockMuseumMember struct {
	value *SkyBlockMuseumMember
	isSet bool
}

func (v NullableSkyBlockMuseumMember) Get() *SkyBlockMuseumMember {
	return v.value
}

func (v *NullableSkyBlockMuseumMember) Set(val *SkyBlockMuseumMember) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockMuseumMember) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockMuseumMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockMuseumMember(val *SkyBlockMuseumMember) *NullableSkyBlockMuseumMember {
	return &NullableSkyBlockMuseumMember{value: val, isSet: true}
}

func (v NullableSkyBlockMuseumMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockMuseumMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
