/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberPlayerStatsWinter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerStatsWinter{}

// SkyBlockProfileMemberPlayerStatsWinter struct for SkyBlockProfileMemberPlayerStatsWinter
type SkyBlockProfileMemberPlayerStatsWinter struct {
	MostCannonballsHit   *float64 `json:"most_cannonballs_hit,omitempty"`
	MostDamageDealt      float64  `json:"most_damage_dealt"`
	MostMagmaDamageDealt *float64 `json:"most_magma_damage_dealt,omitempty"`
	MostSnowballsHit     *float64 `json:"most_snowballs_hit,omitempty"`
}

type _SkyBlockProfileMemberPlayerStatsWinter SkyBlockProfileMemberPlayerStatsWinter

// NewSkyBlockProfileMemberPlayerStatsWinter instantiates a new SkyBlockProfileMemberPlayerStatsWinter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerStatsWinter(mostDamageDealt float64) *SkyBlockProfileMemberPlayerStatsWinter {
	this := SkyBlockProfileMemberPlayerStatsWinter{}
	this.MostDamageDealt = mostDamageDealt
	return &this
}

// NewSkyBlockProfileMemberPlayerStatsWinterWithDefaults instantiates a new SkyBlockProfileMemberPlayerStatsWinter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerStatsWinterWithDefaults() *SkyBlockProfileMemberPlayerStatsWinter {
	this := SkyBlockProfileMemberPlayerStatsWinter{}
	return &this
}

// GetMostCannonballsHit returns the MostCannonballsHit field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostCannonballsHit() float64 {
	if o == nil || IsNil(o.MostCannonballsHit) {
		var ret float64
		return ret
	}
	return *o.MostCannonballsHit
}

// GetMostCannonballsHitOk returns a tuple with the MostCannonballsHit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostCannonballsHitOk() (*float64, bool) {
	if o == nil || IsNil(o.MostCannonballsHit) {
		return nil, false
	}
	return o.MostCannonballsHit, true
}

// HasMostCannonballsHit returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) HasMostCannonballsHit() bool {
	if o != nil && !IsNil(o.MostCannonballsHit) {
		return true
	}

	return false
}

// SetMostCannonballsHit gets a reference to the given float64 and assigns it to the MostCannonballsHit field.
func (o *SkyBlockProfileMemberPlayerStatsWinter) SetMostCannonballsHit(v float64) {
	o.MostCannonballsHit = &v
}

// GetMostDamageDealt returns the MostDamageDealt field value
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostDamageDealt() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MostDamageDealt
}

// GetMostDamageDealtOk returns a tuple with the MostDamageDealt field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostDamageDealtOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MostDamageDealt, true
}

// SetMostDamageDealt sets field value
func (o *SkyBlockProfileMemberPlayerStatsWinter) SetMostDamageDealt(v float64) {
	o.MostDamageDealt = v
}

// GetMostMagmaDamageDealt returns the MostMagmaDamageDealt field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostMagmaDamageDealt() float64 {
	if o == nil || IsNil(o.MostMagmaDamageDealt) {
		var ret float64
		return ret
	}
	return *o.MostMagmaDamageDealt
}

// GetMostMagmaDamageDealtOk returns a tuple with the MostMagmaDamageDealt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostMagmaDamageDealtOk() (*float64, bool) {
	if o == nil || IsNil(o.MostMagmaDamageDealt) {
		return nil, false
	}
	return o.MostMagmaDamageDealt, true
}

// HasMostMagmaDamageDealt returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) HasMostMagmaDamageDealt() bool {
	if o != nil && !IsNil(o.MostMagmaDamageDealt) {
		return true
	}

	return false
}

// SetMostMagmaDamageDealt gets a reference to the given float64 and assigns it to the MostMagmaDamageDealt field.
func (o *SkyBlockProfileMemberPlayerStatsWinter) SetMostMagmaDamageDealt(v float64) {
	o.MostMagmaDamageDealt = &v
}

// GetMostSnowballsHit returns the MostSnowballsHit field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostSnowballsHit() float64 {
	if o == nil || IsNil(o.MostSnowballsHit) {
		var ret float64
		return ret
	}
	return *o.MostSnowballsHit
}

// GetMostSnowballsHitOk returns a tuple with the MostSnowballsHit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) GetMostSnowballsHitOk() (*float64, bool) {
	if o == nil || IsNil(o.MostSnowballsHit) {
		return nil, false
	}
	return o.MostSnowballsHit, true
}

// HasMostSnowballsHit returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsWinter) HasMostSnowballsHit() bool {
	if o != nil && !IsNil(o.MostSnowballsHit) {
		return true
	}

	return false
}

// SetMostSnowballsHit gets a reference to the given float64 and assigns it to the MostSnowballsHit field.
func (o *SkyBlockProfileMemberPlayerStatsWinter) SetMostSnowballsHit(v float64) {
	o.MostSnowballsHit = &v
}

func (o SkyBlockProfileMemberPlayerStatsWinter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerStatsWinter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MostCannonballsHit) {
		toSerialize["most_cannonballs_hit"] = o.MostCannonballsHit
	}
	toSerialize["most_damage_dealt"] = o.MostDamageDealt
	if !IsNil(o.MostMagmaDamageDealt) {
		toSerialize["most_magma_damage_dealt"] = o.MostMagmaDamageDealt
	}
	if !IsNil(o.MostSnowballsHit) {
		toSerialize["most_snowballs_hit"] = o.MostSnowballsHit
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberPlayerStatsWinter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"most_damage_dealt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberPlayerStatsWinter := _SkyBlockProfileMemberPlayerStatsWinter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberPlayerStatsWinter)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberPlayerStatsWinter(varSkyBlockProfileMemberPlayerStatsWinter)

	return err
}

type NullableSkyBlockProfileMemberPlayerStatsWinter struct {
	value *SkyBlockProfileMemberPlayerStatsWinter
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerStatsWinter) Get() *SkyBlockProfileMemberPlayerStatsWinter {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerStatsWinter) Set(val *SkyBlockProfileMemberPlayerStatsWinter) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerStatsWinter) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerStatsWinter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerStatsWinter(val *SkyBlockProfileMemberPlayerStatsWinter) *NullableSkyBlockProfileMemberPlayerStatsWinter {
	return &NullableSkyBlockProfileMemberPlayerStatsWinter{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerStatsWinter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerStatsWinter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
