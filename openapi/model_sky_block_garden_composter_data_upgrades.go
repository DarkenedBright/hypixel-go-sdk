/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockGardenComposterDataUpgrades type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockGardenComposterDataUpgrades{}

// SkyBlockGardenComposterDataUpgrades struct for SkyBlockGardenComposterDataUpgrades
type SkyBlockGardenComposterDataUpgrades struct {
	CostReduction    *int64 `json:"cost_reduction,omitempty"`
	FuelCap          *int64 `json:"fuel_cap,omitempty"`
	MultiDrop        *int64 `json:"multi_drop,omitempty"`
	OrganicMatterCap *int64 `json:"organic_matter_cap,omitempty"`
	Speed            *int64 `json:"speed,omitempty"`
}

// NewSkyBlockGardenComposterDataUpgrades instantiates a new SkyBlockGardenComposterDataUpgrades object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockGardenComposterDataUpgrades() *SkyBlockGardenComposterDataUpgrades {
	this := SkyBlockGardenComposterDataUpgrades{}
	return &this
}

// NewSkyBlockGardenComposterDataUpgradesWithDefaults instantiates a new SkyBlockGardenComposterDataUpgrades object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockGardenComposterDataUpgradesWithDefaults() *SkyBlockGardenComposterDataUpgrades {
	this := SkyBlockGardenComposterDataUpgrades{}
	return &this
}

// GetCostReduction returns the CostReduction field value if set, zero value otherwise.
func (o *SkyBlockGardenComposterDataUpgrades) GetCostReduction() int64 {
	if o == nil || IsNil(o.CostReduction) {
		var ret int64
		return ret
	}
	return *o.CostReduction
}

// GetCostReductionOk returns a tuple with the CostReduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenComposterDataUpgrades) GetCostReductionOk() (*int64, bool) {
	if o == nil || IsNil(o.CostReduction) {
		return nil, false
	}
	return o.CostReduction, true
}

// HasCostReduction returns a boolean if a field has been set.
func (o *SkyBlockGardenComposterDataUpgrades) HasCostReduction() bool {
	if o != nil && !IsNil(o.CostReduction) {
		return true
	}

	return false
}

// SetCostReduction gets a reference to the given int64 and assigns it to the CostReduction field.
func (o *SkyBlockGardenComposterDataUpgrades) SetCostReduction(v int64) {
	o.CostReduction = &v
}

// GetFuelCap returns the FuelCap field value if set, zero value otherwise.
func (o *SkyBlockGardenComposterDataUpgrades) GetFuelCap() int64 {
	if o == nil || IsNil(o.FuelCap) {
		var ret int64
		return ret
	}
	return *o.FuelCap
}

// GetFuelCapOk returns a tuple with the FuelCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenComposterDataUpgrades) GetFuelCapOk() (*int64, bool) {
	if o == nil || IsNil(o.FuelCap) {
		return nil, false
	}
	return o.FuelCap, true
}

// HasFuelCap returns a boolean if a field has been set.
func (o *SkyBlockGardenComposterDataUpgrades) HasFuelCap() bool {
	if o != nil && !IsNil(o.FuelCap) {
		return true
	}

	return false
}

// SetFuelCap gets a reference to the given int64 and assigns it to the FuelCap field.
func (o *SkyBlockGardenComposterDataUpgrades) SetFuelCap(v int64) {
	o.FuelCap = &v
}

// GetMultiDrop returns the MultiDrop field value if set, zero value otherwise.
func (o *SkyBlockGardenComposterDataUpgrades) GetMultiDrop() int64 {
	if o == nil || IsNil(o.MultiDrop) {
		var ret int64
		return ret
	}
	return *o.MultiDrop
}

// GetMultiDropOk returns a tuple with the MultiDrop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenComposterDataUpgrades) GetMultiDropOk() (*int64, bool) {
	if o == nil || IsNil(o.MultiDrop) {
		return nil, false
	}
	return o.MultiDrop, true
}

// HasMultiDrop returns a boolean if a field has been set.
func (o *SkyBlockGardenComposterDataUpgrades) HasMultiDrop() bool {
	if o != nil && !IsNil(o.MultiDrop) {
		return true
	}

	return false
}

// SetMultiDrop gets a reference to the given int64 and assigns it to the MultiDrop field.
func (o *SkyBlockGardenComposterDataUpgrades) SetMultiDrop(v int64) {
	o.MultiDrop = &v
}

// GetOrganicMatterCap returns the OrganicMatterCap field value if set, zero value otherwise.
func (o *SkyBlockGardenComposterDataUpgrades) GetOrganicMatterCap() int64 {
	if o == nil || IsNil(o.OrganicMatterCap) {
		var ret int64
		return ret
	}
	return *o.OrganicMatterCap
}

// GetOrganicMatterCapOk returns a tuple with the OrganicMatterCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenComposterDataUpgrades) GetOrganicMatterCapOk() (*int64, bool) {
	if o == nil || IsNil(o.OrganicMatterCap) {
		return nil, false
	}
	return o.OrganicMatterCap, true
}

// HasOrganicMatterCap returns a boolean if a field has been set.
func (o *SkyBlockGardenComposterDataUpgrades) HasOrganicMatterCap() bool {
	if o != nil && !IsNil(o.OrganicMatterCap) {
		return true
	}

	return false
}

// SetOrganicMatterCap gets a reference to the given int64 and assigns it to the OrganicMatterCap field.
func (o *SkyBlockGardenComposterDataUpgrades) SetOrganicMatterCap(v int64) {
	o.OrganicMatterCap = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *SkyBlockGardenComposterDataUpgrades) GetSpeed() int64 {
	if o == nil || IsNil(o.Speed) {
		var ret int64
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenComposterDataUpgrades) GetSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *SkyBlockGardenComposterDataUpgrades) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int64 and assigns it to the Speed field.
func (o *SkyBlockGardenComposterDataUpgrades) SetSpeed(v int64) {
	o.Speed = &v
}

func (o SkyBlockGardenComposterDataUpgrades) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockGardenComposterDataUpgrades) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CostReduction) {
		toSerialize["cost_reduction"] = o.CostReduction
	}
	if !IsNil(o.FuelCap) {
		toSerialize["fuel_cap"] = o.FuelCap
	}
	if !IsNil(o.MultiDrop) {
		toSerialize["multi_drop"] = o.MultiDrop
	}
	if !IsNil(o.OrganicMatterCap) {
		toSerialize["organic_matter_cap"] = o.OrganicMatterCap
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	return toSerialize, nil
}

type NullableSkyBlockGardenComposterDataUpgrades struct {
	value *SkyBlockGardenComposterDataUpgrades
	isSet bool
}

func (v NullableSkyBlockGardenComposterDataUpgrades) Get() *SkyBlockGardenComposterDataUpgrades {
	return v.value
}

func (v *NullableSkyBlockGardenComposterDataUpgrades) Set(val *SkyBlockGardenComposterDataUpgrades) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenComposterDataUpgrades) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenComposterDataUpgrades) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenComposterDataUpgrades(val *SkyBlockGardenComposterDataUpgrades) *NullableSkyBlockGardenComposterDataUpgrades {
	return &NullableSkyBlockGardenComposterDataUpgrades{value: val, isSet: true}
}

func (v NullableSkyBlockGardenComposterDataUpgrades) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenComposterDataUpgrades) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
