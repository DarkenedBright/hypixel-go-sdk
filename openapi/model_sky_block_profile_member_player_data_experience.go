/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberPlayerDataExperience type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerDataExperience{}

// SkyBlockProfileMemberPlayerDataExperience struct for SkyBlockProfileMemberPlayerDataExperience
type SkyBlockProfileMemberPlayerDataExperience struct {
	SKILL_ALCHEMY       *float64 `json:"SKILL_ALCHEMY,omitempty"`
	SKILL_CARPENTRY     *float64 `json:"SKILL_CARPENTRY,omitempty"`
	SKILL_COMBAT        *float64 `json:"SKILL_COMBAT,omitempty"`
	SKILL_DUNGEONEERING *float64 `json:"SKILL_DUNGEONEERING,omitempty"`
	SKILL_ENCHANTING    *float64 `json:"SKILL_ENCHANTING,omitempty"`
	SKILL_FARMING       *float64 `json:"SKILL_FARMING,omitempty"`
	SKILL_FISHING       *float64 `json:"SKILL_FISHING,omitempty"`
	SKILL_FORAGING      *float64 `json:"SKILL_FORAGING,omitempty"`
	SKILL_MINING        *float64 `json:"SKILL_MINING,omitempty"`
	SKILL_RUNECRAFTING  *float64 `json:"SKILL_RUNECRAFTING,omitempty"`
	SKILL_SOCIAL        *float64 `json:"SKILL_SOCIAL,omitempty"`
	SKILL_TAMING        *float64 `json:"SKILL_TAMING,omitempty"`
}

// NewSkyBlockProfileMemberPlayerDataExperience instantiates a new SkyBlockProfileMemberPlayerDataExperience object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerDataExperience() *SkyBlockProfileMemberPlayerDataExperience {
	this := SkyBlockProfileMemberPlayerDataExperience{}
	return &this
}

// NewSkyBlockProfileMemberPlayerDataExperienceWithDefaults instantiates a new SkyBlockProfileMemberPlayerDataExperience object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerDataExperienceWithDefaults() *SkyBlockProfileMemberPlayerDataExperience {
	this := SkyBlockProfileMemberPlayerDataExperience{}
	return &this
}

// GetSKILL_ALCHEMY returns the SKILL_ALCHEMY field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_ALCHEMY() float64 {
	if o == nil || IsNil(o.SKILL_ALCHEMY) {
		var ret float64
		return ret
	}
	return *o.SKILL_ALCHEMY
}

// GetSKILL_ALCHEMYOk returns a tuple with the SKILL_ALCHEMY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_ALCHEMYOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_ALCHEMY) {
		return nil, false
	}
	return o.SKILL_ALCHEMY, true
}

// HasSKILL_ALCHEMY returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_ALCHEMY() bool {
	if o != nil && !IsNil(o.SKILL_ALCHEMY) {
		return true
	}

	return false
}

// SetSKILL_ALCHEMY gets a reference to the given float64 and assigns it to the SKILL_ALCHEMY field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_ALCHEMY(v float64) {
	o.SKILL_ALCHEMY = &v
}

// GetSKILL_CARPENTRY returns the SKILL_CARPENTRY field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_CARPENTRY() float64 {
	if o == nil || IsNil(o.SKILL_CARPENTRY) {
		var ret float64
		return ret
	}
	return *o.SKILL_CARPENTRY
}

// GetSKILL_CARPENTRYOk returns a tuple with the SKILL_CARPENTRY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_CARPENTRYOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_CARPENTRY) {
		return nil, false
	}
	return o.SKILL_CARPENTRY, true
}

// HasSKILL_CARPENTRY returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_CARPENTRY() bool {
	if o != nil && !IsNil(o.SKILL_CARPENTRY) {
		return true
	}

	return false
}

// SetSKILL_CARPENTRY gets a reference to the given float64 and assigns it to the SKILL_CARPENTRY field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_CARPENTRY(v float64) {
	o.SKILL_CARPENTRY = &v
}

// GetSKILL_COMBAT returns the SKILL_COMBAT field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_COMBAT() float64 {
	if o == nil || IsNil(o.SKILL_COMBAT) {
		var ret float64
		return ret
	}
	return *o.SKILL_COMBAT
}

// GetSKILL_COMBATOk returns a tuple with the SKILL_COMBAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_COMBATOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_COMBAT) {
		return nil, false
	}
	return o.SKILL_COMBAT, true
}

// HasSKILL_COMBAT returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_COMBAT() bool {
	if o != nil && !IsNil(o.SKILL_COMBAT) {
		return true
	}

	return false
}

// SetSKILL_COMBAT gets a reference to the given float64 and assigns it to the SKILL_COMBAT field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_COMBAT(v float64) {
	o.SKILL_COMBAT = &v
}

// GetSKILL_DUNGEONEERING returns the SKILL_DUNGEONEERING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_DUNGEONEERING() float64 {
	if o == nil || IsNil(o.SKILL_DUNGEONEERING) {
		var ret float64
		return ret
	}
	return *o.SKILL_DUNGEONEERING
}

// GetSKILL_DUNGEONEERINGOk returns a tuple with the SKILL_DUNGEONEERING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_DUNGEONEERINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_DUNGEONEERING) {
		return nil, false
	}
	return o.SKILL_DUNGEONEERING, true
}

// HasSKILL_DUNGEONEERING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_DUNGEONEERING() bool {
	if o != nil && !IsNil(o.SKILL_DUNGEONEERING) {
		return true
	}

	return false
}

// SetSKILL_DUNGEONEERING gets a reference to the given float64 and assigns it to the SKILL_DUNGEONEERING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_DUNGEONEERING(v float64) {
	o.SKILL_DUNGEONEERING = &v
}

// GetSKILL_ENCHANTING returns the SKILL_ENCHANTING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_ENCHANTING() float64 {
	if o == nil || IsNil(o.SKILL_ENCHANTING) {
		var ret float64
		return ret
	}
	return *o.SKILL_ENCHANTING
}

// GetSKILL_ENCHANTINGOk returns a tuple with the SKILL_ENCHANTING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_ENCHANTINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_ENCHANTING) {
		return nil, false
	}
	return o.SKILL_ENCHANTING, true
}

// HasSKILL_ENCHANTING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_ENCHANTING() bool {
	if o != nil && !IsNil(o.SKILL_ENCHANTING) {
		return true
	}

	return false
}

// SetSKILL_ENCHANTING gets a reference to the given float64 and assigns it to the SKILL_ENCHANTING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_ENCHANTING(v float64) {
	o.SKILL_ENCHANTING = &v
}

// GetSKILL_FARMING returns the SKILL_FARMING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_FARMING() float64 {
	if o == nil || IsNil(o.SKILL_FARMING) {
		var ret float64
		return ret
	}
	return *o.SKILL_FARMING
}

// GetSKILL_FARMINGOk returns a tuple with the SKILL_FARMING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_FARMINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_FARMING) {
		return nil, false
	}
	return o.SKILL_FARMING, true
}

// HasSKILL_FARMING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_FARMING() bool {
	if o != nil && !IsNil(o.SKILL_FARMING) {
		return true
	}

	return false
}

// SetSKILL_FARMING gets a reference to the given float64 and assigns it to the SKILL_FARMING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_FARMING(v float64) {
	o.SKILL_FARMING = &v
}

// GetSKILL_FISHING returns the SKILL_FISHING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_FISHING() float64 {
	if o == nil || IsNil(o.SKILL_FISHING) {
		var ret float64
		return ret
	}
	return *o.SKILL_FISHING
}

// GetSKILL_FISHINGOk returns a tuple with the SKILL_FISHING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_FISHINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_FISHING) {
		return nil, false
	}
	return o.SKILL_FISHING, true
}

// HasSKILL_FISHING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_FISHING() bool {
	if o != nil && !IsNil(o.SKILL_FISHING) {
		return true
	}

	return false
}

// SetSKILL_FISHING gets a reference to the given float64 and assigns it to the SKILL_FISHING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_FISHING(v float64) {
	o.SKILL_FISHING = &v
}

// GetSKILL_FORAGING returns the SKILL_FORAGING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_FORAGING() float64 {
	if o == nil || IsNil(o.SKILL_FORAGING) {
		var ret float64
		return ret
	}
	return *o.SKILL_FORAGING
}

// GetSKILL_FORAGINGOk returns a tuple with the SKILL_FORAGING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_FORAGINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_FORAGING) {
		return nil, false
	}
	return o.SKILL_FORAGING, true
}

// HasSKILL_FORAGING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_FORAGING() bool {
	if o != nil && !IsNil(o.SKILL_FORAGING) {
		return true
	}

	return false
}

// SetSKILL_FORAGING gets a reference to the given float64 and assigns it to the SKILL_FORAGING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_FORAGING(v float64) {
	o.SKILL_FORAGING = &v
}

// GetSKILL_MINING returns the SKILL_MINING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_MINING() float64 {
	if o == nil || IsNil(o.SKILL_MINING) {
		var ret float64
		return ret
	}
	return *o.SKILL_MINING
}

// GetSKILL_MININGOk returns a tuple with the SKILL_MINING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_MININGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_MINING) {
		return nil, false
	}
	return o.SKILL_MINING, true
}

// HasSKILL_MINING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_MINING() bool {
	if o != nil && !IsNil(o.SKILL_MINING) {
		return true
	}

	return false
}

// SetSKILL_MINING gets a reference to the given float64 and assigns it to the SKILL_MINING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_MINING(v float64) {
	o.SKILL_MINING = &v
}

// GetSKILL_RUNECRAFTING returns the SKILL_RUNECRAFTING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_RUNECRAFTING() float64 {
	if o == nil || IsNil(o.SKILL_RUNECRAFTING) {
		var ret float64
		return ret
	}
	return *o.SKILL_RUNECRAFTING
}

// GetSKILL_RUNECRAFTINGOk returns a tuple with the SKILL_RUNECRAFTING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_RUNECRAFTINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_RUNECRAFTING) {
		return nil, false
	}
	return o.SKILL_RUNECRAFTING, true
}

// HasSKILL_RUNECRAFTING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_RUNECRAFTING() bool {
	if o != nil && !IsNil(o.SKILL_RUNECRAFTING) {
		return true
	}

	return false
}

// SetSKILL_RUNECRAFTING gets a reference to the given float64 and assigns it to the SKILL_RUNECRAFTING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_RUNECRAFTING(v float64) {
	o.SKILL_RUNECRAFTING = &v
}

// GetSKILL_SOCIAL returns the SKILL_SOCIAL field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_SOCIAL() float64 {
	if o == nil || IsNil(o.SKILL_SOCIAL) {
		var ret float64
		return ret
	}
	return *o.SKILL_SOCIAL
}

// GetSKILL_SOCIALOk returns a tuple with the SKILL_SOCIAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_SOCIALOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_SOCIAL) {
		return nil, false
	}
	return o.SKILL_SOCIAL, true
}

// HasSKILL_SOCIAL returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_SOCIAL() bool {
	if o != nil && !IsNil(o.SKILL_SOCIAL) {
		return true
	}

	return false
}

// SetSKILL_SOCIAL gets a reference to the given float64 and assigns it to the SKILL_SOCIAL field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_SOCIAL(v float64) {
	o.SKILL_SOCIAL = &v
}

// GetSKILL_TAMING returns the SKILL_TAMING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_TAMING() float64 {
	if o == nil || IsNil(o.SKILL_TAMING) {
		var ret float64
		return ret
	}
	return *o.SKILL_TAMING
}

// GetSKILL_TAMINGOk returns a tuple with the SKILL_TAMING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) GetSKILL_TAMINGOk() (*float64, bool) {
	if o == nil || IsNil(o.SKILL_TAMING) {
		return nil, false
	}
	return o.SKILL_TAMING, true
}

// HasSKILL_TAMING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataExperience) HasSKILL_TAMING() bool {
	if o != nil && !IsNil(o.SKILL_TAMING) {
		return true
	}

	return false
}

// SetSKILL_TAMING gets a reference to the given float64 and assigns it to the SKILL_TAMING field.
func (o *SkyBlockProfileMemberPlayerDataExperience) SetSKILL_TAMING(v float64) {
	o.SKILL_TAMING = &v
}

func (o SkyBlockProfileMemberPlayerDataExperience) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerDataExperience) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SKILL_ALCHEMY) {
		toSerialize["SKILL_ALCHEMY"] = o.SKILL_ALCHEMY
	}
	if !IsNil(o.SKILL_CARPENTRY) {
		toSerialize["SKILL_CARPENTRY"] = o.SKILL_CARPENTRY
	}
	if !IsNil(o.SKILL_COMBAT) {
		toSerialize["SKILL_COMBAT"] = o.SKILL_COMBAT
	}
	if !IsNil(o.SKILL_DUNGEONEERING) {
		toSerialize["SKILL_DUNGEONEERING"] = o.SKILL_DUNGEONEERING
	}
	if !IsNil(o.SKILL_ENCHANTING) {
		toSerialize["SKILL_ENCHANTING"] = o.SKILL_ENCHANTING
	}
	if !IsNil(o.SKILL_FARMING) {
		toSerialize["SKILL_FARMING"] = o.SKILL_FARMING
	}
	if !IsNil(o.SKILL_FISHING) {
		toSerialize["SKILL_FISHING"] = o.SKILL_FISHING
	}
	if !IsNil(o.SKILL_FORAGING) {
		toSerialize["SKILL_FORAGING"] = o.SKILL_FORAGING
	}
	if !IsNil(o.SKILL_MINING) {
		toSerialize["SKILL_MINING"] = o.SKILL_MINING
	}
	if !IsNil(o.SKILL_RUNECRAFTING) {
		toSerialize["SKILL_RUNECRAFTING"] = o.SKILL_RUNECRAFTING
	}
	if !IsNil(o.SKILL_SOCIAL) {
		toSerialize["SKILL_SOCIAL"] = o.SKILL_SOCIAL
	}
	if !IsNil(o.SKILL_TAMING) {
		toSerialize["SKILL_TAMING"] = o.SKILL_TAMING
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberPlayerDataExperience struct {
	value *SkyBlockProfileMemberPlayerDataExperience
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerDataExperience) Get() *SkyBlockProfileMemberPlayerDataExperience {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerDataExperience) Set(val *SkyBlockProfileMemberPlayerDataExperience) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerDataExperience) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerDataExperience) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerDataExperience(val *SkyBlockProfileMemberPlayerDataExperience) *NullableSkyBlockProfileMemberPlayerDataExperience {
	return &NullableSkyBlockProfileMemberPlayerDataExperience{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerDataExperience) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerDataExperience) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
