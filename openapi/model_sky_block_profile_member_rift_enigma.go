/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberRiftEnigma type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRiftEnigma{}

// SkyBlockProfileMemberRiftEnigma struct for SkyBlockProfileMemberRiftEnigma
type SkyBlockProfileMemberRiftEnigma struct {
	BoughtCloak       *bool    `json:"bought_cloak,omitempty"`
	ClaimedBonusIndex *int64   `json:"claimed_bonus_index,omitempty"`
	FoundSouls        []string `json:"found_souls,omitempty"`
}

// NewSkyBlockProfileMemberRiftEnigma instantiates a new SkyBlockProfileMemberRiftEnigma object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRiftEnigma() *SkyBlockProfileMemberRiftEnigma {
	this := SkyBlockProfileMemberRiftEnigma{}
	return &this
}

// NewSkyBlockProfileMemberRiftEnigmaWithDefaults instantiates a new SkyBlockProfileMemberRiftEnigma object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftEnigmaWithDefaults() *SkyBlockProfileMemberRiftEnigma {
	this := SkyBlockProfileMemberRiftEnigma{}
	return &this
}

// GetBoughtCloak returns the BoughtCloak field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftEnigma) GetBoughtCloak() bool {
	if o == nil || IsNil(o.BoughtCloak) {
		var ret bool
		return ret
	}
	return *o.BoughtCloak
}

// GetBoughtCloakOk returns a tuple with the BoughtCloak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftEnigma) GetBoughtCloakOk() (*bool, bool) {
	if o == nil || IsNil(o.BoughtCloak) {
		return nil, false
	}
	return o.BoughtCloak, true
}

// HasBoughtCloak returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftEnigma) HasBoughtCloak() bool {
	if o != nil && !IsNil(o.BoughtCloak) {
		return true
	}

	return false
}

// SetBoughtCloak gets a reference to the given bool and assigns it to the BoughtCloak field.
func (o *SkyBlockProfileMemberRiftEnigma) SetBoughtCloak(v bool) {
	o.BoughtCloak = &v
}

// GetClaimedBonusIndex returns the ClaimedBonusIndex field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftEnigma) GetClaimedBonusIndex() int64 {
	if o == nil || IsNil(o.ClaimedBonusIndex) {
		var ret int64
		return ret
	}
	return *o.ClaimedBonusIndex
}

// GetClaimedBonusIndexOk returns a tuple with the ClaimedBonusIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftEnigma) GetClaimedBonusIndexOk() (*int64, bool) {
	if o == nil || IsNil(o.ClaimedBonusIndex) {
		return nil, false
	}
	return o.ClaimedBonusIndex, true
}

// HasClaimedBonusIndex returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftEnigma) HasClaimedBonusIndex() bool {
	if o != nil && !IsNil(o.ClaimedBonusIndex) {
		return true
	}

	return false
}

// SetClaimedBonusIndex gets a reference to the given int64 and assigns it to the ClaimedBonusIndex field.
func (o *SkyBlockProfileMemberRiftEnigma) SetClaimedBonusIndex(v int64) {
	o.ClaimedBonusIndex = &v
}

// GetFoundSouls returns the FoundSouls field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftEnigma) GetFoundSouls() []string {
	if o == nil || IsNil(o.FoundSouls) {
		var ret []string
		return ret
	}
	return o.FoundSouls
}

// GetFoundSoulsOk returns a tuple with the FoundSouls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftEnigma) GetFoundSoulsOk() ([]string, bool) {
	if o == nil || IsNil(o.FoundSouls) {
		return nil, false
	}
	return o.FoundSouls, true
}

// HasFoundSouls returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftEnigma) HasFoundSouls() bool {
	if o != nil && !IsNil(o.FoundSouls) {
		return true
	}

	return false
}

// SetFoundSouls gets a reference to the given []string and assigns it to the FoundSouls field.
func (o *SkyBlockProfileMemberRiftEnigma) SetFoundSouls(v []string) {
	o.FoundSouls = v
}

func (o SkyBlockProfileMemberRiftEnigma) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRiftEnigma) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoughtCloak) {
		toSerialize["bought_cloak"] = o.BoughtCloak
	}
	if !IsNil(o.ClaimedBonusIndex) {
		toSerialize["claimed_bonus_index"] = o.ClaimedBonusIndex
	}
	if !IsNil(o.FoundSouls) {
		toSerialize["found_souls"] = o.FoundSouls
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberRiftEnigma struct {
	value *SkyBlockProfileMemberRiftEnigma
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftEnigma) Get() *SkyBlockProfileMemberRiftEnigma {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftEnigma) Set(val *SkyBlockProfileMemberRiftEnigma) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftEnigma) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftEnigma) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftEnigma(val *SkyBlockProfileMemberRiftEnigma) *NullableSkyBlockProfileMemberRiftEnigma {
	return &NullableSkyBlockProfileMemberRiftEnigma{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftEnigma) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftEnigma) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
