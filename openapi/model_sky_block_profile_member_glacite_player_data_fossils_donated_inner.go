/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner the model 'SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner'
type SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner string

// List of SkyBlockProfileMemberGlacitePlayerData_fossils_donated_inner
const (
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_CLAW      SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "CLAW"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_CLUBBED   SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "CLUBBED"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_FOOTPRINT SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "FOOTPRINT"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_HELIX     SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "HELIX"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_SPINE     SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "SPINE"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_TUSK      SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "TUSK"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_UGLY      SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "UGLY"
	SKYBLOCKPROFILEMEMBERGLACITEPLAYERDATAFOSSILSDONATEDINNER_WEBBED    SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner = "WEBBED"
)

// All allowed values of SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner enum
var AllowedSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInnerEnumValues = []SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner{
	"CLAW",
	"CLUBBED",
	"FOOTPRINT",
	"HELIX",
	"SPINE",
	"TUSK",
	"UGLY",
	"WEBBED",
}

func (v *SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner(value)
	for _, existing := range AllowedSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner", value)
}

// NewSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInnerFromValue returns a pointer to a valid SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInnerFromValue(v string) (*SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner, error) {
	ev := SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner: valid values are %v", v, AllowedSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberGlacitePlayerData_fossils_donated_inner value
func (v SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) Ptr() *SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner {
	return &v
}

type NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner struct {
	value *SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner
	isSet bool
}

func (v NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) Get() *SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner {
	return v.value
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) Set(val *SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner(val *SkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) *NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner {
	return &NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerDataFossilsDonatedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
