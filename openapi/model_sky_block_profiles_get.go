/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfilesGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfilesGet{}

// SkyBlockProfilesGet struct for SkyBlockProfilesGet
type SkyBlockProfilesGet struct {
	Profiles []SkyBlockProfile `json:"profiles"`
	Success  bool              `json:"success"`
}

type _SkyBlockProfilesGet SkyBlockProfilesGet

// NewSkyBlockProfilesGet instantiates a new SkyBlockProfilesGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfilesGet(profiles []SkyBlockProfile, success bool) *SkyBlockProfilesGet {
	this := SkyBlockProfilesGet{}
	this.Profiles = profiles
	this.Success = success
	return &this
}

// NewSkyBlockProfilesGetWithDefaults instantiates a new SkyBlockProfilesGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfilesGetWithDefaults() *SkyBlockProfilesGet {
	this := SkyBlockProfilesGet{}
	return &this
}

// GetProfiles returns the Profiles field value
func (o *SkyBlockProfilesGet) GetProfiles() []SkyBlockProfile {
	if o == nil {
		var ret []SkyBlockProfile
		return ret
	}

	return o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfilesGet) GetProfilesOk() ([]SkyBlockProfile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Profiles, true
}

// SetProfiles sets field value
func (o *SkyBlockProfilesGet) SetProfiles(v []SkyBlockProfile) {
	o.Profiles = v
}

// GetSuccess returns the Success field value
func (o *SkyBlockProfilesGet) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfilesGet) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *SkyBlockProfilesGet) SetSuccess(v bool) {
	o.Success = v
}

func (o SkyBlockProfilesGet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfilesGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["profiles"] = o.Profiles
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

func (o *SkyBlockProfilesGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"profiles",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfilesGet := _SkyBlockProfilesGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfilesGet)

	if err != nil {
		return err
	}

	*o = SkyBlockProfilesGet(varSkyBlockProfilesGet)

	return err
}

type NullableSkyBlockProfilesGet struct {
	value *SkyBlockProfilesGet
	isSet bool
}

func (v NullableSkyBlockProfilesGet) Get() *SkyBlockProfilesGet {
	return v.value
}

func (v *NullableSkyBlockProfilesGet) Set(val *SkyBlockProfilesGet) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfilesGet) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfilesGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfilesGet(val *SkyBlockProfilesGet) *NullableSkyBlockProfilesGet {
	return &NullableSkyBlockProfilesGet{value: val, isSet: true}
}

func (v NullableSkyBlockProfilesGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfilesGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
