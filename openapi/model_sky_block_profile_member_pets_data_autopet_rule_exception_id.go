/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberPetsDataAutopetRuleExceptionId the model 'SkyBlockProfileMemberPetsDataAutopetRuleExceptionId'
type SkyBlockProfileMemberPetsDataAutopetRuleExceptionId string

// List of SkyBlockProfileMemberPetsDataAutopetRuleException_id
const (
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_DURING_EVENT        SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "DURING_EVENT"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_FRIDAY              SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "FRIDAY"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_HAS_EQUIPPED_PET    SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "HAS_EQUIPPED_PET"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_IS_IN_ISLAND        SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "IS_IN_ISLAND"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_MONDAY              SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "MONDAY"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_NOT_IN_ISLAND       SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "NOT_IN_ISLAND"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_SATURDAY            SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "SATURDAY"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_SPAWNED_SLAYER_BOSS SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "SPAWNED_SLAYER_BOSS"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_SUNDAY              SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "SUNDAY"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_THURSDAY            SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "THURSDAY"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_TUESDAY             SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "TUESDAY"
	SKYBLOCKPROFILEMEMBERPETSDATAAUTOPETRULEEXCEPTIONID_WEDNESDAY           SkyBlockProfileMemberPetsDataAutopetRuleExceptionId = "WEDNESDAY"
)

// All allowed values of SkyBlockProfileMemberPetsDataAutopetRuleExceptionId enum
var AllowedSkyBlockProfileMemberPetsDataAutopetRuleExceptionIdEnumValues = []SkyBlockProfileMemberPetsDataAutopetRuleExceptionId{
	"DURING_EVENT",
	"FRIDAY",
	"HAS_EQUIPPED_PET",
	"IS_IN_ISLAND",
	"MONDAY",
	"NOT_IN_ISLAND",
	"SATURDAY",
	"SPAWNED_SLAYER_BOSS",
	"SUNDAY",
	"THURSDAY",
	"TUESDAY",
	"WEDNESDAY",
}

func (v *SkyBlockProfileMemberPetsDataAutopetRuleExceptionId) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberPetsDataAutopetRuleExceptionId(value)
	for _, existing := range AllowedSkyBlockProfileMemberPetsDataAutopetRuleExceptionIdEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberPetsDataAutopetRuleExceptionId", value)
}

// NewSkyBlockProfileMemberPetsDataAutopetRuleExceptionIdFromValue returns a pointer to a valid SkyBlockProfileMemberPetsDataAutopetRuleExceptionId
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberPetsDataAutopetRuleExceptionIdFromValue(v string) (*SkyBlockProfileMemberPetsDataAutopetRuleExceptionId, error) {
	ev := SkyBlockProfileMemberPetsDataAutopetRuleExceptionId(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberPetsDataAutopetRuleExceptionId: valid values are %v", v, AllowedSkyBlockProfileMemberPetsDataAutopetRuleExceptionIdEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberPetsDataAutopetRuleExceptionId) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberPetsDataAutopetRuleExceptionIdEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberPetsDataAutopetRuleException_id value
func (v SkyBlockProfileMemberPetsDataAutopetRuleExceptionId) Ptr() *SkyBlockProfileMemberPetsDataAutopetRuleExceptionId {
	return &v
}

type NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId struct {
	value *SkyBlockProfileMemberPetsDataAutopetRuleExceptionId
	isSet bool
}

func (v NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId) Get() *SkyBlockProfileMemberPetsDataAutopetRuleExceptionId {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId) Set(val *SkyBlockProfileMemberPetsDataAutopetRuleExceptionId) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId(val *SkyBlockProfileMemberPetsDataAutopetRuleExceptionId) *NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId {
	return &NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPetsDataAutopetRuleExceptionId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
