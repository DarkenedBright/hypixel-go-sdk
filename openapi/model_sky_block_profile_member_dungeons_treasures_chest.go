/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberDungeonsTreasuresChest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberDungeonsTreasuresChest{}

// SkyBlockProfileMemberDungeonsTreasuresChest struct for SkyBlockProfileMemberDungeonsTreasuresChest
type SkyBlockProfileMemberDungeonsTreasuresChest struct {
	ChestId       string                                             `json:"chest_id"`
	Paid          bool                                               `json:"paid"`
	Quality       int64                                              `json:"quality"`
	Rerolls       int64                                              `json:"rerolls"`
	Rewards       SkyBlockProfileMemberDungeonsTreasuresChestRewards `json:"rewards"`
	RunId         string                                             `json:"run_id"`
	ShinyEligible bool                                               `json:"shiny_eligible"`
	TreasureType  string                                             `json:"treasure_type"`
}

type _SkyBlockProfileMemberDungeonsTreasuresChest SkyBlockProfileMemberDungeonsTreasuresChest

// NewSkyBlockProfileMemberDungeonsTreasuresChest instantiates a new SkyBlockProfileMemberDungeonsTreasuresChest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberDungeonsTreasuresChest(chestId string, paid bool, quality int64, rerolls int64, rewards SkyBlockProfileMemberDungeonsTreasuresChestRewards, runId string, shinyEligible bool, treasureType string) *SkyBlockProfileMemberDungeonsTreasuresChest {
	this := SkyBlockProfileMemberDungeonsTreasuresChest{}
	this.ChestId = chestId
	this.Paid = paid
	this.Quality = quality
	this.Rerolls = rerolls
	this.Rewards = rewards
	this.RunId = runId
	this.ShinyEligible = shinyEligible
	this.TreasureType = treasureType
	return &this
}

// NewSkyBlockProfileMemberDungeonsTreasuresChestWithDefaults instantiates a new SkyBlockProfileMemberDungeonsTreasuresChest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberDungeonsTreasuresChestWithDefaults() *SkyBlockProfileMemberDungeonsTreasuresChest {
	this := SkyBlockProfileMemberDungeonsTreasuresChest{}
	return &this
}

// GetChestId returns the ChestId field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetChestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChestId
}

// GetChestIdOk returns a tuple with the ChestId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetChestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChestId, true
}

// SetChestId sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetChestId(v string) {
	o.ChestId = v
}

// GetPaid returns the Paid field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetPaid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Paid
}

// GetPaidOk returns a tuple with the Paid field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetPaidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Paid, true
}

// SetPaid sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetPaid(v bool) {
	o.Paid = v
}

// GetQuality returns the Quality field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetQuality() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quality
}

// GetQualityOk returns a tuple with the Quality field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetQualityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quality, true
}

// SetQuality sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetQuality(v int64) {
	o.Quality = v
}

// GetRerolls returns the Rerolls field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRerolls() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Rerolls
}

// GetRerollsOk returns a tuple with the Rerolls field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRerollsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rerolls, true
}

// SetRerolls sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetRerolls(v int64) {
	o.Rerolls = v
}

// GetRewards returns the Rewards field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRewards() SkyBlockProfileMemberDungeonsTreasuresChestRewards {
	if o == nil {
		var ret SkyBlockProfileMemberDungeonsTreasuresChestRewards
		return ret
	}

	return o.Rewards
}

// GetRewardsOk returns a tuple with the Rewards field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRewardsOk() (*SkyBlockProfileMemberDungeonsTreasuresChestRewards, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rewards, true
}

// SetRewards sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetRewards(v SkyBlockProfileMemberDungeonsTreasuresChestRewards) {
	o.Rewards = v
}

// GetRunId returns the RunId field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRunId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RunId
}

// GetRunIdOk returns a tuple with the RunId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunId, true
}

// SetRunId sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetRunId(v string) {
	o.RunId = v
}

// GetShinyEligible returns the ShinyEligible field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetShinyEligible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShinyEligible
}

// GetShinyEligibleOk returns a tuple with the ShinyEligible field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetShinyEligibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShinyEligible, true
}

// SetShinyEligible sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetShinyEligible(v bool) {
	o.ShinyEligible = v
}

// GetTreasureType returns the TreasureType field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetTreasureType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TreasureType
}

// GetTreasureTypeOk returns a tuple with the TreasureType field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetTreasureTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TreasureType, true
}

// SetTreasureType sets field value
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetTreasureType(v string) {
	o.TreasureType = v
}

func (o SkyBlockProfileMemberDungeonsTreasuresChest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberDungeonsTreasuresChest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chest_id"] = o.ChestId
	toSerialize["paid"] = o.Paid
	toSerialize["quality"] = o.Quality
	toSerialize["rerolls"] = o.Rerolls
	toSerialize["rewards"] = o.Rewards
	toSerialize["run_id"] = o.RunId
	toSerialize["shiny_eligible"] = o.ShinyEligible
	toSerialize["treasure_type"] = o.TreasureType
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberDungeonsTreasuresChest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chest_id",
		"paid",
		"quality",
		"rerolls",
		"rewards",
		"run_id",
		"shiny_eligible",
		"treasure_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberDungeonsTreasuresChest := _SkyBlockProfileMemberDungeonsTreasuresChest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberDungeonsTreasuresChest)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberDungeonsTreasuresChest(varSkyBlockProfileMemberDungeonsTreasuresChest)

	return err
}

type NullableSkyBlockProfileMemberDungeonsTreasuresChest struct {
	value *SkyBlockProfileMemberDungeonsTreasuresChest
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsTreasuresChest) Get() *SkyBlockProfileMemberDungeonsTreasuresChest {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsTreasuresChest) Set(val *SkyBlockProfileMemberDungeonsTreasuresChest) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsTreasuresChest) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsTreasuresChest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsTreasuresChest(val *SkyBlockProfileMemberDungeonsTreasuresChest) *NullableSkyBlockProfileMemberDungeonsTreasuresChest {
	return &NullableSkyBlockProfileMemberDungeonsTreasuresChest{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsTreasuresChest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsTreasuresChest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
