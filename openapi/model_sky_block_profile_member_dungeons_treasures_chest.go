/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberDungeonsTreasuresChest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberDungeonsTreasuresChest{}

// SkyBlockProfileMemberDungeonsTreasuresChest struct for SkyBlockProfileMemberDungeonsTreasuresChest
type SkyBlockProfileMemberDungeonsTreasuresChest struct {
	ChestId       *string                                             `json:"chest_id,omitempty"`
	Paid          *bool                                               `json:"paid,omitempty"`
	Quality       *int64                                              `json:"quality,omitempty"`
	Rerolls       *int64                                              `json:"rerolls,omitempty"`
	Rewards       *SkyBlockProfileMemberDungeonsTreasuresChestRewards `json:"rewards,omitempty"`
	RunId         *string                                             `json:"run_id,omitempty"`
	ShinyEligible *bool                                               `json:"shiny_eligible,omitempty"`
	TreasureType  *string                                             `json:"treasure_type,omitempty"`
}

// NewSkyBlockProfileMemberDungeonsTreasuresChest instantiates a new SkyBlockProfileMemberDungeonsTreasuresChest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberDungeonsTreasuresChest() *SkyBlockProfileMemberDungeonsTreasuresChest {
	this := SkyBlockProfileMemberDungeonsTreasuresChest{}
	return &this
}

// NewSkyBlockProfileMemberDungeonsTreasuresChestWithDefaults instantiates a new SkyBlockProfileMemberDungeonsTreasuresChest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberDungeonsTreasuresChestWithDefaults() *SkyBlockProfileMemberDungeonsTreasuresChest {
	this := SkyBlockProfileMemberDungeonsTreasuresChest{}
	return &this
}

// GetChestId returns the ChestId field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetChestId() string {
	if o == nil || IsNil(o.ChestId) {
		var ret string
		return ret
	}
	return *o.ChestId
}

// GetChestIdOk returns a tuple with the ChestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetChestIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChestId) {
		return nil, false
	}
	return o.ChestId, true
}

// HasChestId returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasChestId() bool {
	if o != nil && !IsNil(o.ChestId) {
		return true
	}

	return false
}

// SetChestId gets a reference to the given string and assigns it to the ChestId field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetChestId(v string) {
	o.ChestId = &v
}

// GetPaid returns the Paid field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetPaid() bool {
	if o == nil || IsNil(o.Paid) {
		var ret bool
		return ret
	}
	return *o.Paid
}

// GetPaidOk returns a tuple with the Paid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetPaidOk() (*bool, bool) {
	if o == nil || IsNil(o.Paid) {
		return nil, false
	}
	return o.Paid, true
}

// HasPaid returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasPaid() bool {
	if o != nil && !IsNil(o.Paid) {
		return true
	}

	return false
}

// SetPaid gets a reference to the given bool and assigns it to the Paid field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetPaid(v bool) {
	o.Paid = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetQuality() int64 {
	if o == nil || IsNil(o.Quality) {
		var ret int64
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetQualityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given int64 and assigns it to the Quality field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetQuality(v int64) {
	o.Quality = &v
}

// GetRerolls returns the Rerolls field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRerolls() int64 {
	if o == nil || IsNil(o.Rerolls) {
		var ret int64
		return ret
	}
	return *o.Rerolls
}

// GetRerollsOk returns a tuple with the Rerolls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRerollsOk() (*int64, bool) {
	if o == nil || IsNil(o.Rerolls) {
		return nil, false
	}
	return o.Rerolls, true
}

// HasRerolls returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasRerolls() bool {
	if o != nil && !IsNil(o.Rerolls) {
		return true
	}

	return false
}

// SetRerolls gets a reference to the given int64 and assigns it to the Rerolls field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetRerolls(v int64) {
	o.Rerolls = &v
}

// GetRewards returns the Rewards field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRewards() SkyBlockProfileMemberDungeonsTreasuresChestRewards {
	if o == nil || IsNil(o.Rewards) {
		var ret SkyBlockProfileMemberDungeonsTreasuresChestRewards
		return ret
	}
	return *o.Rewards
}

// GetRewardsOk returns a tuple with the Rewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRewardsOk() (*SkyBlockProfileMemberDungeonsTreasuresChestRewards, bool) {
	if o == nil || IsNil(o.Rewards) {
		return nil, false
	}
	return o.Rewards, true
}

// HasRewards returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasRewards() bool {
	if o != nil && !IsNil(o.Rewards) {
		return true
	}

	return false
}

// SetRewards gets a reference to the given SkyBlockProfileMemberDungeonsTreasuresChestRewards and assigns it to the Rewards field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetRewards(v SkyBlockProfileMemberDungeonsTreasuresChestRewards) {
	o.Rewards = &v
}

// GetRunId returns the RunId field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRunId() string {
	if o == nil || IsNil(o.RunId) {
		var ret string
		return ret
	}
	return *o.RunId
}

// GetRunIdOk returns a tuple with the RunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetRunIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunId) {
		return nil, false
	}
	return o.RunId, true
}

// HasRunId returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasRunId() bool {
	if o != nil && !IsNil(o.RunId) {
		return true
	}

	return false
}

// SetRunId gets a reference to the given string and assigns it to the RunId field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetRunId(v string) {
	o.RunId = &v
}

// GetShinyEligible returns the ShinyEligible field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetShinyEligible() bool {
	if o == nil || IsNil(o.ShinyEligible) {
		var ret bool
		return ret
	}
	return *o.ShinyEligible
}

// GetShinyEligibleOk returns a tuple with the ShinyEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetShinyEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.ShinyEligible) {
		return nil, false
	}
	return o.ShinyEligible, true
}

// HasShinyEligible returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasShinyEligible() bool {
	if o != nil && !IsNil(o.ShinyEligible) {
		return true
	}

	return false
}

// SetShinyEligible gets a reference to the given bool and assigns it to the ShinyEligible field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetShinyEligible(v bool) {
	o.ShinyEligible = &v
}

// GetTreasureType returns the TreasureType field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetTreasureType() string {
	if o == nil || IsNil(o.TreasureType) {
		var ret string
		return ret
	}
	return *o.TreasureType
}

// GetTreasureTypeOk returns a tuple with the TreasureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) GetTreasureTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TreasureType) {
		return nil, false
	}
	return o.TreasureType, true
}

// HasTreasureType returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) HasTreasureType() bool {
	if o != nil && !IsNil(o.TreasureType) {
		return true
	}

	return false
}

// SetTreasureType gets a reference to the given string and assigns it to the TreasureType field.
func (o *SkyBlockProfileMemberDungeonsTreasuresChest) SetTreasureType(v string) {
	o.TreasureType = &v
}

func (o SkyBlockProfileMemberDungeonsTreasuresChest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberDungeonsTreasuresChest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChestId) {
		toSerialize["chest_id"] = o.ChestId
	}
	if !IsNil(o.Paid) {
		toSerialize["paid"] = o.Paid
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !IsNil(o.Rerolls) {
		toSerialize["rerolls"] = o.Rerolls
	}
	if !IsNil(o.Rewards) {
		toSerialize["rewards"] = o.Rewards
	}
	if !IsNil(o.RunId) {
		toSerialize["run_id"] = o.RunId
	}
	if !IsNil(o.ShinyEligible) {
		toSerialize["shiny_eligible"] = o.ShinyEligible
	}
	if !IsNil(o.TreasureType) {
		toSerialize["treasure_type"] = o.TreasureType
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberDungeonsTreasuresChest struct {
	value *SkyBlockProfileMemberDungeonsTreasuresChest
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsTreasuresChest) Get() *SkyBlockProfileMemberDungeonsTreasuresChest {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsTreasuresChest) Set(val *SkyBlockProfileMemberDungeonsTreasuresChest) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsTreasuresChest) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsTreasuresChest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsTreasuresChest(val *SkyBlockProfileMemberDungeonsTreasuresChest) *NullableSkyBlockProfileMemberDungeonsTreasuresChest {
	return &NullableSkyBlockProfileMemberDungeonsTreasuresChest{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsTreasuresChest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsTreasuresChest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
