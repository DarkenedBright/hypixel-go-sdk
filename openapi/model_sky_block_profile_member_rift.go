/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberRift type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRift{}

// SkyBlockProfileMemberRift struct for SkyBlockProfileMemberRift
type SkyBlockProfileMemberRift struct {
	Access                      *SkyBlockProfileMemberRiftAccess                            `json:"access,omitempty"`
	BlackLagoon                 *SkyBlockProfileMemberRiftBlackLagoon                       `json:"black_lagoon,omitempty"`
	Castle                      *SkyBlockProfileMemberRiftCastle                            `json:"castle,omitempty"`
	DeadCats                    *SkyBlockProfileMemberRiftDeadCats                          `json:"dead_cats,omitempty"`
	Dreadfarm                   *SkyBlockProfileMemberRiftDreadfarm                         `json:"dreadfarm,omitempty"`
	Enigma                      SkyBlockProfileMemberRiftEnigma                             `json:"enigma"`
	Gallery                     *SkyBlockProfileMemberRiftGallery                           `json:"gallery,omitempty"`
	Inventory                   *SkyBlockProfileMemberRiftInventory                         `json:"inventory,omitempty"`
	LifetimePurchasedBoundaries []SkyBlockProfileMemberRiftLifetimePurchasedBoundariesInner `json:"lifetime_purchased_boundaries,omitempty"`
	SlayerQuest                 *SkyBlockProfileMemberRiftSlayerQuest                       `json:"slayer_quest,omitempty"`
	VillagePlaza                *SkyBlockProfileMemberRiftVillagePlaza                      `json:"village_plaza,omitempty"`
	WestVillage                 *SkyBlockProfileMemberRiftWestVillage                       `json:"west_village,omitempty"`
	WitherCage                  *SkyBlockProfileMemberRiftWitherCage                        `json:"wither_cage,omitempty"`
	WizardTower                 SkyBlockProfileMemberRiftWizardTower                        `json:"wizard_tower"`
	WyldWoods                   *SkyBlockProfileMemberRiftWyldWoods                         `json:"wyld_woods,omitempty"`
}

type _SkyBlockProfileMemberRift SkyBlockProfileMemberRift

// NewSkyBlockProfileMemberRift instantiates a new SkyBlockProfileMemberRift object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRift(enigma SkyBlockProfileMemberRiftEnigma, wizardTower SkyBlockProfileMemberRiftWizardTower) *SkyBlockProfileMemberRift {
	this := SkyBlockProfileMemberRift{}
	this.Enigma = enigma
	this.WizardTower = wizardTower
	return &this
}

// NewSkyBlockProfileMemberRiftWithDefaults instantiates a new SkyBlockProfileMemberRift object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftWithDefaults() *SkyBlockProfileMemberRift {
	this := SkyBlockProfileMemberRift{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetAccess() SkyBlockProfileMemberRiftAccess {
	if o == nil || IsNil(o.Access) {
		var ret SkyBlockProfileMemberRiftAccess
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetAccessOk() (*SkyBlockProfileMemberRiftAccess, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given SkyBlockProfileMemberRiftAccess and assigns it to the Access field.
func (o *SkyBlockProfileMemberRift) SetAccess(v SkyBlockProfileMemberRiftAccess) {
	o.Access = &v
}

// GetBlackLagoon returns the BlackLagoon field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetBlackLagoon() SkyBlockProfileMemberRiftBlackLagoon {
	if o == nil || IsNil(o.BlackLagoon) {
		var ret SkyBlockProfileMemberRiftBlackLagoon
		return ret
	}
	return *o.BlackLagoon
}

// GetBlackLagoonOk returns a tuple with the BlackLagoon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetBlackLagoonOk() (*SkyBlockProfileMemberRiftBlackLagoon, bool) {
	if o == nil || IsNil(o.BlackLagoon) {
		return nil, false
	}
	return o.BlackLagoon, true
}

// HasBlackLagoon returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasBlackLagoon() bool {
	if o != nil && !IsNil(o.BlackLagoon) {
		return true
	}

	return false
}

// SetBlackLagoon gets a reference to the given SkyBlockProfileMemberRiftBlackLagoon and assigns it to the BlackLagoon field.
func (o *SkyBlockProfileMemberRift) SetBlackLagoon(v SkyBlockProfileMemberRiftBlackLagoon) {
	o.BlackLagoon = &v
}

// GetCastle returns the Castle field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetCastle() SkyBlockProfileMemberRiftCastle {
	if o == nil || IsNil(o.Castle) {
		var ret SkyBlockProfileMemberRiftCastle
		return ret
	}
	return *o.Castle
}

// GetCastleOk returns a tuple with the Castle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetCastleOk() (*SkyBlockProfileMemberRiftCastle, bool) {
	if o == nil || IsNil(o.Castle) {
		return nil, false
	}
	return o.Castle, true
}

// HasCastle returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasCastle() bool {
	if o != nil && !IsNil(o.Castle) {
		return true
	}

	return false
}

// SetCastle gets a reference to the given SkyBlockProfileMemberRiftCastle and assigns it to the Castle field.
func (o *SkyBlockProfileMemberRift) SetCastle(v SkyBlockProfileMemberRiftCastle) {
	o.Castle = &v
}

// GetDeadCats returns the DeadCats field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetDeadCats() SkyBlockProfileMemberRiftDeadCats {
	if o == nil || IsNil(o.DeadCats) {
		var ret SkyBlockProfileMemberRiftDeadCats
		return ret
	}
	return *o.DeadCats
}

// GetDeadCatsOk returns a tuple with the DeadCats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetDeadCatsOk() (*SkyBlockProfileMemberRiftDeadCats, bool) {
	if o == nil || IsNil(o.DeadCats) {
		return nil, false
	}
	return o.DeadCats, true
}

// HasDeadCats returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasDeadCats() bool {
	if o != nil && !IsNil(o.DeadCats) {
		return true
	}

	return false
}

// SetDeadCats gets a reference to the given SkyBlockProfileMemberRiftDeadCats and assigns it to the DeadCats field.
func (o *SkyBlockProfileMemberRift) SetDeadCats(v SkyBlockProfileMemberRiftDeadCats) {
	o.DeadCats = &v
}

// GetDreadfarm returns the Dreadfarm field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetDreadfarm() SkyBlockProfileMemberRiftDreadfarm {
	if o == nil || IsNil(o.Dreadfarm) {
		var ret SkyBlockProfileMemberRiftDreadfarm
		return ret
	}
	return *o.Dreadfarm
}

// GetDreadfarmOk returns a tuple with the Dreadfarm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetDreadfarmOk() (*SkyBlockProfileMemberRiftDreadfarm, bool) {
	if o == nil || IsNil(o.Dreadfarm) {
		return nil, false
	}
	return o.Dreadfarm, true
}

// HasDreadfarm returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasDreadfarm() bool {
	if o != nil && !IsNil(o.Dreadfarm) {
		return true
	}

	return false
}

// SetDreadfarm gets a reference to the given SkyBlockProfileMemberRiftDreadfarm and assigns it to the Dreadfarm field.
func (o *SkyBlockProfileMemberRift) SetDreadfarm(v SkyBlockProfileMemberRiftDreadfarm) {
	o.Dreadfarm = &v
}

// GetEnigma returns the Enigma field value
func (o *SkyBlockProfileMemberRift) GetEnigma() SkyBlockProfileMemberRiftEnigma {
	if o == nil {
		var ret SkyBlockProfileMemberRiftEnigma
		return ret
	}

	return o.Enigma
}

// GetEnigmaOk returns a tuple with the Enigma field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetEnigmaOk() (*SkyBlockProfileMemberRiftEnigma, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enigma, true
}

// SetEnigma sets field value
func (o *SkyBlockProfileMemberRift) SetEnigma(v SkyBlockProfileMemberRiftEnigma) {
	o.Enigma = v
}

// GetGallery returns the Gallery field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetGallery() SkyBlockProfileMemberRiftGallery {
	if o == nil || IsNil(o.Gallery) {
		var ret SkyBlockProfileMemberRiftGallery
		return ret
	}
	return *o.Gallery
}

// GetGalleryOk returns a tuple with the Gallery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetGalleryOk() (*SkyBlockProfileMemberRiftGallery, bool) {
	if o == nil || IsNil(o.Gallery) {
		return nil, false
	}
	return o.Gallery, true
}

// HasGallery returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasGallery() bool {
	if o != nil && !IsNil(o.Gallery) {
		return true
	}

	return false
}

// SetGallery gets a reference to the given SkyBlockProfileMemberRiftGallery and assigns it to the Gallery field.
func (o *SkyBlockProfileMemberRift) SetGallery(v SkyBlockProfileMemberRiftGallery) {
	o.Gallery = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetInventory() SkyBlockProfileMemberRiftInventory {
	if o == nil || IsNil(o.Inventory) {
		var ret SkyBlockProfileMemberRiftInventory
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetInventoryOk() (*SkyBlockProfileMemberRiftInventory, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given SkyBlockProfileMemberRiftInventory and assigns it to the Inventory field.
func (o *SkyBlockProfileMemberRift) SetInventory(v SkyBlockProfileMemberRiftInventory) {
	o.Inventory = &v
}

// GetLifetimePurchasedBoundaries returns the LifetimePurchasedBoundaries field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetLifetimePurchasedBoundaries() []SkyBlockProfileMemberRiftLifetimePurchasedBoundariesInner {
	if o == nil || IsNil(o.LifetimePurchasedBoundaries) {
		var ret []SkyBlockProfileMemberRiftLifetimePurchasedBoundariesInner
		return ret
	}
	return o.LifetimePurchasedBoundaries
}

// GetLifetimePurchasedBoundariesOk returns a tuple with the LifetimePurchasedBoundaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetLifetimePurchasedBoundariesOk() ([]SkyBlockProfileMemberRiftLifetimePurchasedBoundariesInner, bool) {
	if o == nil || IsNil(o.LifetimePurchasedBoundaries) {
		return nil, false
	}
	return o.LifetimePurchasedBoundaries, true
}

// HasLifetimePurchasedBoundaries returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasLifetimePurchasedBoundaries() bool {
	if o != nil && !IsNil(o.LifetimePurchasedBoundaries) {
		return true
	}

	return false
}

// SetLifetimePurchasedBoundaries gets a reference to the given []SkyBlockProfileMemberRiftLifetimePurchasedBoundariesInner and assigns it to the LifetimePurchasedBoundaries field.
func (o *SkyBlockProfileMemberRift) SetLifetimePurchasedBoundaries(v []SkyBlockProfileMemberRiftLifetimePurchasedBoundariesInner) {
	o.LifetimePurchasedBoundaries = v
}

// GetSlayerQuest returns the SlayerQuest field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetSlayerQuest() SkyBlockProfileMemberRiftSlayerQuest {
	if o == nil || IsNil(o.SlayerQuest) {
		var ret SkyBlockProfileMemberRiftSlayerQuest
		return ret
	}
	return *o.SlayerQuest
}

// GetSlayerQuestOk returns a tuple with the SlayerQuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetSlayerQuestOk() (*SkyBlockProfileMemberRiftSlayerQuest, bool) {
	if o == nil || IsNil(o.SlayerQuest) {
		return nil, false
	}
	return o.SlayerQuest, true
}

// HasSlayerQuest returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasSlayerQuest() bool {
	if o != nil && !IsNil(o.SlayerQuest) {
		return true
	}

	return false
}

// SetSlayerQuest gets a reference to the given SkyBlockProfileMemberRiftSlayerQuest and assigns it to the SlayerQuest field.
func (o *SkyBlockProfileMemberRift) SetSlayerQuest(v SkyBlockProfileMemberRiftSlayerQuest) {
	o.SlayerQuest = &v
}

// GetVillagePlaza returns the VillagePlaza field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetVillagePlaza() SkyBlockProfileMemberRiftVillagePlaza {
	if o == nil || IsNil(o.VillagePlaza) {
		var ret SkyBlockProfileMemberRiftVillagePlaza
		return ret
	}
	return *o.VillagePlaza
}

// GetVillagePlazaOk returns a tuple with the VillagePlaza field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetVillagePlazaOk() (*SkyBlockProfileMemberRiftVillagePlaza, bool) {
	if o == nil || IsNil(o.VillagePlaza) {
		return nil, false
	}
	return o.VillagePlaza, true
}

// HasVillagePlaza returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasVillagePlaza() bool {
	if o != nil && !IsNil(o.VillagePlaza) {
		return true
	}

	return false
}

// SetVillagePlaza gets a reference to the given SkyBlockProfileMemberRiftVillagePlaza and assigns it to the VillagePlaza field.
func (o *SkyBlockProfileMemberRift) SetVillagePlaza(v SkyBlockProfileMemberRiftVillagePlaza) {
	o.VillagePlaza = &v
}

// GetWestVillage returns the WestVillage field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetWestVillage() SkyBlockProfileMemberRiftWestVillage {
	if o == nil || IsNil(o.WestVillage) {
		var ret SkyBlockProfileMemberRiftWestVillage
		return ret
	}
	return *o.WestVillage
}

// GetWestVillageOk returns a tuple with the WestVillage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetWestVillageOk() (*SkyBlockProfileMemberRiftWestVillage, bool) {
	if o == nil || IsNil(o.WestVillage) {
		return nil, false
	}
	return o.WestVillage, true
}

// HasWestVillage returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasWestVillage() bool {
	if o != nil && !IsNil(o.WestVillage) {
		return true
	}

	return false
}

// SetWestVillage gets a reference to the given SkyBlockProfileMemberRiftWestVillage and assigns it to the WestVillage field.
func (o *SkyBlockProfileMemberRift) SetWestVillage(v SkyBlockProfileMemberRiftWestVillage) {
	o.WestVillage = &v
}

// GetWitherCage returns the WitherCage field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetWitherCage() SkyBlockProfileMemberRiftWitherCage {
	if o == nil || IsNil(o.WitherCage) {
		var ret SkyBlockProfileMemberRiftWitherCage
		return ret
	}
	return *o.WitherCage
}

// GetWitherCageOk returns a tuple with the WitherCage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetWitherCageOk() (*SkyBlockProfileMemberRiftWitherCage, bool) {
	if o == nil || IsNil(o.WitherCage) {
		return nil, false
	}
	return o.WitherCage, true
}

// HasWitherCage returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasWitherCage() bool {
	if o != nil && !IsNil(o.WitherCage) {
		return true
	}

	return false
}

// SetWitherCage gets a reference to the given SkyBlockProfileMemberRiftWitherCage and assigns it to the WitherCage field.
func (o *SkyBlockProfileMemberRift) SetWitherCage(v SkyBlockProfileMemberRiftWitherCage) {
	o.WitherCage = &v
}

// GetWizardTower returns the WizardTower field value
func (o *SkyBlockProfileMemberRift) GetWizardTower() SkyBlockProfileMemberRiftWizardTower {
	if o == nil {
		var ret SkyBlockProfileMemberRiftWizardTower
		return ret
	}

	return o.WizardTower
}

// GetWizardTowerOk returns a tuple with the WizardTower field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetWizardTowerOk() (*SkyBlockProfileMemberRiftWizardTower, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WizardTower, true
}

// SetWizardTower sets field value
func (o *SkyBlockProfileMemberRift) SetWizardTower(v SkyBlockProfileMemberRiftWizardTower) {
	o.WizardTower = v
}

// GetWyldWoods returns the WyldWoods field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRift) GetWyldWoods() SkyBlockProfileMemberRiftWyldWoods {
	if o == nil || IsNil(o.WyldWoods) {
		var ret SkyBlockProfileMemberRiftWyldWoods
		return ret
	}
	return *o.WyldWoods
}

// GetWyldWoodsOk returns a tuple with the WyldWoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRift) GetWyldWoodsOk() (*SkyBlockProfileMemberRiftWyldWoods, bool) {
	if o == nil || IsNil(o.WyldWoods) {
		return nil, false
	}
	return o.WyldWoods, true
}

// HasWyldWoods returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRift) HasWyldWoods() bool {
	if o != nil && !IsNil(o.WyldWoods) {
		return true
	}

	return false
}

// SetWyldWoods gets a reference to the given SkyBlockProfileMemberRiftWyldWoods and assigns it to the WyldWoods field.
func (o *SkyBlockProfileMemberRift) SetWyldWoods(v SkyBlockProfileMemberRiftWyldWoods) {
	o.WyldWoods = &v
}

func (o SkyBlockProfileMemberRift) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRift) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.BlackLagoon) {
		toSerialize["black_lagoon"] = o.BlackLagoon
	}
	if !IsNil(o.Castle) {
		toSerialize["castle"] = o.Castle
	}
	if !IsNil(o.DeadCats) {
		toSerialize["dead_cats"] = o.DeadCats
	}
	if !IsNil(o.Dreadfarm) {
		toSerialize["dreadfarm"] = o.Dreadfarm
	}
	toSerialize["enigma"] = o.Enigma
	if !IsNil(o.Gallery) {
		toSerialize["gallery"] = o.Gallery
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.LifetimePurchasedBoundaries) {
		toSerialize["lifetime_purchased_boundaries"] = o.LifetimePurchasedBoundaries
	}
	if !IsNil(o.SlayerQuest) {
		toSerialize["slayer_quest"] = o.SlayerQuest
	}
	if !IsNil(o.VillagePlaza) {
		toSerialize["village_plaza"] = o.VillagePlaza
	}
	if !IsNil(o.WestVillage) {
		toSerialize["west_village"] = o.WestVillage
	}
	if !IsNil(o.WitherCage) {
		toSerialize["wither_cage"] = o.WitherCage
	}
	toSerialize["wizard_tower"] = o.WizardTower
	if !IsNil(o.WyldWoods) {
		toSerialize["wyld_woods"] = o.WyldWoods
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberRift) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enigma",
		"wizard_tower",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberRift := _SkyBlockProfileMemberRift{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberRift)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberRift(varSkyBlockProfileMemberRift)

	return err
}

type NullableSkyBlockProfileMemberRift struct {
	value *SkyBlockProfileMemberRift
	isSet bool
}

func (v NullableSkyBlockProfileMemberRift) Get() *SkyBlockProfileMemberRift {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRift) Set(val *SkyBlockProfileMemberRift) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRift) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRift) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRift(val *SkyBlockProfileMemberRift) *NullableSkyBlockProfileMemberRift {
	return &NullableSkyBlockProfileMemberRift{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRift) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRift) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
