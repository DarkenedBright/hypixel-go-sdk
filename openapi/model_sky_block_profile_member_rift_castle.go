/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberRiftCastle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRiftCastle{}

// SkyBlockProfileMemberRiftCastle struct for SkyBlockProfileMemberRiftCastle
type SkyBlockProfileMemberRiftCastle struct {
	BoughtPathwaySkip   *bool  `json:"bought_pathway_skip,omitempty"`
	FairyStep           *int64 `json:"fairy_step,omitempty"`
	GrubberStacks       *int64 `json:"grubber_stacks,omitempty"`
	UnlockedPathwaySkip *bool  `json:"unlocked_pathway_skip,omitempty"`
}

// NewSkyBlockProfileMemberRiftCastle instantiates a new SkyBlockProfileMemberRiftCastle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRiftCastle() *SkyBlockProfileMemberRiftCastle {
	this := SkyBlockProfileMemberRiftCastle{}
	return &this
}

// NewSkyBlockProfileMemberRiftCastleWithDefaults instantiates a new SkyBlockProfileMemberRiftCastle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftCastleWithDefaults() *SkyBlockProfileMemberRiftCastle {
	this := SkyBlockProfileMemberRiftCastle{}
	return &this
}

// GetBoughtPathwaySkip returns the BoughtPathwaySkip field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftCastle) GetBoughtPathwaySkip() bool {
	if o == nil || IsNil(o.BoughtPathwaySkip) {
		var ret bool
		return ret
	}
	return *o.BoughtPathwaySkip
}

// GetBoughtPathwaySkipOk returns a tuple with the BoughtPathwaySkip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftCastle) GetBoughtPathwaySkipOk() (*bool, bool) {
	if o == nil || IsNil(o.BoughtPathwaySkip) {
		return nil, false
	}
	return o.BoughtPathwaySkip, true
}

// HasBoughtPathwaySkip returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftCastle) HasBoughtPathwaySkip() bool {
	if o != nil && !IsNil(o.BoughtPathwaySkip) {
		return true
	}

	return false
}

// SetBoughtPathwaySkip gets a reference to the given bool and assigns it to the BoughtPathwaySkip field.
func (o *SkyBlockProfileMemberRiftCastle) SetBoughtPathwaySkip(v bool) {
	o.BoughtPathwaySkip = &v
}

// GetFairyStep returns the FairyStep field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftCastle) GetFairyStep() int64 {
	if o == nil || IsNil(o.FairyStep) {
		var ret int64
		return ret
	}
	return *o.FairyStep
}

// GetFairyStepOk returns a tuple with the FairyStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftCastle) GetFairyStepOk() (*int64, bool) {
	if o == nil || IsNil(o.FairyStep) {
		return nil, false
	}
	return o.FairyStep, true
}

// HasFairyStep returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftCastle) HasFairyStep() bool {
	if o != nil && !IsNil(o.FairyStep) {
		return true
	}

	return false
}

// SetFairyStep gets a reference to the given int64 and assigns it to the FairyStep field.
func (o *SkyBlockProfileMemberRiftCastle) SetFairyStep(v int64) {
	o.FairyStep = &v
}

// GetGrubberStacks returns the GrubberStacks field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftCastle) GetGrubberStacks() int64 {
	if o == nil || IsNil(o.GrubberStacks) {
		var ret int64
		return ret
	}
	return *o.GrubberStacks
}

// GetGrubberStacksOk returns a tuple with the GrubberStacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftCastle) GetGrubberStacksOk() (*int64, bool) {
	if o == nil || IsNil(o.GrubberStacks) {
		return nil, false
	}
	return o.GrubberStacks, true
}

// HasGrubberStacks returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftCastle) HasGrubberStacks() bool {
	if o != nil && !IsNil(o.GrubberStacks) {
		return true
	}

	return false
}

// SetGrubberStacks gets a reference to the given int64 and assigns it to the GrubberStacks field.
func (o *SkyBlockProfileMemberRiftCastle) SetGrubberStacks(v int64) {
	o.GrubberStacks = &v
}

// GetUnlockedPathwaySkip returns the UnlockedPathwaySkip field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftCastle) GetUnlockedPathwaySkip() bool {
	if o == nil || IsNil(o.UnlockedPathwaySkip) {
		var ret bool
		return ret
	}
	return *o.UnlockedPathwaySkip
}

// GetUnlockedPathwaySkipOk returns a tuple with the UnlockedPathwaySkip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftCastle) GetUnlockedPathwaySkipOk() (*bool, bool) {
	if o == nil || IsNil(o.UnlockedPathwaySkip) {
		return nil, false
	}
	return o.UnlockedPathwaySkip, true
}

// HasUnlockedPathwaySkip returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftCastle) HasUnlockedPathwaySkip() bool {
	if o != nil && !IsNil(o.UnlockedPathwaySkip) {
		return true
	}

	return false
}

// SetUnlockedPathwaySkip gets a reference to the given bool and assigns it to the UnlockedPathwaySkip field.
func (o *SkyBlockProfileMemberRiftCastle) SetUnlockedPathwaySkip(v bool) {
	o.UnlockedPathwaySkip = &v
}

func (o SkyBlockProfileMemberRiftCastle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRiftCastle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoughtPathwaySkip) {
		toSerialize["bought_pathway_skip"] = o.BoughtPathwaySkip
	}
	if !IsNil(o.FairyStep) {
		toSerialize["fairy_step"] = o.FairyStep
	}
	if !IsNil(o.GrubberStacks) {
		toSerialize["grubber_stacks"] = o.GrubberStacks
	}
	if !IsNil(o.UnlockedPathwaySkip) {
		toSerialize["unlocked_pathway_skip"] = o.UnlockedPathwaySkip
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberRiftCastle struct {
	value *SkyBlockProfileMemberRiftCastle
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftCastle) Get() *SkyBlockProfileMemberRiftCastle {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftCastle) Set(val *SkyBlockProfileMemberRiftCastle) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftCastle) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftCastle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftCastle(val *SkyBlockProfileMemberRiftCastle) *NullableSkyBlockProfileMemberRiftCastle {
	return &NullableSkyBlockProfileMemberRiftCastle{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftCastle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftCastle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
