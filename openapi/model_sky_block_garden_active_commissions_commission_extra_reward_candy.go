/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy the model 'SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy'
type SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy string

// List of SkyBlockGardenActiveCommissionsCommissionExtraReward_candy
const (
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDCANDY_GREEN_CANDY  SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy = "GREEN_CANDY"
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDCANDY_PURPLE_CANDY SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy = "PURPLE_CANDY"
)

// All allowed values of SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy enum
var AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardCandyEnumValues = []SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy{
	"GREEN_CANDY",
	"PURPLE_CANDY",
}

func (v *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy(value)
	for _, existing := range AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardCandyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy", value)
}

// NewSkyBlockGardenActiveCommissionsCommissionExtraRewardCandyFromValue returns a pointer to a valid SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockGardenActiveCommissionsCommissionExtraRewardCandyFromValue(v string) (*SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy, error) {
	ev := SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy: valid values are %v", v, AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardCandyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) IsValid() bool {
	for _, existing := range AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardCandyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockGardenActiveCommissionsCommissionExtraReward_candy value
func (v SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) Ptr() *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy {
	return &v
}

type NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy struct {
	value *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy
	isSet bool
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) Get() *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy {
	return v.value
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) Set(val *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy(val *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy {
	return &NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy{value: val, isSet: true}
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
