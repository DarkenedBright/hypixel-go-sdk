/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberMiningCoreBiomesPrecursor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberMiningCoreBiomesPrecursor{}

// SkyBlockProfileMemberMiningCoreBiomesPrecursor struct for SkyBlockProfileMemberMiningCoreBiomesPrecursor
type SkyBlockProfileMemberMiningCoreBiomesPrecursor struct {
	ClaimingWithPrecursorApparatus *bool                                                               `json:"claiming_with_precursor_apparatus,omitempty"`
	PartsDelivered                 []SkyBlockProfileMemberMiningCoreBiomesPrecursorPartsDeliveredInner `json:"parts_delivered,omitempty"`
	TalkedToProfessor              *bool                                                               `json:"talked_to_professor,omitempty"`
}

// NewSkyBlockProfileMemberMiningCoreBiomesPrecursor instantiates a new SkyBlockProfileMemberMiningCoreBiomesPrecursor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberMiningCoreBiomesPrecursor() *SkyBlockProfileMemberMiningCoreBiomesPrecursor {
	this := SkyBlockProfileMemberMiningCoreBiomesPrecursor{}
	return &this
}

// NewSkyBlockProfileMemberMiningCoreBiomesPrecursorWithDefaults instantiates a new SkyBlockProfileMemberMiningCoreBiomesPrecursor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberMiningCoreBiomesPrecursorWithDefaults() *SkyBlockProfileMemberMiningCoreBiomesPrecursor {
	this := SkyBlockProfileMemberMiningCoreBiomesPrecursor{}
	return &this
}

// GetClaimingWithPrecursorApparatus returns the ClaimingWithPrecursorApparatus field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) GetClaimingWithPrecursorApparatus() bool {
	if o == nil || IsNil(o.ClaimingWithPrecursorApparatus) {
		var ret bool
		return ret
	}
	return *o.ClaimingWithPrecursorApparatus
}

// GetClaimingWithPrecursorApparatusOk returns a tuple with the ClaimingWithPrecursorApparatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) GetClaimingWithPrecursorApparatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ClaimingWithPrecursorApparatus) {
		return nil, false
	}
	return o.ClaimingWithPrecursorApparatus, true
}

// HasClaimingWithPrecursorApparatus returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) HasClaimingWithPrecursorApparatus() bool {
	if o != nil && !IsNil(o.ClaimingWithPrecursorApparatus) {
		return true
	}

	return false
}

// SetClaimingWithPrecursorApparatus gets a reference to the given bool and assigns it to the ClaimingWithPrecursorApparatus field.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) SetClaimingWithPrecursorApparatus(v bool) {
	o.ClaimingWithPrecursorApparatus = &v
}

// GetPartsDelivered returns the PartsDelivered field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) GetPartsDelivered() []SkyBlockProfileMemberMiningCoreBiomesPrecursorPartsDeliveredInner {
	if o == nil || IsNil(o.PartsDelivered) {
		var ret []SkyBlockProfileMemberMiningCoreBiomesPrecursorPartsDeliveredInner
		return ret
	}
	return o.PartsDelivered
}

// GetPartsDeliveredOk returns a tuple with the PartsDelivered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) GetPartsDeliveredOk() ([]SkyBlockProfileMemberMiningCoreBiomesPrecursorPartsDeliveredInner, bool) {
	if o == nil || IsNil(o.PartsDelivered) {
		return nil, false
	}
	return o.PartsDelivered, true
}

// HasPartsDelivered returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) HasPartsDelivered() bool {
	if o != nil && !IsNil(o.PartsDelivered) {
		return true
	}

	return false
}

// SetPartsDelivered gets a reference to the given []SkyBlockProfileMemberMiningCoreBiomesPrecursorPartsDeliveredInner and assigns it to the PartsDelivered field.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) SetPartsDelivered(v []SkyBlockProfileMemberMiningCoreBiomesPrecursorPartsDeliveredInner) {
	o.PartsDelivered = v
}

// GetTalkedToProfessor returns the TalkedToProfessor field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) GetTalkedToProfessor() bool {
	if o == nil || IsNil(o.TalkedToProfessor) {
		var ret bool
		return ret
	}
	return *o.TalkedToProfessor
}

// GetTalkedToProfessorOk returns a tuple with the TalkedToProfessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) GetTalkedToProfessorOk() (*bool, bool) {
	if o == nil || IsNil(o.TalkedToProfessor) {
		return nil, false
	}
	return o.TalkedToProfessor, true
}

// HasTalkedToProfessor returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) HasTalkedToProfessor() bool {
	if o != nil && !IsNil(o.TalkedToProfessor) {
		return true
	}

	return false
}

// SetTalkedToProfessor gets a reference to the given bool and assigns it to the TalkedToProfessor field.
func (o *SkyBlockProfileMemberMiningCoreBiomesPrecursor) SetTalkedToProfessor(v bool) {
	o.TalkedToProfessor = &v
}

func (o SkyBlockProfileMemberMiningCoreBiomesPrecursor) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberMiningCoreBiomesPrecursor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClaimingWithPrecursorApparatus) {
		toSerialize["claiming_with_precursor_apparatus"] = o.ClaimingWithPrecursorApparatus
	}
	if !IsNil(o.PartsDelivered) {
		toSerialize["parts_delivered"] = o.PartsDelivered
	}
	if !IsNil(o.TalkedToProfessor) {
		toSerialize["talked_to_professor"] = o.TalkedToProfessor
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor struct {
	value *SkyBlockProfileMemberMiningCoreBiomesPrecursor
	isSet bool
}

func (v NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor) Get() *SkyBlockProfileMemberMiningCoreBiomesPrecursor {
	return v.value
}

func (v *NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor) Set(val *SkyBlockProfileMemberMiningCoreBiomesPrecursor) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberMiningCoreBiomesPrecursor(val *SkyBlockProfileMemberMiningCoreBiomesPrecursor) *NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor {
	return &NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberMiningCoreBiomesPrecursor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
