/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted{}

// SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted struct for SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted
type SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted struct {
	Lapis    *int64 `json:"lapis,omitempty"`
	Tungsten *int64 `json:"tungsten,omitempty"`
	Umber    *int64 `json:"umber,omitempty"`
	Vanguard *int64 `json:"vanguard,omitempty"`
}

// NewSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted instantiates a new SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted() *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted {
	this := SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted{}
	return &this
}

// NewSkyBlockProfileMemberGlacitePlayerDataCorpsesLootedWithDefaults instantiates a new SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberGlacitePlayerDataCorpsesLootedWithDefaults() *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted {
	this := SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted{}
	return &this
}

// GetLapis returns the Lapis field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetLapis() int64 {
	if o == nil || IsNil(o.Lapis) {
		var ret int64
		return ret
	}
	return *o.Lapis
}

// GetLapisOk returns a tuple with the Lapis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetLapisOk() (*int64, bool) {
	if o == nil || IsNil(o.Lapis) {
		return nil, false
	}
	return o.Lapis, true
}

// HasLapis returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) HasLapis() bool {
	if o != nil && !IsNil(o.Lapis) {
		return true
	}

	return false
}

// SetLapis gets a reference to the given int64 and assigns it to the Lapis field.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) SetLapis(v int64) {
	o.Lapis = &v
}

// GetTungsten returns the Tungsten field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetTungsten() int64 {
	if o == nil || IsNil(o.Tungsten) {
		var ret int64
		return ret
	}
	return *o.Tungsten
}

// GetTungstenOk returns a tuple with the Tungsten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetTungstenOk() (*int64, bool) {
	if o == nil || IsNil(o.Tungsten) {
		return nil, false
	}
	return o.Tungsten, true
}

// HasTungsten returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) HasTungsten() bool {
	if o != nil && !IsNil(o.Tungsten) {
		return true
	}

	return false
}

// SetTungsten gets a reference to the given int64 and assigns it to the Tungsten field.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) SetTungsten(v int64) {
	o.Tungsten = &v
}

// GetUmber returns the Umber field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetUmber() int64 {
	if o == nil || IsNil(o.Umber) {
		var ret int64
		return ret
	}
	return *o.Umber
}

// GetUmberOk returns a tuple with the Umber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetUmberOk() (*int64, bool) {
	if o == nil || IsNil(o.Umber) {
		return nil, false
	}
	return o.Umber, true
}

// HasUmber returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) HasUmber() bool {
	if o != nil && !IsNil(o.Umber) {
		return true
	}

	return false
}

// SetUmber gets a reference to the given int64 and assigns it to the Umber field.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) SetUmber(v int64) {
	o.Umber = &v
}

// GetVanguard returns the Vanguard field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetVanguard() int64 {
	if o == nil || IsNil(o.Vanguard) {
		var ret int64
		return ret
	}
	return *o.Vanguard
}

// GetVanguardOk returns a tuple with the Vanguard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) GetVanguardOk() (*int64, bool) {
	if o == nil || IsNil(o.Vanguard) {
		return nil, false
	}
	return o.Vanguard, true
}

// HasVanguard returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) HasVanguard() bool {
	if o != nil && !IsNil(o.Vanguard) {
		return true
	}

	return false
}

// SetVanguard gets a reference to the given int64 and assigns it to the Vanguard field.
func (o *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) SetVanguard(v int64) {
	o.Vanguard = &v
}

func (o SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lapis) {
		toSerialize["lapis"] = o.Lapis
	}
	if !IsNil(o.Tungsten) {
		toSerialize["tungsten"] = o.Tungsten
	}
	if !IsNil(o.Umber) {
		toSerialize["umber"] = o.Umber
	}
	if !IsNil(o.Vanguard) {
		toSerialize["vanguard"] = o.Vanguard
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted struct {
	value *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted
	isSet bool
}

func (v NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) Get() *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted {
	return v.value
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) Set(val *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted(val *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) *NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted {
	return &NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
