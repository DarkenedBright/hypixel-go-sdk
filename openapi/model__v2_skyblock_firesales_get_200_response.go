/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V2SkyblockFiresalesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2SkyblockFiresalesGet200Response{}

// V2SkyblockFiresalesGet200Response struct for V2SkyblockFiresalesGet200Response
type V2SkyblockFiresalesGet200Response struct {
	Sales   []SkyBlockFireSale `json:"sales,omitempty"`
	Success *bool              `json:"success,omitempty"`
}

// NewV2SkyblockFiresalesGet200Response instantiates a new V2SkyblockFiresalesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SkyblockFiresalesGet200Response() *V2SkyblockFiresalesGet200Response {
	this := V2SkyblockFiresalesGet200Response{}
	return &this
}

// NewV2SkyblockFiresalesGet200ResponseWithDefaults instantiates a new V2SkyblockFiresalesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SkyblockFiresalesGet200ResponseWithDefaults() *V2SkyblockFiresalesGet200Response {
	this := V2SkyblockFiresalesGet200Response{}
	return &this
}

// GetSales returns the Sales field value if set, zero value otherwise.
func (o *V2SkyblockFiresalesGet200Response) GetSales() []SkyBlockFireSale {
	if o == nil || IsNil(o.Sales) {
		var ret []SkyBlockFireSale
		return ret
	}
	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SkyblockFiresalesGet200Response) GetSalesOk() ([]SkyBlockFireSale, bool) {
	if o == nil || IsNil(o.Sales) {
		return nil, false
	}
	return o.Sales, true
}

// HasSales returns a boolean if a field has been set.
func (o *V2SkyblockFiresalesGet200Response) HasSales() bool {
	if o != nil && !IsNil(o.Sales) {
		return true
	}

	return false
}

// SetSales gets a reference to the given []SkyBlockFireSale and assigns it to the Sales field.
func (o *V2SkyblockFiresalesGet200Response) SetSales(v []SkyBlockFireSale) {
	o.Sales = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *V2SkyblockFiresalesGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SkyblockFiresalesGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *V2SkyblockFiresalesGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *V2SkyblockFiresalesGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o V2SkyblockFiresalesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2SkyblockFiresalesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sales) {
		toSerialize["sales"] = o.Sales
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableV2SkyblockFiresalesGet200Response struct {
	value *V2SkyblockFiresalesGet200Response
	isSet bool
}

func (v NullableV2SkyblockFiresalesGet200Response) Get() *V2SkyblockFiresalesGet200Response {
	return v.value
}

func (v *NullableV2SkyblockFiresalesGet200Response) Set(val *V2SkyblockFiresalesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SkyblockFiresalesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SkyblockFiresalesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SkyblockFiresalesGet200Response(val *V2SkyblockFiresalesGet200Response) *NullableV2SkyblockFiresalesGet200Response {
	return &NullableV2SkyblockFiresalesGet200Response{value: val, isSet: true}
}

func (v NullableV2SkyblockFiresalesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SkyblockFiresalesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
