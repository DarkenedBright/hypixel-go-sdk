/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockGardenGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockGardenGet{}

// SkyBlockGardenGet struct for SkyBlockGardenGet
type SkyBlockGardenGet struct {
	Garden  SkyBlockGarden `json:"garden"`
	Success bool           `json:"success"`
}

type _SkyBlockGardenGet SkyBlockGardenGet

// NewSkyBlockGardenGet instantiates a new SkyBlockGardenGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockGardenGet(garden SkyBlockGarden, success bool) *SkyBlockGardenGet {
	this := SkyBlockGardenGet{}
	this.Garden = garden
	this.Success = success
	return &this
}

// NewSkyBlockGardenGetWithDefaults instantiates a new SkyBlockGardenGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockGardenGetWithDefaults() *SkyBlockGardenGet {
	this := SkyBlockGardenGet{}
	return &this
}

// GetGarden returns the Garden field value
func (o *SkyBlockGardenGet) GetGarden() SkyBlockGarden {
	if o == nil {
		var ret SkyBlockGarden
		return ret
	}

	return o.Garden
}

// GetGardenOk returns a tuple with the Garden field value
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenGet) GetGardenOk() (*SkyBlockGarden, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Garden, true
}

// SetGarden sets field value
func (o *SkyBlockGardenGet) SetGarden(v SkyBlockGarden) {
	o.Garden = v
}

// GetSuccess returns the Success field value
func (o *SkyBlockGardenGet) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenGet) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *SkyBlockGardenGet) SetSuccess(v bool) {
	o.Success = v
}

func (o SkyBlockGardenGet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockGardenGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["garden"] = o.Garden
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

func (o *SkyBlockGardenGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"garden",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockGardenGet := _SkyBlockGardenGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockGardenGet)

	if err != nil {
		return err
	}

	*o = SkyBlockGardenGet(varSkyBlockGardenGet)

	return err
}

type NullableSkyBlockGardenGet struct {
	value *SkyBlockGardenGet
	isSet bool
}

func (v NullableSkyBlockGardenGet) Get() *SkyBlockGardenGet {
	return v.value
}

func (v *NullableSkyBlockGardenGet) Set(val *SkyBlockGardenGet) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenGet) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenGet(val *SkyBlockGardenGet) *NullableSkyBlockGardenGet {
	return &NullableSkyBlockGardenGet{value: val, isSet: true}
}

func (v NullableSkyBlockGardenGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
