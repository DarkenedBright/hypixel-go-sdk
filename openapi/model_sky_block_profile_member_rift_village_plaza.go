/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberRiftVillagePlaza type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRiftVillagePlaza{}

// SkyBlockProfileMemberRiftVillagePlaza struct for SkyBlockProfileMemberRiftVillagePlaza
type SkyBlockProfileMemberRiftVillagePlaza struct {
	BarryCenter SkyBlockProfileMemberRiftVillagePlazaBarryCenter `json:"barry_center"`
	BarterBank  map[string]interface{}                           `json:"barter_bank,omitempty"`
	Cowboy      SkyBlockProfileMemberRiftVillagePlazaCowboy      `json:"cowboy"`
	GotScammed  *bool                                            `json:"got_scammed,omitempty"`
	Lonely      SkyBlockProfileMemberRiftVillagePlazaLonely      `json:"lonely"`
	Murder      *SkyBlockProfileMemberRiftVillagePlazaMurder     `json:"murder,omitempty"`
	Seraphine   SkyBlockProfileMemberRiftVillagePlazaSeraphine   `json:"seraphine"`
}

type _SkyBlockProfileMemberRiftVillagePlaza SkyBlockProfileMemberRiftVillagePlaza

// NewSkyBlockProfileMemberRiftVillagePlaza instantiates a new SkyBlockProfileMemberRiftVillagePlaza object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRiftVillagePlaza(barryCenter SkyBlockProfileMemberRiftVillagePlazaBarryCenter, cowboy SkyBlockProfileMemberRiftVillagePlazaCowboy, lonely SkyBlockProfileMemberRiftVillagePlazaLonely, seraphine SkyBlockProfileMemberRiftVillagePlazaSeraphine) *SkyBlockProfileMemberRiftVillagePlaza {
	this := SkyBlockProfileMemberRiftVillagePlaza{}
	this.BarryCenter = barryCenter
	this.Cowboy = cowboy
	this.Lonely = lonely
	this.Seraphine = seraphine
	return &this
}

// NewSkyBlockProfileMemberRiftVillagePlazaWithDefaults instantiates a new SkyBlockProfileMemberRiftVillagePlaza object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftVillagePlazaWithDefaults() *SkyBlockProfileMemberRiftVillagePlaza {
	this := SkyBlockProfileMemberRiftVillagePlaza{}
	return &this
}

// GetBarryCenter returns the BarryCenter field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetBarryCenter() SkyBlockProfileMemberRiftVillagePlazaBarryCenter {
	if o == nil {
		var ret SkyBlockProfileMemberRiftVillagePlazaBarryCenter
		return ret
	}

	return o.BarryCenter
}

// GetBarryCenterOk returns a tuple with the BarryCenter field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetBarryCenterOk() (*SkyBlockProfileMemberRiftVillagePlazaBarryCenter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BarryCenter, true
}

// SetBarryCenter sets field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetBarryCenter(v SkyBlockProfileMemberRiftVillagePlazaBarryCenter) {
	o.BarryCenter = v
}

// GetBarterBank returns the BarterBank field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetBarterBank() map[string]interface{} {
	if o == nil || IsNil(o.BarterBank) {
		var ret map[string]interface{}
		return ret
	}
	return o.BarterBank
}

// GetBarterBankOk returns a tuple with the BarterBank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetBarterBankOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BarterBank) {
		return map[string]interface{}{}, false
	}
	return o.BarterBank, true
}

// HasBarterBank returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) HasBarterBank() bool {
	if o != nil && !IsNil(o.BarterBank) {
		return true
	}

	return false
}

// SetBarterBank gets a reference to the given map[string]interface{} and assigns it to the BarterBank field.
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetBarterBank(v map[string]interface{}) {
	o.BarterBank = v
}

// GetCowboy returns the Cowboy field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetCowboy() SkyBlockProfileMemberRiftVillagePlazaCowboy {
	if o == nil {
		var ret SkyBlockProfileMemberRiftVillagePlazaCowboy
		return ret
	}

	return o.Cowboy
}

// GetCowboyOk returns a tuple with the Cowboy field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetCowboyOk() (*SkyBlockProfileMemberRiftVillagePlazaCowboy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cowboy, true
}

// SetCowboy sets field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetCowboy(v SkyBlockProfileMemberRiftVillagePlazaCowboy) {
	o.Cowboy = v
}

// GetGotScammed returns the GotScammed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetGotScammed() bool {
	if o == nil || IsNil(o.GotScammed) {
		var ret bool
		return ret
	}
	return *o.GotScammed
}

// GetGotScammedOk returns a tuple with the GotScammed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetGotScammedOk() (*bool, bool) {
	if o == nil || IsNil(o.GotScammed) {
		return nil, false
	}
	return o.GotScammed, true
}

// HasGotScammed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) HasGotScammed() bool {
	if o != nil && !IsNil(o.GotScammed) {
		return true
	}

	return false
}

// SetGotScammed gets a reference to the given bool and assigns it to the GotScammed field.
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetGotScammed(v bool) {
	o.GotScammed = &v
}

// GetLonely returns the Lonely field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetLonely() SkyBlockProfileMemberRiftVillagePlazaLonely {
	if o == nil {
		var ret SkyBlockProfileMemberRiftVillagePlazaLonely
		return ret
	}

	return o.Lonely
}

// GetLonelyOk returns a tuple with the Lonely field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetLonelyOk() (*SkyBlockProfileMemberRiftVillagePlazaLonely, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lonely, true
}

// SetLonely sets field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetLonely(v SkyBlockProfileMemberRiftVillagePlazaLonely) {
	o.Lonely = v
}

// GetMurder returns the Murder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetMurder() SkyBlockProfileMemberRiftVillagePlazaMurder {
	if o == nil || IsNil(o.Murder) {
		var ret SkyBlockProfileMemberRiftVillagePlazaMurder
		return ret
	}
	return *o.Murder
}

// GetMurderOk returns a tuple with the Murder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetMurderOk() (*SkyBlockProfileMemberRiftVillagePlazaMurder, bool) {
	if o == nil || IsNil(o.Murder) {
		return nil, false
	}
	return o.Murder, true
}

// HasMurder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) HasMurder() bool {
	if o != nil && !IsNil(o.Murder) {
		return true
	}

	return false
}

// SetMurder gets a reference to the given SkyBlockProfileMemberRiftVillagePlazaMurder and assigns it to the Murder field.
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetMurder(v SkyBlockProfileMemberRiftVillagePlazaMurder) {
	o.Murder = &v
}

// GetSeraphine returns the Seraphine field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetSeraphine() SkyBlockProfileMemberRiftVillagePlazaSeraphine {
	if o == nil {
		var ret SkyBlockProfileMemberRiftVillagePlazaSeraphine
		return ret
	}

	return o.Seraphine
}

// GetSeraphineOk returns a tuple with the Seraphine field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftVillagePlaza) GetSeraphineOk() (*SkyBlockProfileMemberRiftVillagePlazaSeraphine, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seraphine, true
}

// SetSeraphine sets field value
func (o *SkyBlockProfileMemberRiftVillagePlaza) SetSeraphine(v SkyBlockProfileMemberRiftVillagePlazaSeraphine) {
	o.Seraphine = v
}

func (o SkyBlockProfileMemberRiftVillagePlaza) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRiftVillagePlaza) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["barry_center"] = o.BarryCenter
	if !IsNil(o.BarterBank) {
		toSerialize["barter_bank"] = o.BarterBank
	}
	toSerialize["cowboy"] = o.Cowboy
	if !IsNil(o.GotScammed) {
		toSerialize["got_scammed"] = o.GotScammed
	}
	toSerialize["lonely"] = o.Lonely
	if !IsNil(o.Murder) {
		toSerialize["murder"] = o.Murder
	}
	toSerialize["seraphine"] = o.Seraphine
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberRiftVillagePlaza) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"barry_center",
		"cowboy",
		"lonely",
		"seraphine",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberRiftVillagePlaza := _SkyBlockProfileMemberRiftVillagePlaza{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberRiftVillagePlaza)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberRiftVillagePlaza(varSkyBlockProfileMemberRiftVillagePlaza)

	return err
}

type NullableSkyBlockProfileMemberRiftVillagePlaza struct {
	value *SkyBlockProfileMemberRiftVillagePlaza
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftVillagePlaza) Get() *SkyBlockProfileMemberRiftVillagePlaza {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftVillagePlaza) Set(val *SkyBlockProfileMemberRiftVillagePlaza) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftVillagePlaza) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftVillagePlaza) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftVillagePlaza(val *SkyBlockProfileMemberRiftVillagePlaza) *NullableSkyBlockProfileMemberRiftVillagePlaza {
	return &NullableSkyBlockProfileMemberRiftVillagePlaza{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftVillagePlaza) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftVillagePlaza) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
