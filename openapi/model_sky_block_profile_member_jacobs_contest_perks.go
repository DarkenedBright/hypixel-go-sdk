/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberJacobsContestPerks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberJacobsContestPerks{}

// SkyBlockProfileMemberJacobsContestPerks struct for SkyBlockProfileMemberJacobsContestPerks
type SkyBlockProfileMemberJacobsContestPerks struct {
	DoubleDrops     *int64 `json:"double_drops,omitempty"`
	FarmingLevelCap *int64 `json:"farming_level_cap,omitempty"`
	PersonalBests   *bool  `json:"personal_bests,omitempty"`
}

// NewSkyBlockProfileMemberJacobsContestPerks instantiates a new SkyBlockProfileMemberJacobsContestPerks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberJacobsContestPerks() *SkyBlockProfileMemberJacobsContestPerks {
	this := SkyBlockProfileMemberJacobsContestPerks{}
	return &this
}

// NewSkyBlockProfileMemberJacobsContestPerksWithDefaults instantiates a new SkyBlockProfileMemberJacobsContestPerks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberJacobsContestPerksWithDefaults() *SkyBlockProfileMemberJacobsContestPerks {
	this := SkyBlockProfileMemberJacobsContestPerks{}
	return &this
}

// GetDoubleDrops returns the DoubleDrops field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestPerks) GetDoubleDrops() int64 {
	if o == nil || IsNil(o.DoubleDrops) {
		var ret int64
		return ret
	}
	return *o.DoubleDrops
}

// GetDoubleDropsOk returns a tuple with the DoubleDrops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestPerks) GetDoubleDropsOk() (*int64, bool) {
	if o == nil || IsNil(o.DoubleDrops) {
		return nil, false
	}
	return o.DoubleDrops, true
}

// HasDoubleDrops returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestPerks) HasDoubleDrops() bool {
	if o != nil && !IsNil(o.DoubleDrops) {
		return true
	}

	return false
}

// SetDoubleDrops gets a reference to the given int64 and assigns it to the DoubleDrops field.
func (o *SkyBlockProfileMemberJacobsContestPerks) SetDoubleDrops(v int64) {
	o.DoubleDrops = &v
}

// GetFarmingLevelCap returns the FarmingLevelCap field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestPerks) GetFarmingLevelCap() int64 {
	if o == nil || IsNil(o.FarmingLevelCap) {
		var ret int64
		return ret
	}
	return *o.FarmingLevelCap
}

// GetFarmingLevelCapOk returns a tuple with the FarmingLevelCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestPerks) GetFarmingLevelCapOk() (*int64, bool) {
	if o == nil || IsNil(o.FarmingLevelCap) {
		return nil, false
	}
	return o.FarmingLevelCap, true
}

// HasFarmingLevelCap returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestPerks) HasFarmingLevelCap() bool {
	if o != nil && !IsNil(o.FarmingLevelCap) {
		return true
	}

	return false
}

// SetFarmingLevelCap gets a reference to the given int64 and assigns it to the FarmingLevelCap field.
func (o *SkyBlockProfileMemberJacobsContestPerks) SetFarmingLevelCap(v int64) {
	o.FarmingLevelCap = &v
}

// GetPersonalBests returns the PersonalBests field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestPerks) GetPersonalBests() bool {
	if o == nil || IsNil(o.PersonalBests) {
		var ret bool
		return ret
	}
	return *o.PersonalBests
}

// GetPersonalBestsOk returns a tuple with the PersonalBests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestPerks) GetPersonalBestsOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonalBests) {
		return nil, false
	}
	return o.PersonalBests, true
}

// HasPersonalBests returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestPerks) HasPersonalBests() bool {
	if o != nil && !IsNil(o.PersonalBests) {
		return true
	}

	return false
}

// SetPersonalBests gets a reference to the given bool and assigns it to the PersonalBests field.
func (o *SkyBlockProfileMemberJacobsContestPerks) SetPersonalBests(v bool) {
	o.PersonalBests = &v
}

func (o SkyBlockProfileMemberJacobsContestPerks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberJacobsContestPerks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DoubleDrops) {
		toSerialize["double_drops"] = o.DoubleDrops
	}
	if !IsNil(o.FarmingLevelCap) {
		toSerialize["farming_level_cap"] = o.FarmingLevelCap
	}
	if !IsNil(o.PersonalBests) {
		toSerialize["personal_bests"] = o.PersonalBests
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberJacobsContestPerks struct {
	value *SkyBlockProfileMemberJacobsContestPerks
	isSet bool
}

func (v NullableSkyBlockProfileMemberJacobsContestPerks) Get() *SkyBlockProfileMemberJacobsContestPerks {
	return v.value
}

func (v *NullableSkyBlockProfileMemberJacobsContestPerks) Set(val *SkyBlockProfileMemberJacobsContestPerks) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberJacobsContestPerks) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberJacobsContestPerks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberJacobsContestPerks(val *SkyBlockProfileMemberJacobsContestPerks) *NullableSkyBlockProfileMemberJacobsContestPerks {
	return &NullableSkyBlockProfileMemberJacobsContestPerks{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberJacobsContestPerks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberJacobsContestPerks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
