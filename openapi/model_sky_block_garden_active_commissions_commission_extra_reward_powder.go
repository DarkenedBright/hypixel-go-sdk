/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder the model 'SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder'
type SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder string

// List of SkyBlockGardenActiveCommissionsCommissionExtraReward_powder
const (
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDPOWDER_GEMSTONE SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder = "GEMSTONE"
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDPOWDER_MITHRIL  SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder = "MITHRIL"
)

// All allowed values of SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder enum
var AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardPowderEnumValues = []SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder{
	"GEMSTONE",
	"MITHRIL",
}

func (v *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder(value)
	for _, existing := range AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardPowderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder", value)
}

// NewSkyBlockGardenActiveCommissionsCommissionExtraRewardPowderFromValue returns a pointer to a valid SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockGardenActiveCommissionsCommissionExtraRewardPowderFromValue(v string) (*SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder, error) {
	ev := SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder: valid values are %v", v, AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardPowderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) IsValid() bool {
	for _, existing := range AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardPowderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockGardenActiveCommissionsCommissionExtraReward_powder value
func (v SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) Ptr() *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder {
	return &v
}

type NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder struct {
	value *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder
	isSet bool
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) Get() *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder {
	return v.value
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) Set(val *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder(val *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder {
	return &NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder{value: val, isSet: true}
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
