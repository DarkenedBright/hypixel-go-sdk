/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner the model 'SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner'
type SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner string

// List of SkyBlockProfileMemberRiftWestVillageMirrorverse_claimed_chest_items_inner
const (
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSECLAIMEDCHESTITEMSINNER_BIG_BRAIN_TALISMAN        SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner = "BIG_BRAIN_TALISMAN"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSECLAIMEDCHESTITEMSINNER_MINIATURIZED_TUBULATOR    SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner = "MINIATURIZED_TUBULATOR"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSECLAIMEDCHESTITEMSINNER_TEST_BUCKET_PLEASE_IGNORE SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner = "TEST_BUCKET_PLEASE_IGNORE"
	SKYBLOCKPROFILEMEMBERRIFTWESTVILLAGEMIRRORVERSECLAIMEDCHESTITEMSINNER_TINY_DANCER               SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner = "TINY_DANCER"
)

// All allowed values of SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner enum
var AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInnerEnumValues = []SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner{
	"BIG_BRAIN_TALISMAN",
	"MINIATURIZED_TUBULATOR",
	"TEST_BUCKET_PLEASE_IGNORE",
	"TINY_DANCER",
}

func (v *SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner(value)
	for _, existing := range AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner", value)
}

// NewSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInnerFromValue returns a pointer to a valid SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInnerFromValue(v string) (*SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner, error) {
	ev := SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner: valid values are %v", v, AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberRiftWestVillageMirrorverse_claimed_chest_items_inner value
func (v SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) Ptr() *SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner {
	return &v
}

type NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner struct {
	value *SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) Get() *SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) Set(val *SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner(val *SkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner {
	return &NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftWestVillageMirrorverseClaimedChestItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
