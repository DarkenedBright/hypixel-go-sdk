/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberMiningCoreNodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberMiningCoreNodes{}

// SkyBlockProfileMemberMiningCoreNodes struct for SkyBlockProfileMemberMiningCoreNodes
type SkyBlockProfileMemberMiningCoreNodes struct {
	AnomalousDesire            *int64 `json:"anomalous_desire,omitempty"`
	Blockhead                  *int64 `json:"blockhead,omitempty"`
	Crystalline                *int64 `json:"crystalline,omitempty"`
	DailyEffect                *int64 `json:"daily_effect,omitempty"`
	DailyGrind                 *int64 `json:"daily_grind,omitempty"`
	DailyPowder                *int64 `json:"daily_powder,omitempty"`
	DustCollector              *int64 `json:"dust_collector,omitempty"`
	EagerAdventurer            *int64 `json:"eager_adventurer,omitempty"`
	EfficientMiner             *int64 `json:"efficient_miner,omitempty"`
	Excavator                  *int64 `json:"excavator,omitempty"`
	ExperienceOrbs             *int64 `json:"experience_orbs,omitempty"`
	FallenStarBonus            *int64 `json:"fallen_star_bonus,omitempty"`
	ForgeTime                  *int64 `json:"forge_time,omitempty"`
	Fortunate                  *int64 `json:"fortunate,omitempty"`
	FrontLoaded                *int64 `json:"front_loaded,omitempty"`
	FrozenSolid                *int64 `json:"frozen_solid,omitempty"`
	GemstoneInfusion           *int64 `json:"gemstone_infusion,omitempty"`
	GiftsFromTheDeparted       *int64 `json:"gifts_from_the_departed,omitempty"`
	GoblinKiller               *int64 `json:"goblin_killer,omitempty"`
	GreatExplorer              *int64 `json:"great_explorer,omitempty"`
	HungryForMore              *int64 `json:"hungry_for_more,omitempty"`
	KeenEye                    *int64 `json:"keen_eye,omitempty"`
	KeepItCool                 *int64 `json:"keep_it_cool,omitempty"`
	LonesomeMiner              *int64 `json:"lonesome_miner,omitempty"`
	ManiacMiner                *int64 `json:"maniac_miner,omitempty"`
	MetalHead                  *int64 `json:"metal_head,omitempty"`
	MinersBlessing             *int64 `json:"miners_blessing,omitempty"`
	MineshaftMayhem            *int64 `json:"mineshaft_mayhem,omitempty"`
	MiningExperience           *int64 `json:"mining_experience,omitempty"`
	MiningFortune              *int64 `json:"mining_fortune,omitempty"`
	MiningFortune2             *int64 `json:"mining_fortune_2,omitempty"`
	MiningMadness              *int64 `json:"mining_madness,omitempty"`
	MiningMaster               *int64 `json:"mining_master,omitempty"`
	MiningSpeed                *int64 `json:"mining_speed,omitempty"`
	MiningSpeed2               *int64 `json:"mining_speed_2,omitempty"`
	MiningSpeedBoost           *int64 `json:"mining_speed_boost,omitempty"`
	Mole                       *int64 `json:"mole,omitempty"`
	NoStoneUnturned            *int64 `json:"no_stone_unturned,omitempty"`
	OldSchool                  *int64 `json:"old_school,omitempty"`
	PickaxeToss                *int64 `json:"pickaxe_toss,omitempty"`
	PowderBuff                 *int64 `json:"powder_buff,omitempty"`
	PrecisionMining            *int64 `json:"precision_mining,omitempty"`
	Professional               *int64 `json:"professional,omitempty"`
	RagsToRiches               *int64 `json:"rags_to_riches,omitempty"`
	RandomEvent                *int64 `json:"random_event,omitempty"`
	SheerForce                 *int64 `json:"sheer_force,omitempty"`
	Special0                   *int64 `json:"special_0,omitempty"`
	StarPowder                 *int64 `json:"star_powder,omitempty"`
	SteadyHand                 *int64 `json:"steady_hand,omitempty"`
	StrongArm                  *int64 `json:"strong_arm,omitempty"`
	SubterraneanFisher         *int64 `json:"subterranean_fisher,omitempty"`
	SubzeroMining              *int64 `json:"subzero_mining,omitempty"`
	Surveyor                   *int64 `json:"surveyor,omitempty"`
	TitaniumInsanium           *int64 `json:"titanium_insanium,omitempty"`
	ToggleAnomalousDesire      *bool  `json:"toggle_anomalous_desire,omitempty"`
	ToggleBlockhead            *bool  `json:"toggle_blockhead,omitempty"`
	ToggleCrystalline          *bool  `json:"toggle_crystalline,omitempty"`
	ToggleDailyEffect          *bool  `json:"toggle_daily_effect,omitempty"`
	ToggleDailyGrind           *bool  `json:"toggle_daily_grind,omitempty"`
	ToggleDailyPowder          *bool  `json:"toggle_daily_powder,omitempty"`
	ToggleDustCollector        *bool  `json:"toggle_dust_collector,omitempty"`
	ToggleEagerAdventurer      *bool  `json:"toggle_eager_adventurer,omitempty"`
	ToggleEfficientMiner       *bool  `json:"toggle_efficient_miner,omitempty"`
	ToggleExcavator            *bool  `json:"toggle_excavator,omitempty"`
	ToggleExperienceOrbs       *bool  `json:"toggle_experience_orbs,omitempty"`
	ToggleForgeTime            *bool  `json:"toggle_forge_time,omitempty"`
	ToggleFortunate            *bool  `json:"toggle_fortunate,omitempty"`
	ToggleFrontLoaded          *bool  `json:"toggle_front_loaded,omitempty"`
	ToggleFrozenSolid          *bool  `json:"toggle_frozen_solid,omitempty"`
	ToggleGemstoneInfusion     *bool  `json:"toggle_gemstone_infusion,omitempty"`
	ToggleGiftsFromTheDeparted *bool  `json:"toggle_gifts_from_the_departed,omitempty"`
	ToggleGoblinKiller         *bool  `json:"toggle_goblin_killer,omitempty"`
	ToggleGreatExplorer        *bool  `json:"toggle_great_explorer,omitempty"`
	ToggleHungryForMore        *bool  `json:"toggle_hungry_for_more,omitempty"`
	ToggleKeenEye              *bool  `json:"toggle_keen_eye,omitempty"`
	ToggleKeepItCool           *bool  `json:"toggle_keep_it_cool,omitempty"`
	ToggleLonesomeMiner        *bool  `json:"toggle_lonesome_miner,omitempty"`
	ToggleManiacMiner          *bool  `json:"toggle_maniac_miner,omitempty"`
	ToggleMetalHead            *bool  `json:"toggle_metal_head,omitempty"`
	ToggleMinersBlessing       *bool  `json:"toggle_miners_blessing,omitempty"`
	ToggleMineshaftMayhem      *bool  `json:"toggle_mineshaft_mayhem,omitempty"`
	ToggleMiningExpirience     *bool  `json:"toggle_mining_expirience,omitempty"`
	ToggleMiningFortune        *bool  `json:"toggle_mining_fortune,omitempty"`
	ToggleMiningFortune2       *bool  `json:"toggle_mining_fortune_2,omitempty"`
	ToggleMiningMadness        *bool  `json:"toggle_mining_madness,omitempty"`
	ToggleMiningMaster         *bool  `json:"toggle_mining_master,omitempty"`
	ToggleMiningSpeed          *bool  `json:"toggle_mining_speed,omitempty"`
	ToggleMiningSpeed2         *bool  `json:"toggle_mining_speed_2,omitempty"`
	ToggleMiningSpeedBoost     *bool  `json:"toggle_mining_speed_boost,omitempty"`
	ToggleMole                 *bool  `json:"toggle_mole,omitempty"`
	ToggleNoStoneUnturned      *bool  `json:"toggle_no_stone_unturned,omitempty"`
	ToggleOldSchool            *bool  `json:"toggle_old_school,omitempty"`
	TogglePickaxeToss          *bool  `json:"toggle_pickaxe_toss,omitempty"`
	TogglePowderBuff           *bool  `json:"toggle_powder_buff,omitempty"`
	TogglePrecisionMining      *bool  `json:"toggle_precision_mining,omitempty"`
	ToggleProfessional         *bool  `json:"toggle_professional,omitempty"`
	ToggleRagsToRiches         *bool  `json:"toggle_rags_to_riches,omitempty"`
	ToggleRandomEvent          *bool  `json:"toggle_random_event,omitempty"`
	ToggleSheerForce           *bool  `json:"toggle_sheer_force,omitempty"`
	ToggleStarPowder           *bool  `json:"toggle_star_powder,omitempty"`
	ToggleSteadyHand           *bool  `json:"toggle_steady_hand,omitempty"`
	ToggleStrongArm            *bool  `json:"toggle_strong_arm,omitempty"`
	ToggleSubterraneanFisher   *bool  `json:"toggle_subterranean_fisher,omitempty"`
	ToggleSubzeroMining        *bool  `json:"toggle_subzero_mining,omitempty"`
	ToggleSurveyor             *bool  `json:"toggle_surveyor,omitempty"`
	ToggleTitaniumInsanium     *bool  `json:"toggle_titanium_insanium,omitempty"`
	ToggleVanguardSeeker       *bool  `json:"toggle_vanguard_seeker,omitempty"`
	ToggleVeinSeeker           *bool  `json:"toggle_vein_seeker,omitempty"`
	ToggleWarmHearted          *bool  `json:"toggle_warm_hearted,omitempty"`
	VanguardSeeker             *int64 `json:"vanguard_seeker,omitempty"`
	VeinSeeker                 *int64 `json:"vein_seeker,omitempty"`
	WarmHearted                *int64 `json:"warm_hearted,omitempty"`
}

// NewSkyBlockProfileMemberMiningCoreNodes instantiates a new SkyBlockProfileMemberMiningCoreNodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberMiningCoreNodes() *SkyBlockProfileMemberMiningCoreNodes {
	this := SkyBlockProfileMemberMiningCoreNodes{}
	return &this
}

// NewSkyBlockProfileMemberMiningCoreNodesWithDefaults instantiates a new SkyBlockProfileMemberMiningCoreNodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberMiningCoreNodesWithDefaults() *SkyBlockProfileMemberMiningCoreNodes {
	this := SkyBlockProfileMemberMiningCoreNodes{}
	return &this
}

// GetAnomalousDesire returns the AnomalousDesire field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetAnomalousDesire() int64 {
	if o == nil || IsNil(o.AnomalousDesire) {
		var ret int64
		return ret
	}
	return *o.AnomalousDesire
}

// GetAnomalousDesireOk returns a tuple with the AnomalousDesire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetAnomalousDesireOk() (*int64, bool) {
	if o == nil || IsNil(o.AnomalousDesire) {
		return nil, false
	}
	return o.AnomalousDesire, true
}

// HasAnomalousDesire returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasAnomalousDesire() bool {
	if o != nil && !IsNil(o.AnomalousDesire) {
		return true
	}

	return false
}

// SetAnomalousDesire gets a reference to the given int64 and assigns it to the AnomalousDesire field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetAnomalousDesire(v int64) {
	o.AnomalousDesire = &v
}

// GetBlockhead returns the Blockhead field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetBlockhead() int64 {
	if o == nil || IsNil(o.Blockhead) {
		var ret int64
		return ret
	}
	return *o.Blockhead
}

// GetBlockheadOk returns a tuple with the Blockhead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetBlockheadOk() (*int64, bool) {
	if o == nil || IsNil(o.Blockhead) {
		return nil, false
	}
	return o.Blockhead, true
}

// HasBlockhead returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasBlockhead() bool {
	if o != nil && !IsNil(o.Blockhead) {
		return true
	}

	return false
}

// SetBlockhead gets a reference to the given int64 and assigns it to the Blockhead field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetBlockhead(v int64) {
	o.Blockhead = &v
}

// GetCrystalline returns the Crystalline field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetCrystalline() int64 {
	if o == nil || IsNil(o.Crystalline) {
		var ret int64
		return ret
	}
	return *o.Crystalline
}

// GetCrystallineOk returns a tuple with the Crystalline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetCrystallineOk() (*int64, bool) {
	if o == nil || IsNil(o.Crystalline) {
		return nil, false
	}
	return o.Crystalline, true
}

// HasCrystalline returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasCrystalline() bool {
	if o != nil && !IsNil(o.Crystalline) {
		return true
	}

	return false
}

// SetCrystalline gets a reference to the given int64 and assigns it to the Crystalline field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetCrystalline(v int64) {
	o.Crystalline = &v
}

// GetDailyEffect returns the DailyEffect field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDailyEffect() int64 {
	if o == nil || IsNil(o.DailyEffect) {
		var ret int64
		return ret
	}
	return *o.DailyEffect
}

// GetDailyEffectOk returns a tuple with the DailyEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDailyEffectOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyEffect) {
		return nil, false
	}
	return o.DailyEffect, true
}

// HasDailyEffect returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasDailyEffect() bool {
	if o != nil && !IsNil(o.DailyEffect) {
		return true
	}

	return false
}

// SetDailyEffect gets a reference to the given int64 and assigns it to the DailyEffect field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetDailyEffect(v int64) {
	o.DailyEffect = &v
}

// GetDailyGrind returns the DailyGrind field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDailyGrind() int64 {
	if o == nil || IsNil(o.DailyGrind) {
		var ret int64
		return ret
	}
	return *o.DailyGrind
}

// GetDailyGrindOk returns a tuple with the DailyGrind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDailyGrindOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyGrind) {
		return nil, false
	}
	return o.DailyGrind, true
}

// HasDailyGrind returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasDailyGrind() bool {
	if o != nil && !IsNil(o.DailyGrind) {
		return true
	}

	return false
}

// SetDailyGrind gets a reference to the given int64 and assigns it to the DailyGrind field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetDailyGrind(v int64) {
	o.DailyGrind = &v
}

// GetDailyPowder returns the DailyPowder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDailyPowder() int64 {
	if o == nil || IsNil(o.DailyPowder) {
		var ret int64
		return ret
	}
	return *o.DailyPowder
}

// GetDailyPowderOk returns a tuple with the DailyPowder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDailyPowderOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyPowder) {
		return nil, false
	}
	return o.DailyPowder, true
}

// HasDailyPowder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasDailyPowder() bool {
	if o != nil && !IsNil(o.DailyPowder) {
		return true
	}

	return false
}

// SetDailyPowder gets a reference to the given int64 and assigns it to the DailyPowder field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetDailyPowder(v int64) {
	o.DailyPowder = &v
}

// GetDustCollector returns the DustCollector field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDustCollector() int64 {
	if o == nil || IsNil(o.DustCollector) {
		var ret int64
		return ret
	}
	return *o.DustCollector
}

// GetDustCollectorOk returns a tuple with the DustCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetDustCollectorOk() (*int64, bool) {
	if o == nil || IsNil(o.DustCollector) {
		return nil, false
	}
	return o.DustCollector, true
}

// HasDustCollector returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasDustCollector() bool {
	if o != nil && !IsNil(o.DustCollector) {
		return true
	}

	return false
}

// SetDustCollector gets a reference to the given int64 and assigns it to the DustCollector field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetDustCollector(v int64) {
	o.DustCollector = &v
}

// GetEagerAdventurer returns the EagerAdventurer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetEagerAdventurer() int64 {
	if o == nil || IsNil(o.EagerAdventurer) {
		var ret int64
		return ret
	}
	return *o.EagerAdventurer
}

// GetEagerAdventurerOk returns a tuple with the EagerAdventurer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetEagerAdventurerOk() (*int64, bool) {
	if o == nil || IsNil(o.EagerAdventurer) {
		return nil, false
	}
	return o.EagerAdventurer, true
}

// HasEagerAdventurer returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasEagerAdventurer() bool {
	if o != nil && !IsNil(o.EagerAdventurer) {
		return true
	}

	return false
}

// SetEagerAdventurer gets a reference to the given int64 and assigns it to the EagerAdventurer field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetEagerAdventurer(v int64) {
	o.EagerAdventurer = &v
}

// GetEfficientMiner returns the EfficientMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetEfficientMiner() int64 {
	if o == nil || IsNil(o.EfficientMiner) {
		var ret int64
		return ret
	}
	return *o.EfficientMiner
}

// GetEfficientMinerOk returns a tuple with the EfficientMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetEfficientMinerOk() (*int64, bool) {
	if o == nil || IsNil(o.EfficientMiner) {
		return nil, false
	}
	return o.EfficientMiner, true
}

// HasEfficientMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasEfficientMiner() bool {
	if o != nil && !IsNil(o.EfficientMiner) {
		return true
	}

	return false
}

// SetEfficientMiner gets a reference to the given int64 and assigns it to the EfficientMiner field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetEfficientMiner(v int64) {
	o.EfficientMiner = &v
}

// GetExcavator returns the Excavator field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetExcavator() int64 {
	if o == nil || IsNil(o.Excavator) {
		var ret int64
		return ret
	}
	return *o.Excavator
}

// GetExcavatorOk returns a tuple with the Excavator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetExcavatorOk() (*int64, bool) {
	if o == nil || IsNil(o.Excavator) {
		return nil, false
	}
	return o.Excavator, true
}

// HasExcavator returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasExcavator() bool {
	if o != nil && !IsNil(o.Excavator) {
		return true
	}

	return false
}

// SetExcavator gets a reference to the given int64 and assigns it to the Excavator field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetExcavator(v int64) {
	o.Excavator = &v
}

// GetExperienceOrbs returns the ExperienceOrbs field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetExperienceOrbs() int64 {
	if o == nil || IsNil(o.ExperienceOrbs) {
		var ret int64
		return ret
	}
	return *o.ExperienceOrbs
}

// GetExperienceOrbsOk returns a tuple with the ExperienceOrbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetExperienceOrbsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExperienceOrbs) {
		return nil, false
	}
	return o.ExperienceOrbs, true
}

// HasExperienceOrbs returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasExperienceOrbs() bool {
	if o != nil && !IsNil(o.ExperienceOrbs) {
		return true
	}

	return false
}

// SetExperienceOrbs gets a reference to the given int64 and assigns it to the ExperienceOrbs field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetExperienceOrbs(v int64) {
	o.ExperienceOrbs = &v
}

// GetFallenStarBonus returns the FallenStarBonus field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFallenStarBonus() int64 {
	if o == nil || IsNil(o.FallenStarBonus) {
		var ret int64
		return ret
	}
	return *o.FallenStarBonus
}

// GetFallenStarBonusOk returns a tuple with the FallenStarBonus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFallenStarBonusOk() (*int64, bool) {
	if o == nil || IsNil(o.FallenStarBonus) {
		return nil, false
	}
	return o.FallenStarBonus, true
}

// HasFallenStarBonus returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasFallenStarBonus() bool {
	if o != nil && !IsNil(o.FallenStarBonus) {
		return true
	}

	return false
}

// SetFallenStarBonus gets a reference to the given int64 and assigns it to the FallenStarBonus field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetFallenStarBonus(v int64) {
	o.FallenStarBonus = &v
}

// GetForgeTime returns the ForgeTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetForgeTime() int64 {
	if o == nil || IsNil(o.ForgeTime) {
		var ret int64
		return ret
	}
	return *o.ForgeTime
}

// GetForgeTimeOk returns a tuple with the ForgeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetForgeTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ForgeTime) {
		return nil, false
	}
	return o.ForgeTime, true
}

// HasForgeTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasForgeTime() bool {
	if o != nil && !IsNil(o.ForgeTime) {
		return true
	}

	return false
}

// SetForgeTime gets a reference to the given int64 and assigns it to the ForgeTime field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetForgeTime(v int64) {
	o.ForgeTime = &v
}

// GetFortunate returns the Fortunate field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFortunate() int64 {
	if o == nil || IsNil(o.Fortunate) {
		var ret int64
		return ret
	}
	return *o.Fortunate
}

// GetFortunateOk returns a tuple with the Fortunate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFortunateOk() (*int64, bool) {
	if o == nil || IsNil(o.Fortunate) {
		return nil, false
	}
	return o.Fortunate, true
}

// HasFortunate returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasFortunate() bool {
	if o != nil && !IsNil(o.Fortunate) {
		return true
	}

	return false
}

// SetFortunate gets a reference to the given int64 and assigns it to the Fortunate field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetFortunate(v int64) {
	o.Fortunate = &v
}

// GetFrontLoaded returns the FrontLoaded field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFrontLoaded() int64 {
	if o == nil || IsNil(o.FrontLoaded) {
		var ret int64
		return ret
	}
	return *o.FrontLoaded
}

// GetFrontLoadedOk returns a tuple with the FrontLoaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFrontLoadedOk() (*int64, bool) {
	if o == nil || IsNil(o.FrontLoaded) {
		return nil, false
	}
	return o.FrontLoaded, true
}

// HasFrontLoaded returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasFrontLoaded() bool {
	if o != nil && !IsNil(o.FrontLoaded) {
		return true
	}

	return false
}

// SetFrontLoaded gets a reference to the given int64 and assigns it to the FrontLoaded field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetFrontLoaded(v int64) {
	o.FrontLoaded = &v
}

// GetFrozenSolid returns the FrozenSolid field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFrozenSolid() int64 {
	if o == nil || IsNil(o.FrozenSolid) {
		var ret int64
		return ret
	}
	return *o.FrozenSolid
}

// GetFrozenSolidOk returns a tuple with the FrozenSolid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetFrozenSolidOk() (*int64, bool) {
	if o == nil || IsNil(o.FrozenSolid) {
		return nil, false
	}
	return o.FrozenSolid, true
}

// HasFrozenSolid returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasFrozenSolid() bool {
	if o != nil && !IsNil(o.FrozenSolid) {
		return true
	}

	return false
}

// SetFrozenSolid gets a reference to the given int64 and assigns it to the FrozenSolid field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetFrozenSolid(v int64) {
	o.FrozenSolid = &v
}

// GetGemstoneInfusion returns the GemstoneInfusion field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGemstoneInfusion() int64 {
	if o == nil || IsNil(o.GemstoneInfusion) {
		var ret int64
		return ret
	}
	return *o.GemstoneInfusion
}

// GetGemstoneInfusionOk returns a tuple with the GemstoneInfusion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGemstoneInfusionOk() (*int64, bool) {
	if o == nil || IsNil(o.GemstoneInfusion) {
		return nil, false
	}
	return o.GemstoneInfusion, true
}

// HasGemstoneInfusion returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasGemstoneInfusion() bool {
	if o != nil && !IsNil(o.GemstoneInfusion) {
		return true
	}

	return false
}

// SetGemstoneInfusion gets a reference to the given int64 and assigns it to the GemstoneInfusion field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetGemstoneInfusion(v int64) {
	o.GemstoneInfusion = &v
}

// GetGiftsFromTheDeparted returns the GiftsFromTheDeparted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGiftsFromTheDeparted() int64 {
	if o == nil || IsNil(o.GiftsFromTheDeparted) {
		var ret int64
		return ret
	}
	return *o.GiftsFromTheDeparted
}

// GetGiftsFromTheDepartedOk returns a tuple with the GiftsFromTheDeparted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGiftsFromTheDepartedOk() (*int64, bool) {
	if o == nil || IsNil(o.GiftsFromTheDeparted) {
		return nil, false
	}
	return o.GiftsFromTheDeparted, true
}

// HasGiftsFromTheDeparted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasGiftsFromTheDeparted() bool {
	if o != nil && !IsNil(o.GiftsFromTheDeparted) {
		return true
	}

	return false
}

// SetGiftsFromTheDeparted gets a reference to the given int64 and assigns it to the GiftsFromTheDeparted field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetGiftsFromTheDeparted(v int64) {
	o.GiftsFromTheDeparted = &v
}

// GetGoblinKiller returns the GoblinKiller field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGoblinKiller() int64 {
	if o == nil || IsNil(o.GoblinKiller) {
		var ret int64
		return ret
	}
	return *o.GoblinKiller
}

// GetGoblinKillerOk returns a tuple with the GoblinKiller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGoblinKillerOk() (*int64, bool) {
	if o == nil || IsNil(o.GoblinKiller) {
		return nil, false
	}
	return o.GoblinKiller, true
}

// HasGoblinKiller returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasGoblinKiller() bool {
	if o != nil && !IsNil(o.GoblinKiller) {
		return true
	}

	return false
}

// SetGoblinKiller gets a reference to the given int64 and assigns it to the GoblinKiller field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetGoblinKiller(v int64) {
	o.GoblinKiller = &v
}

// GetGreatExplorer returns the GreatExplorer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGreatExplorer() int64 {
	if o == nil || IsNil(o.GreatExplorer) {
		var ret int64
		return ret
	}
	return *o.GreatExplorer
}

// GetGreatExplorerOk returns a tuple with the GreatExplorer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetGreatExplorerOk() (*int64, bool) {
	if o == nil || IsNil(o.GreatExplorer) {
		return nil, false
	}
	return o.GreatExplorer, true
}

// HasGreatExplorer returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasGreatExplorer() bool {
	if o != nil && !IsNil(o.GreatExplorer) {
		return true
	}

	return false
}

// SetGreatExplorer gets a reference to the given int64 and assigns it to the GreatExplorer field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetGreatExplorer(v int64) {
	o.GreatExplorer = &v
}

// GetHungryForMore returns the HungryForMore field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetHungryForMore() int64 {
	if o == nil || IsNil(o.HungryForMore) {
		var ret int64
		return ret
	}
	return *o.HungryForMore
}

// GetHungryForMoreOk returns a tuple with the HungryForMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetHungryForMoreOk() (*int64, bool) {
	if o == nil || IsNil(o.HungryForMore) {
		return nil, false
	}
	return o.HungryForMore, true
}

// HasHungryForMore returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasHungryForMore() bool {
	if o != nil && !IsNil(o.HungryForMore) {
		return true
	}

	return false
}

// SetHungryForMore gets a reference to the given int64 and assigns it to the HungryForMore field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetHungryForMore(v int64) {
	o.HungryForMore = &v
}

// GetKeenEye returns the KeenEye field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetKeenEye() int64 {
	if o == nil || IsNil(o.KeenEye) {
		var ret int64
		return ret
	}
	return *o.KeenEye
}

// GetKeenEyeOk returns a tuple with the KeenEye field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetKeenEyeOk() (*int64, bool) {
	if o == nil || IsNil(o.KeenEye) {
		return nil, false
	}
	return o.KeenEye, true
}

// HasKeenEye returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasKeenEye() bool {
	if o != nil && !IsNil(o.KeenEye) {
		return true
	}

	return false
}

// SetKeenEye gets a reference to the given int64 and assigns it to the KeenEye field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetKeenEye(v int64) {
	o.KeenEye = &v
}

// GetKeepItCool returns the KeepItCool field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetKeepItCool() int64 {
	if o == nil || IsNil(o.KeepItCool) {
		var ret int64
		return ret
	}
	return *o.KeepItCool
}

// GetKeepItCoolOk returns a tuple with the KeepItCool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetKeepItCoolOk() (*int64, bool) {
	if o == nil || IsNil(o.KeepItCool) {
		return nil, false
	}
	return o.KeepItCool, true
}

// HasKeepItCool returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasKeepItCool() bool {
	if o != nil && !IsNil(o.KeepItCool) {
		return true
	}

	return false
}

// SetKeepItCool gets a reference to the given int64 and assigns it to the KeepItCool field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetKeepItCool(v int64) {
	o.KeepItCool = &v
}

// GetLonesomeMiner returns the LonesomeMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetLonesomeMiner() int64 {
	if o == nil || IsNil(o.LonesomeMiner) {
		var ret int64
		return ret
	}
	return *o.LonesomeMiner
}

// GetLonesomeMinerOk returns a tuple with the LonesomeMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetLonesomeMinerOk() (*int64, bool) {
	if o == nil || IsNil(o.LonesomeMiner) {
		return nil, false
	}
	return o.LonesomeMiner, true
}

// HasLonesomeMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasLonesomeMiner() bool {
	if o != nil && !IsNil(o.LonesomeMiner) {
		return true
	}

	return false
}

// SetLonesomeMiner gets a reference to the given int64 and assigns it to the LonesomeMiner field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetLonesomeMiner(v int64) {
	o.LonesomeMiner = &v
}

// GetManiacMiner returns the ManiacMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetManiacMiner() int64 {
	if o == nil || IsNil(o.ManiacMiner) {
		var ret int64
		return ret
	}
	return *o.ManiacMiner
}

// GetManiacMinerOk returns a tuple with the ManiacMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetManiacMinerOk() (*int64, bool) {
	if o == nil || IsNil(o.ManiacMiner) {
		return nil, false
	}
	return o.ManiacMiner, true
}

// HasManiacMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasManiacMiner() bool {
	if o != nil && !IsNil(o.ManiacMiner) {
		return true
	}

	return false
}

// SetManiacMiner gets a reference to the given int64 and assigns it to the ManiacMiner field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetManiacMiner(v int64) {
	o.ManiacMiner = &v
}

// GetMetalHead returns the MetalHead field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMetalHead() int64 {
	if o == nil || IsNil(o.MetalHead) {
		var ret int64
		return ret
	}
	return *o.MetalHead
}

// GetMetalHeadOk returns a tuple with the MetalHead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMetalHeadOk() (*int64, bool) {
	if o == nil || IsNil(o.MetalHead) {
		return nil, false
	}
	return o.MetalHead, true
}

// HasMetalHead returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMetalHead() bool {
	if o != nil && !IsNil(o.MetalHead) {
		return true
	}

	return false
}

// SetMetalHead gets a reference to the given int64 and assigns it to the MetalHead field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMetalHead(v int64) {
	o.MetalHead = &v
}

// GetMinersBlessing returns the MinersBlessing field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMinersBlessing() int64 {
	if o == nil || IsNil(o.MinersBlessing) {
		var ret int64
		return ret
	}
	return *o.MinersBlessing
}

// GetMinersBlessingOk returns a tuple with the MinersBlessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMinersBlessingOk() (*int64, bool) {
	if o == nil || IsNil(o.MinersBlessing) {
		return nil, false
	}
	return o.MinersBlessing, true
}

// HasMinersBlessing returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMinersBlessing() bool {
	if o != nil && !IsNil(o.MinersBlessing) {
		return true
	}

	return false
}

// SetMinersBlessing gets a reference to the given int64 and assigns it to the MinersBlessing field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMinersBlessing(v int64) {
	o.MinersBlessing = &v
}

// GetMineshaftMayhem returns the MineshaftMayhem field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMineshaftMayhem() int64 {
	if o == nil || IsNil(o.MineshaftMayhem) {
		var ret int64
		return ret
	}
	return *o.MineshaftMayhem
}

// GetMineshaftMayhemOk returns a tuple with the MineshaftMayhem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMineshaftMayhemOk() (*int64, bool) {
	if o == nil || IsNil(o.MineshaftMayhem) {
		return nil, false
	}
	return o.MineshaftMayhem, true
}

// HasMineshaftMayhem returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMineshaftMayhem() bool {
	if o != nil && !IsNil(o.MineshaftMayhem) {
		return true
	}

	return false
}

// SetMineshaftMayhem gets a reference to the given int64 and assigns it to the MineshaftMayhem field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMineshaftMayhem(v int64) {
	o.MineshaftMayhem = &v
}

// GetMiningExperience returns the MiningExperience field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningExperience() int64 {
	if o == nil || IsNil(o.MiningExperience) {
		var ret int64
		return ret
	}
	return *o.MiningExperience
}

// GetMiningExperienceOk returns a tuple with the MiningExperience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningExperienceOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningExperience) {
		return nil, false
	}
	return o.MiningExperience, true
}

// HasMiningExperience returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningExperience() bool {
	if o != nil && !IsNil(o.MiningExperience) {
		return true
	}

	return false
}

// SetMiningExperience gets a reference to the given int64 and assigns it to the MiningExperience field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningExperience(v int64) {
	o.MiningExperience = &v
}

// GetMiningFortune returns the MiningFortune field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningFortune() int64 {
	if o == nil || IsNil(o.MiningFortune) {
		var ret int64
		return ret
	}
	return *o.MiningFortune
}

// GetMiningFortuneOk returns a tuple with the MiningFortune field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningFortuneOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningFortune) {
		return nil, false
	}
	return o.MiningFortune, true
}

// HasMiningFortune returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningFortune() bool {
	if o != nil && !IsNil(o.MiningFortune) {
		return true
	}

	return false
}

// SetMiningFortune gets a reference to the given int64 and assigns it to the MiningFortune field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningFortune(v int64) {
	o.MiningFortune = &v
}

// GetMiningFortune2 returns the MiningFortune2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningFortune2() int64 {
	if o == nil || IsNil(o.MiningFortune2) {
		var ret int64
		return ret
	}
	return *o.MiningFortune2
}

// GetMiningFortune2Ok returns a tuple with the MiningFortune2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningFortune2Ok() (*int64, bool) {
	if o == nil || IsNil(o.MiningFortune2) {
		return nil, false
	}
	return o.MiningFortune2, true
}

// HasMiningFortune2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningFortune2() bool {
	if o != nil && !IsNil(o.MiningFortune2) {
		return true
	}

	return false
}

// SetMiningFortune2 gets a reference to the given int64 and assigns it to the MiningFortune2 field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningFortune2(v int64) {
	o.MiningFortune2 = &v
}

// GetMiningMadness returns the MiningMadness field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningMadness() int64 {
	if o == nil || IsNil(o.MiningMadness) {
		var ret int64
		return ret
	}
	return *o.MiningMadness
}

// GetMiningMadnessOk returns a tuple with the MiningMadness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningMadnessOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningMadness) {
		return nil, false
	}
	return o.MiningMadness, true
}

// HasMiningMadness returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningMadness() bool {
	if o != nil && !IsNil(o.MiningMadness) {
		return true
	}

	return false
}

// SetMiningMadness gets a reference to the given int64 and assigns it to the MiningMadness field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningMadness(v int64) {
	o.MiningMadness = &v
}

// GetMiningMaster returns the MiningMaster field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningMaster() int64 {
	if o == nil || IsNil(o.MiningMaster) {
		var ret int64
		return ret
	}
	return *o.MiningMaster
}

// GetMiningMasterOk returns a tuple with the MiningMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningMasterOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningMaster) {
		return nil, false
	}
	return o.MiningMaster, true
}

// HasMiningMaster returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningMaster() bool {
	if o != nil && !IsNil(o.MiningMaster) {
		return true
	}

	return false
}

// SetMiningMaster gets a reference to the given int64 and assigns it to the MiningMaster field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningMaster(v int64) {
	o.MiningMaster = &v
}

// GetMiningSpeed returns the MiningSpeed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningSpeed() int64 {
	if o == nil || IsNil(o.MiningSpeed) {
		var ret int64
		return ret
	}
	return *o.MiningSpeed
}

// GetMiningSpeedOk returns a tuple with the MiningSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningSpeed) {
		return nil, false
	}
	return o.MiningSpeed, true
}

// HasMiningSpeed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningSpeed() bool {
	if o != nil && !IsNil(o.MiningSpeed) {
		return true
	}

	return false
}

// SetMiningSpeed gets a reference to the given int64 and assigns it to the MiningSpeed field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningSpeed(v int64) {
	o.MiningSpeed = &v
}

// GetMiningSpeed2 returns the MiningSpeed2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningSpeed2() int64 {
	if o == nil || IsNil(o.MiningSpeed2) {
		var ret int64
		return ret
	}
	return *o.MiningSpeed2
}

// GetMiningSpeed2Ok returns a tuple with the MiningSpeed2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningSpeed2Ok() (*int64, bool) {
	if o == nil || IsNil(o.MiningSpeed2) {
		return nil, false
	}
	return o.MiningSpeed2, true
}

// HasMiningSpeed2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningSpeed2() bool {
	if o != nil && !IsNil(o.MiningSpeed2) {
		return true
	}

	return false
}

// SetMiningSpeed2 gets a reference to the given int64 and assigns it to the MiningSpeed2 field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningSpeed2(v int64) {
	o.MiningSpeed2 = &v
}

// GetMiningSpeedBoost returns the MiningSpeedBoost field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningSpeedBoost() int64 {
	if o == nil || IsNil(o.MiningSpeedBoost) {
		var ret int64
		return ret
	}
	return *o.MiningSpeedBoost
}

// GetMiningSpeedBoostOk returns a tuple with the MiningSpeedBoost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMiningSpeedBoostOk() (*int64, bool) {
	if o == nil || IsNil(o.MiningSpeedBoost) {
		return nil, false
	}
	return o.MiningSpeedBoost, true
}

// HasMiningSpeedBoost returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMiningSpeedBoost() bool {
	if o != nil && !IsNil(o.MiningSpeedBoost) {
		return true
	}

	return false
}

// SetMiningSpeedBoost gets a reference to the given int64 and assigns it to the MiningSpeedBoost field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMiningSpeedBoost(v int64) {
	o.MiningSpeedBoost = &v
}

// GetMole returns the Mole field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMole() int64 {
	if o == nil || IsNil(o.Mole) {
		var ret int64
		return ret
	}
	return *o.Mole
}

// GetMoleOk returns a tuple with the Mole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetMoleOk() (*int64, bool) {
	if o == nil || IsNil(o.Mole) {
		return nil, false
	}
	return o.Mole, true
}

// HasMole returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasMole() bool {
	if o != nil && !IsNil(o.Mole) {
		return true
	}

	return false
}

// SetMole gets a reference to the given int64 and assigns it to the Mole field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetMole(v int64) {
	o.Mole = &v
}

// GetNoStoneUnturned returns the NoStoneUnturned field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetNoStoneUnturned() int64 {
	if o == nil || IsNil(o.NoStoneUnturned) {
		var ret int64
		return ret
	}
	return *o.NoStoneUnturned
}

// GetNoStoneUnturnedOk returns a tuple with the NoStoneUnturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetNoStoneUnturnedOk() (*int64, bool) {
	if o == nil || IsNil(o.NoStoneUnturned) {
		return nil, false
	}
	return o.NoStoneUnturned, true
}

// HasNoStoneUnturned returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasNoStoneUnturned() bool {
	if o != nil && !IsNil(o.NoStoneUnturned) {
		return true
	}

	return false
}

// SetNoStoneUnturned gets a reference to the given int64 and assigns it to the NoStoneUnturned field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetNoStoneUnturned(v int64) {
	o.NoStoneUnturned = &v
}

// GetOldSchool returns the OldSchool field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetOldSchool() int64 {
	if o == nil || IsNil(o.OldSchool) {
		var ret int64
		return ret
	}
	return *o.OldSchool
}

// GetOldSchoolOk returns a tuple with the OldSchool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetOldSchoolOk() (*int64, bool) {
	if o == nil || IsNil(o.OldSchool) {
		return nil, false
	}
	return o.OldSchool, true
}

// HasOldSchool returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasOldSchool() bool {
	if o != nil && !IsNil(o.OldSchool) {
		return true
	}

	return false
}

// SetOldSchool gets a reference to the given int64 and assigns it to the OldSchool field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetOldSchool(v int64) {
	o.OldSchool = &v
}

// GetPickaxeToss returns the PickaxeToss field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetPickaxeToss() int64 {
	if o == nil || IsNil(o.PickaxeToss) {
		var ret int64
		return ret
	}
	return *o.PickaxeToss
}

// GetPickaxeTossOk returns a tuple with the PickaxeToss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetPickaxeTossOk() (*int64, bool) {
	if o == nil || IsNil(o.PickaxeToss) {
		return nil, false
	}
	return o.PickaxeToss, true
}

// HasPickaxeToss returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasPickaxeToss() bool {
	if o != nil && !IsNil(o.PickaxeToss) {
		return true
	}

	return false
}

// SetPickaxeToss gets a reference to the given int64 and assigns it to the PickaxeToss field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetPickaxeToss(v int64) {
	o.PickaxeToss = &v
}

// GetPowderBuff returns the PowderBuff field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetPowderBuff() int64 {
	if o == nil || IsNil(o.PowderBuff) {
		var ret int64
		return ret
	}
	return *o.PowderBuff
}

// GetPowderBuffOk returns a tuple with the PowderBuff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetPowderBuffOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderBuff) {
		return nil, false
	}
	return o.PowderBuff, true
}

// HasPowderBuff returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasPowderBuff() bool {
	if o != nil && !IsNil(o.PowderBuff) {
		return true
	}

	return false
}

// SetPowderBuff gets a reference to the given int64 and assigns it to the PowderBuff field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetPowderBuff(v int64) {
	o.PowderBuff = &v
}

// GetPrecisionMining returns the PrecisionMining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetPrecisionMining() int64 {
	if o == nil || IsNil(o.PrecisionMining) {
		var ret int64
		return ret
	}
	return *o.PrecisionMining
}

// GetPrecisionMiningOk returns a tuple with the PrecisionMining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetPrecisionMiningOk() (*int64, bool) {
	if o == nil || IsNil(o.PrecisionMining) {
		return nil, false
	}
	return o.PrecisionMining, true
}

// HasPrecisionMining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasPrecisionMining() bool {
	if o != nil && !IsNil(o.PrecisionMining) {
		return true
	}

	return false
}

// SetPrecisionMining gets a reference to the given int64 and assigns it to the PrecisionMining field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetPrecisionMining(v int64) {
	o.PrecisionMining = &v
}

// GetProfessional returns the Professional field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetProfessional() int64 {
	if o == nil || IsNil(o.Professional) {
		var ret int64
		return ret
	}
	return *o.Professional
}

// GetProfessionalOk returns a tuple with the Professional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetProfessionalOk() (*int64, bool) {
	if o == nil || IsNil(o.Professional) {
		return nil, false
	}
	return o.Professional, true
}

// HasProfessional returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasProfessional() bool {
	if o != nil && !IsNil(o.Professional) {
		return true
	}

	return false
}

// SetProfessional gets a reference to the given int64 and assigns it to the Professional field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetProfessional(v int64) {
	o.Professional = &v
}

// GetRagsToRiches returns the RagsToRiches field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetRagsToRiches() int64 {
	if o == nil || IsNil(o.RagsToRiches) {
		var ret int64
		return ret
	}
	return *o.RagsToRiches
}

// GetRagsToRichesOk returns a tuple with the RagsToRiches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetRagsToRichesOk() (*int64, bool) {
	if o == nil || IsNil(o.RagsToRiches) {
		return nil, false
	}
	return o.RagsToRiches, true
}

// HasRagsToRiches returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasRagsToRiches() bool {
	if o != nil && !IsNil(o.RagsToRiches) {
		return true
	}

	return false
}

// SetRagsToRiches gets a reference to the given int64 and assigns it to the RagsToRiches field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetRagsToRiches(v int64) {
	o.RagsToRiches = &v
}

// GetRandomEvent returns the RandomEvent field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetRandomEvent() int64 {
	if o == nil || IsNil(o.RandomEvent) {
		var ret int64
		return ret
	}
	return *o.RandomEvent
}

// GetRandomEventOk returns a tuple with the RandomEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetRandomEventOk() (*int64, bool) {
	if o == nil || IsNil(o.RandomEvent) {
		return nil, false
	}
	return o.RandomEvent, true
}

// HasRandomEvent returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasRandomEvent() bool {
	if o != nil && !IsNil(o.RandomEvent) {
		return true
	}

	return false
}

// SetRandomEvent gets a reference to the given int64 and assigns it to the RandomEvent field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetRandomEvent(v int64) {
	o.RandomEvent = &v
}

// GetSheerForce returns the SheerForce field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSheerForce() int64 {
	if o == nil || IsNil(o.SheerForce) {
		var ret int64
		return ret
	}
	return *o.SheerForce
}

// GetSheerForceOk returns a tuple with the SheerForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSheerForceOk() (*int64, bool) {
	if o == nil || IsNil(o.SheerForce) {
		return nil, false
	}
	return o.SheerForce, true
}

// HasSheerForce returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasSheerForce() bool {
	if o != nil && !IsNil(o.SheerForce) {
		return true
	}

	return false
}

// SetSheerForce gets a reference to the given int64 and assigns it to the SheerForce field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetSheerForce(v int64) {
	o.SheerForce = &v
}

// GetSpecial0 returns the Special0 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSpecial0() int64 {
	if o == nil || IsNil(o.Special0) {
		var ret int64
		return ret
	}
	return *o.Special0
}

// GetSpecial0Ok returns a tuple with the Special0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSpecial0Ok() (*int64, bool) {
	if o == nil || IsNil(o.Special0) {
		return nil, false
	}
	return o.Special0, true
}

// HasSpecial0 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasSpecial0() bool {
	if o != nil && !IsNil(o.Special0) {
		return true
	}

	return false
}

// SetSpecial0 gets a reference to the given int64 and assigns it to the Special0 field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetSpecial0(v int64) {
	o.Special0 = &v
}

// GetStarPowder returns the StarPowder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetStarPowder() int64 {
	if o == nil || IsNil(o.StarPowder) {
		var ret int64
		return ret
	}
	return *o.StarPowder
}

// GetStarPowderOk returns a tuple with the StarPowder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetStarPowderOk() (*int64, bool) {
	if o == nil || IsNil(o.StarPowder) {
		return nil, false
	}
	return o.StarPowder, true
}

// HasStarPowder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasStarPowder() bool {
	if o != nil && !IsNil(o.StarPowder) {
		return true
	}

	return false
}

// SetStarPowder gets a reference to the given int64 and assigns it to the StarPowder field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetStarPowder(v int64) {
	o.StarPowder = &v
}

// GetSteadyHand returns the SteadyHand field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSteadyHand() int64 {
	if o == nil || IsNil(o.SteadyHand) {
		var ret int64
		return ret
	}
	return *o.SteadyHand
}

// GetSteadyHandOk returns a tuple with the SteadyHand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSteadyHandOk() (*int64, bool) {
	if o == nil || IsNil(o.SteadyHand) {
		return nil, false
	}
	return o.SteadyHand, true
}

// HasSteadyHand returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasSteadyHand() bool {
	if o != nil && !IsNil(o.SteadyHand) {
		return true
	}

	return false
}

// SetSteadyHand gets a reference to the given int64 and assigns it to the SteadyHand field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetSteadyHand(v int64) {
	o.SteadyHand = &v
}

// GetStrongArm returns the StrongArm field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetStrongArm() int64 {
	if o == nil || IsNil(o.StrongArm) {
		var ret int64
		return ret
	}
	return *o.StrongArm
}

// GetStrongArmOk returns a tuple with the StrongArm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetStrongArmOk() (*int64, bool) {
	if o == nil || IsNil(o.StrongArm) {
		return nil, false
	}
	return o.StrongArm, true
}

// HasStrongArm returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasStrongArm() bool {
	if o != nil && !IsNil(o.StrongArm) {
		return true
	}

	return false
}

// SetStrongArm gets a reference to the given int64 and assigns it to the StrongArm field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetStrongArm(v int64) {
	o.StrongArm = &v
}

// GetSubterraneanFisher returns the SubterraneanFisher field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSubterraneanFisher() int64 {
	if o == nil || IsNil(o.SubterraneanFisher) {
		var ret int64
		return ret
	}
	return *o.SubterraneanFisher
}

// GetSubterraneanFisherOk returns a tuple with the SubterraneanFisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSubterraneanFisherOk() (*int64, bool) {
	if o == nil || IsNil(o.SubterraneanFisher) {
		return nil, false
	}
	return o.SubterraneanFisher, true
}

// HasSubterraneanFisher returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasSubterraneanFisher() bool {
	if o != nil && !IsNil(o.SubterraneanFisher) {
		return true
	}

	return false
}

// SetSubterraneanFisher gets a reference to the given int64 and assigns it to the SubterraneanFisher field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetSubterraneanFisher(v int64) {
	o.SubterraneanFisher = &v
}

// GetSubzeroMining returns the SubzeroMining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSubzeroMining() int64 {
	if o == nil || IsNil(o.SubzeroMining) {
		var ret int64
		return ret
	}
	return *o.SubzeroMining
}

// GetSubzeroMiningOk returns a tuple with the SubzeroMining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSubzeroMiningOk() (*int64, bool) {
	if o == nil || IsNil(o.SubzeroMining) {
		return nil, false
	}
	return o.SubzeroMining, true
}

// HasSubzeroMining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasSubzeroMining() bool {
	if o != nil && !IsNil(o.SubzeroMining) {
		return true
	}

	return false
}

// SetSubzeroMining gets a reference to the given int64 and assigns it to the SubzeroMining field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetSubzeroMining(v int64) {
	o.SubzeroMining = &v
}

// GetSurveyor returns the Surveyor field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSurveyor() int64 {
	if o == nil || IsNil(o.Surveyor) {
		var ret int64
		return ret
	}
	return *o.Surveyor
}

// GetSurveyorOk returns a tuple with the Surveyor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetSurveyorOk() (*int64, bool) {
	if o == nil || IsNil(o.Surveyor) {
		return nil, false
	}
	return o.Surveyor, true
}

// HasSurveyor returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasSurveyor() bool {
	if o != nil && !IsNil(o.Surveyor) {
		return true
	}

	return false
}

// SetSurveyor gets a reference to the given int64 and assigns it to the Surveyor field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetSurveyor(v int64) {
	o.Surveyor = &v
}

// GetTitaniumInsanium returns the TitaniumInsanium field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTitaniumInsanium() int64 {
	if o == nil || IsNil(o.TitaniumInsanium) {
		var ret int64
		return ret
	}
	return *o.TitaniumInsanium
}

// GetTitaniumInsaniumOk returns a tuple with the TitaniumInsanium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTitaniumInsaniumOk() (*int64, bool) {
	if o == nil || IsNil(o.TitaniumInsanium) {
		return nil, false
	}
	return o.TitaniumInsanium, true
}

// HasTitaniumInsanium returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasTitaniumInsanium() bool {
	if o != nil && !IsNil(o.TitaniumInsanium) {
		return true
	}

	return false
}

// SetTitaniumInsanium gets a reference to the given int64 and assigns it to the TitaniumInsanium field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetTitaniumInsanium(v int64) {
	o.TitaniumInsanium = &v
}

// GetToggleAnomalousDesire returns the ToggleAnomalousDesire field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleAnomalousDesire() bool {
	if o == nil || IsNil(o.ToggleAnomalousDesire) {
		var ret bool
		return ret
	}
	return *o.ToggleAnomalousDesire
}

// GetToggleAnomalousDesireOk returns a tuple with the ToggleAnomalousDesire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleAnomalousDesireOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleAnomalousDesire) {
		return nil, false
	}
	return o.ToggleAnomalousDesire, true
}

// HasToggleAnomalousDesire returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleAnomalousDesire() bool {
	if o != nil && !IsNil(o.ToggleAnomalousDesire) {
		return true
	}

	return false
}

// SetToggleAnomalousDesire gets a reference to the given bool and assigns it to the ToggleAnomalousDesire field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleAnomalousDesire(v bool) {
	o.ToggleAnomalousDesire = &v
}

// GetToggleBlockhead returns the ToggleBlockhead field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleBlockhead() bool {
	if o == nil || IsNil(o.ToggleBlockhead) {
		var ret bool
		return ret
	}
	return *o.ToggleBlockhead
}

// GetToggleBlockheadOk returns a tuple with the ToggleBlockhead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleBlockheadOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleBlockhead) {
		return nil, false
	}
	return o.ToggleBlockhead, true
}

// HasToggleBlockhead returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleBlockhead() bool {
	if o != nil && !IsNil(o.ToggleBlockhead) {
		return true
	}

	return false
}

// SetToggleBlockhead gets a reference to the given bool and assigns it to the ToggleBlockhead field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleBlockhead(v bool) {
	o.ToggleBlockhead = &v
}

// GetToggleCrystalline returns the ToggleCrystalline field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleCrystalline() bool {
	if o == nil || IsNil(o.ToggleCrystalline) {
		var ret bool
		return ret
	}
	return *o.ToggleCrystalline
}

// GetToggleCrystallineOk returns a tuple with the ToggleCrystalline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleCrystallineOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleCrystalline) {
		return nil, false
	}
	return o.ToggleCrystalline, true
}

// HasToggleCrystalline returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleCrystalline() bool {
	if o != nil && !IsNil(o.ToggleCrystalline) {
		return true
	}

	return false
}

// SetToggleCrystalline gets a reference to the given bool and assigns it to the ToggleCrystalline field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleCrystalline(v bool) {
	o.ToggleCrystalline = &v
}

// GetToggleDailyEffect returns the ToggleDailyEffect field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDailyEffect() bool {
	if o == nil || IsNil(o.ToggleDailyEffect) {
		var ret bool
		return ret
	}
	return *o.ToggleDailyEffect
}

// GetToggleDailyEffectOk returns a tuple with the ToggleDailyEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDailyEffectOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleDailyEffect) {
		return nil, false
	}
	return o.ToggleDailyEffect, true
}

// HasToggleDailyEffect returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleDailyEffect() bool {
	if o != nil && !IsNil(o.ToggleDailyEffect) {
		return true
	}

	return false
}

// SetToggleDailyEffect gets a reference to the given bool and assigns it to the ToggleDailyEffect field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleDailyEffect(v bool) {
	o.ToggleDailyEffect = &v
}

// GetToggleDailyGrind returns the ToggleDailyGrind field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDailyGrind() bool {
	if o == nil || IsNil(o.ToggleDailyGrind) {
		var ret bool
		return ret
	}
	return *o.ToggleDailyGrind
}

// GetToggleDailyGrindOk returns a tuple with the ToggleDailyGrind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDailyGrindOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleDailyGrind) {
		return nil, false
	}
	return o.ToggleDailyGrind, true
}

// HasToggleDailyGrind returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleDailyGrind() bool {
	if o != nil && !IsNil(o.ToggleDailyGrind) {
		return true
	}

	return false
}

// SetToggleDailyGrind gets a reference to the given bool and assigns it to the ToggleDailyGrind field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleDailyGrind(v bool) {
	o.ToggleDailyGrind = &v
}

// GetToggleDailyPowder returns the ToggleDailyPowder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDailyPowder() bool {
	if o == nil || IsNil(o.ToggleDailyPowder) {
		var ret bool
		return ret
	}
	return *o.ToggleDailyPowder
}

// GetToggleDailyPowderOk returns a tuple with the ToggleDailyPowder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDailyPowderOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleDailyPowder) {
		return nil, false
	}
	return o.ToggleDailyPowder, true
}

// HasToggleDailyPowder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleDailyPowder() bool {
	if o != nil && !IsNil(o.ToggleDailyPowder) {
		return true
	}

	return false
}

// SetToggleDailyPowder gets a reference to the given bool and assigns it to the ToggleDailyPowder field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleDailyPowder(v bool) {
	o.ToggleDailyPowder = &v
}

// GetToggleDustCollector returns the ToggleDustCollector field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDustCollector() bool {
	if o == nil || IsNil(o.ToggleDustCollector) {
		var ret bool
		return ret
	}
	return *o.ToggleDustCollector
}

// GetToggleDustCollectorOk returns a tuple with the ToggleDustCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleDustCollectorOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleDustCollector) {
		return nil, false
	}
	return o.ToggleDustCollector, true
}

// HasToggleDustCollector returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleDustCollector() bool {
	if o != nil && !IsNil(o.ToggleDustCollector) {
		return true
	}

	return false
}

// SetToggleDustCollector gets a reference to the given bool and assigns it to the ToggleDustCollector field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleDustCollector(v bool) {
	o.ToggleDustCollector = &v
}

// GetToggleEagerAdventurer returns the ToggleEagerAdventurer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleEagerAdventurer() bool {
	if o == nil || IsNil(o.ToggleEagerAdventurer) {
		var ret bool
		return ret
	}
	return *o.ToggleEagerAdventurer
}

// GetToggleEagerAdventurerOk returns a tuple with the ToggleEagerAdventurer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleEagerAdventurerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleEagerAdventurer) {
		return nil, false
	}
	return o.ToggleEagerAdventurer, true
}

// HasToggleEagerAdventurer returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleEagerAdventurer() bool {
	if o != nil && !IsNil(o.ToggleEagerAdventurer) {
		return true
	}

	return false
}

// SetToggleEagerAdventurer gets a reference to the given bool and assigns it to the ToggleEagerAdventurer field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleEagerAdventurer(v bool) {
	o.ToggleEagerAdventurer = &v
}

// GetToggleEfficientMiner returns the ToggleEfficientMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleEfficientMiner() bool {
	if o == nil || IsNil(o.ToggleEfficientMiner) {
		var ret bool
		return ret
	}
	return *o.ToggleEfficientMiner
}

// GetToggleEfficientMinerOk returns a tuple with the ToggleEfficientMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleEfficientMinerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleEfficientMiner) {
		return nil, false
	}
	return o.ToggleEfficientMiner, true
}

// HasToggleEfficientMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleEfficientMiner() bool {
	if o != nil && !IsNil(o.ToggleEfficientMiner) {
		return true
	}

	return false
}

// SetToggleEfficientMiner gets a reference to the given bool and assigns it to the ToggleEfficientMiner field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleEfficientMiner(v bool) {
	o.ToggleEfficientMiner = &v
}

// GetToggleExcavator returns the ToggleExcavator field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleExcavator() bool {
	if o == nil || IsNil(o.ToggleExcavator) {
		var ret bool
		return ret
	}
	return *o.ToggleExcavator
}

// GetToggleExcavatorOk returns a tuple with the ToggleExcavator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleExcavatorOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleExcavator) {
		return nil, false
	}
	return o.ToggleExcavator, true
}

// HasToggleExcavator returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleExcavator() bool {
	if o != nil && !IsNil(o.ToggleExcavator) {
		return true
	}

	return false
}

// SetToggleExcavator gets a reference to the given bool and assigns it to the ToggleExcavator field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleExcavator(v bool) {
	o.ToggleExcavator = &v
}

// GetToggleExperienceOrbs returns the ToggleExperienceOrbs field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleExperienceOrbs() bool {
	if o == nil || IsNil(o.ToggleExperienceOrbs) {
		var ret bool
		return ret
	}
	return *o.ToggleExperienceOrbs
}

// GetToggleExperienceOrbsOk returns a tuple with the ToggleExperienceOrbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleExperienceOrbsOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleExperienceOrbs) {
		return nil, false
	}
	return o.ToggleExperienceOrbs, true
}

// HasToggleExperienceOrbs returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleExperienceOrbs() bool {
	if o != nil && !IsNil(o.ToggleExperienceOrbs) {
		return true
	}

	return false
}

// SetToggleExperienceOrbs gets a reference to the given bool and assigns it to the ToggleExperienceOrbs field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleExperienceOrbs(v bool) {
	o.ToggleExperienceOrbs = &v
}

// GetToggleForgeTime returns the ToggleForgeTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleForgeTime() bool {
	if o == nil || IsNil(o.ToggleForgeTime) {
		var ret bool
		return ret
	}
	return *o.ToggleForgeTime
}

// GetToggleForgeTimeOk returns a tuple with the ToggleForgeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleForgeTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleForgeTime) {
		return nil, false
	}
	return o.ToggleForgeTime, true
}

// HasToggleForgeTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleForgeTime() bool {
	if o != nil && !IsNil(o.ToggleForgeTime) {
		return true
	}

	return false
}

// SetToggleForgeTime gets a reference to the given bool and assigns it to the ToggleForgeTime field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleForgeTime(v bool) {
	o.ToggleForgeTime = &v
}

// GetToggleFortunate returns the ToggleFortunate field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleFortunate() bool {
	if o == nil || IsNil(o.ToggleFortunate) {
		var ret bool
		return ret
	}
	return *o.ToggleFortunate
}

// GetToggleFortunateOk returns a tuple with the ToggleFortunate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleFortunateOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleFortunate) {
		return nil, false
	}
	return o.ToggleFortunate, true
}

// HasToggleFortunate returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleFortunate() bool {
	if o != nil && !IsNil(o.ToggleFortunate) {
		return true
	}

	return false
}

// SetToggleFortunate gets a reference to the given bool and assigns it to the ToggleFortunate field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleFortunate(v bool) {
	o.ToggleFortunate = &v
}

// GetToggleFrontLoaded returns the ToggleFrontLoaded field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleFrontLoaded() bool {
	if o == nil || IsNil(o.ToggleFrontLoaded) {
		var ret bool
		return ret
	}
	return *o.ToggleFrontLoaded
}

// GetToggleFrontLoadedOk returns a tuple with the ToggleFrontLoaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleFrontLoadedOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleFrontLoaded) {
		return nil, false
	}
	return o.ToggleFrontLoaded, true
}

// HasToggleFrontLoaded returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleFrontLoaded() bool {
	if o != nil && !IsNil(o.ToggleFrontLoaded) {
		return true
	}

	return false
}

// SetToggleFrontLoaded gets a reference to the given bool and assigns it to the ToggleFrontLoaded field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleFrontLoaded(v bool) {
	o.ToggleFrontLoaded = &v
}

// GetToggleFrozenSolid returns the ToggleFrozenSolid field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleFrozenSolid() bool {
	if o == nil || IsNil(o.ToggleFrozenSolid) {
		var ret bool
		return ret
	}
	return *o.ToggleFrozenSolid
}

// GetToggleFrozenSolidOk returns a tuple with the ToggleFrozenSolid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleFrozenSolidOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleFrozenSolid) {
		return nil, false
	}
	return o.ToggleFrozenSolid, true
}

// HasToggleFrozenSolid returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleFrozenSolid() bool {
	if o != nil && !IsNil(o.ToggleFrozenSolid) {
		return true
	}

	return false
}

// SetToggleFrozenSolid gets a reference to the given bool and assigns it to the ToggleFrozenSolid field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleFrozenSolid(v bool) {
	o.ToggleFrozenSolid = &v
}

// GetToggleGemstoneInfusion returns the ToggleGemstoneInfusion field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGemstoneInfusion() bool {
	if o == nil || IsNil(o.ToggleGemstoneInfusion) {
		var ret bool
		return ret
	}
	return *o.ToggleGemstoneInfusion
}

// GetToggleGemstoneInfusionOk returns a tuple with the ToggleGemstoneInfusion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGemstoneInfusionOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleGemstoneInfusion) {
		return nil, false
	}
	return o.ToggleGemstoneInfusion, true
}

// HasToggleGemstoneInfusion returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleGemstoneInfusion() bool {
	if o != nil && !IsNil(o.ToggleGemstoneInfusion) {
		return true
	}

	return false
}

// SetToggleGemstoneInfusion gets a reference to the given bool and assigns it to the ToggleGemstoneInfusion field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleGemstoneInfusion(v bool) {
	o.ToggleGemstoneInfusion = &v
}

// GetToggleGiftsFromTheDeparted returns the ToggleGiftsFromTheDeparted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGiftsFromTheDeparted() bool {
	if o == nil || IsNil(o.ToggleGiftsFromTheDeparted) {
		var ret bool
		return ret
	}
	return *o.ToggleGiftsFromTheDeparted
}

// GetToggleGiftsFromTheDepartedOk returns a tuple with the ToggleGiftsFromTheDeparted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGiftsFromTheDepartedOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleGiftsFromTheDeparted) {
		return nil, false
	}
	return o.ToggleGiftsFromTheDeparted, true
}

// HasToggleGiftsFromTheDeparted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleGiftsFromTheDeparted() bool {
	if o != nil && !IsNil(o.ToggleGiftsFromTheDeparted) {
		return true
	}

	return false
}

// SetToggleGiftsFromTheDeparted gets a reference to the given bool and assigns it to the ToggleGiftsFromTheDeparted field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleGiftsFromTheDeparted(v bool) {
	o.ToggleGiftsFromTheDeparted = &v
}

// GetToggleGoblinKiller returns the ToggleGoblinKiller field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGoblinKiller() bool {
	if o == nil || IsNil(o.ToggleGoblinKiller) {
		var ret bool
		return ret
	}
	return *o.ToggleGoblinKiller
}

// GetToggleGoblinKillerOk returns a tuple with the ToggleGoblinKiller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGoblinKillerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleGoblinKiller) {
		return nil, false
	}
	return o.ToggleGoblinKiller, true
}

// HasToggleGoblinKiller returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleGoblinKiller() bool {
	if o != nil && !IsNil(o.ToggleGoblinKiller) {
		return true
	}

	return false
}

// SetToggleGoblinKiller gets a reference to the given bool and assigns it to the ToggleGoblinKiller field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleGoblinKiller(v bool) {
	o.ToggleGoblinKiller = &v
}

// GetToggleGreatExplorer returns the ToggleGreatExplorer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGreatExplorer() bool {
	if o == nil || IsNil(o.ToggleGreatExplorer) {
		var ret bool
		return ret
	}
	return *o.ToggleGreatExplorer
}

// GetToggleGreatExplorerOk returns a tuple with the ToggleGreatExplorer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleGreatExplorerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleGreatExplorer) {
		return nil, false
	}
	return o.ToggleGreatExplorer, true
}

// HasToggleGreatExplorer returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleGreatExplorer() bool {
	if o != nil && !IsNil(o.ToggleGreatExplorer) {
		return true
	}

	return false
}

// SetToggleGreatExplorer gets a reference to the given bool and assigns it to the ToggleGreatExplorer field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleGreatExplorer(v bool) {
	o.ToggleGreatExplorer = &v
}

// GetToggleHungryForMore returns the ToggleHungryForMore field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleHungryForMore() bool {
	if o == nil || IsNil(o.ToggleHungryForMore) {
		var ret bool
		return ret
	}
	return *o.ToggleHungryForMore
}

// GetToggleHungryForMoreOk returns a tuple with the ToggleHungryForMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleHungryForMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleHungryForMore) {
		return nil, false
	}
	return o.ToggleHungryForMore, true
}

// HasToggleHungryForMore returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleHungryForMore() bool {
	if o != nil && !IsNil(o.ToggleHungryForMore) {
		return true
	}

	return false
}

// SetToggleHungryForMore gets a reference to the given bool and assigns it to the ToggleHungryForMore field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleHungryForMore(v bool) {
	o.ToggleHungryForMore = &v
}

// GetToggleKeenEye returns the ToggleKeenEye field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleKeenEye() bool {
	if o == nil || IsNil(o.ToggleKeenEye) {
		var ret bool
		return ret
	}
	return *o.ToggleKeenEye
}

// GetToggleKeenEyeOk returns a tuple with the ToggleKeenEye field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleKeenEyeOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleKeenEye) {
		return nil, false
	}
	return o.ToggleKeenEye, true
}

// HasToggleKeenEye returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleKeenEye() bool {
	if o != nil && !IsNil(o.ToggleKeenEye) {
		return true
	}

	return false
}

// SetToggleKeenEye gets a reference to the given bool and assigns it to the ToggleKeenEye field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleKeenEye(v bool) {
	o.ToggleKeenEye = &v
}

// GetToggleKeepItCool returns the ToggleKeepItCool field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleKeepItCool() bool {
	if o == nil || IsNil(o.ToggleKeepItCool) {
		var ret bool
		return ret
	}
	return *o.ToggleKeepItCool
}

// GetToggleKeepItCoolOk returns a tuple with the ToggleKeepItCool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleKeepItCoolOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleKeepItCool) {
		return nil, false
	}
	return o.ToggleKeepItCool, true
}

// HasToggleKeepItCool returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleKeepItCool() bool {
	if o != nil && !IsNil(o.ToggleKeepItCool) {
		return true
	}

	return false
}

// SetToggleKeepItCool gets a reference to the given bool and assigns it to the ToggleKeepItCool field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleKeepItCool(v bool) {
	o.ToggleKeepItCool = &v
}

// GetToggleLonesomeMiner returns the ToggleLonesomeMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleLonesomeMiner() bool {
	if o == nil || IsNil(o.ToggleLonesomeMiner) {
		var ret bool
		return ret
	}
	return *o.ToggleLonesomeMiner
}

// GetToggleLonesomeMinerOk returns a tuple with the ToggleLonesomeMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleLonesomeMinerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleLonesomeMiner) {
		return nil, false
	}
	return o.ToggleLonesomeMiner, true
}

// HasToggleLonesomeMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleLonesomeMiner() bool {
	if o != nil && !IsNil(o.ToggleLonesomeMiner) {
		return true
	}

	return false
}

// SetToggleLonesomeMiner gets a reference to the given bool and assigns it to the ToggleLonesomeMiner field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleLonesomeMiner(v bool) {
	o.ToggleLonesomeMiner = &v
}

// GetToggleManiacMiner returns the ToggleManiacMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleManiacMiner() bool {
	if o == nil || IsNil(o.ToggleManiacMiner) {
		var ret bool
		return ret
	}
	return *o.ToggleManiacMiner
}

// GetToggleManiacMinerOk returns a tuple with the ToggleManiacMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleManiacMinerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleManiacMiner) {
		return nil, false
	}
	return o.ToggleManiacMiner, true
}

// HasToggleManiacMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleManiacMiner() bool {
	if o != nil && !IsNil(o.ToggleManiacMiner) {
		return true
	}

	return false
}

// SetToggleManiacMiner gets a reference to the given bool and assigns it to the ToggleManiacMiner field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleManiacMiner(v bool) {
	o.ToggleManiacMiner = &v
}

// GetToggleMetalHead returns the ToggleMetalHead field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMetalHead() bool {
	if o == nil || IsNil(o.ToggleMetalHead) {
		var ret bool
		return ret
	}
	return *o.ToggleMetalHead
}

// GetToggleMetalHeadOk returns a tuple with the ToggleMetalHead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMetalHeadOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMetalHead) {
		return nil, false
	}
	return o.ToggleMetalHead, true
}

// HasToggleMetalHead returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMetalHead() bool {
	if o != nil && !IsNil(o.ToggleMetalHead) {
		return true
	}

	return false
}

// SetToggleMetalHead gets a reference to the given bool and assigns it to the ToggleMetalHead field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMetalHead(v bool) {
	o.ToggleMetalHead = &v
}

// GetToggleMinersBlessing returns the ToggleMinersBlessing field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMinersBlessing() bool {
	if o == nil || IsNil(o.ToggleMinersBlessing) {
		var ret bool
		return ret
	}
	return *o.ToggleMinersBlessing
}

// GetToggleMinersBlessingOk returns a tuple with the ToggleMinersBlessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMinersBlessingOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMinersBlessing) {
		return nil, false
	}
	return o.ToggleMinersBlessing, true
}

// HasToggleMinersBlessing returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMinersBlessing() bool {
	if o != nil && !IsNil(o.ToggleMinersBlessing) {
		return true
	}

	return false
}

// SetToggleMinersBlessing gets a reference to the given bool and assigns it to the ToggleMinersBlessing field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMinersBlessing(v bool) {
	o.ToggleMinersBlessing = &v
}

// GetToggleMineshaftMayhem returns the ToggleMineshaftMayhem field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMineshaftMayhem() bool {
	if o == nil || IsNil(o.ToggleMineshaftMayhem) {
		var ret bool
		return ret
	}
	return *o.ToggleMineshaftMayhem
}

// GetToggleMineshaftMayhemOk returns a tuple with the ToggleMineshaftMayhem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMineshaftMayhemOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMineshaftMayhem) {
		return nil, false
	}
	return o.ToggleMineshaftMayhem, true
}

// HasToggleMineshaftMayhem returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMineshaftMayhem() bool {
	if o != nil && !IsNil(o.ToggleMineshaftMayhem) {
		return true
	}

	return false
}

// SetToggleMineshaftMayhem gets a reference to the given bool and assigns it to the ToggleMineshaftMayhem field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMineshaftMayhem(v bool) {
	o.ToggleMineshaftMayhem = &v
}

// GetToggleMiningExpirience returns the ToggleMiningExpirience field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningExpirience() bool {
	if o == nil || IsNil(o.ToggleMiningExpirience) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningExpirience
}

// GetToggleMiningExpirienceOk returns a tuple with the ToggleMiningExpirience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningExpirienceOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningExpirience) {
		return nil, false
	}
	return o.ToggleMiningExpirience, true
}

// HasToggleMiningExpirience returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningExpirience() bool {
	if o != nil && !IsNil(o.ToggleMiningExpirience) {
		return true
	}

	return false
}

// SetToggleMiningExpirience gets a reference to the given bool and assigns it to the ToggleMiningExpirience field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningExpirience(v bool) {
	o.ToggleMiningExpirience = &v
}

// GetToggleMiningFortune returns the ToggleMiningFortune field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningFortune() bool {
	if o == nil || IsNil(o.ToggleMiningFortune) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningFortune
}

// GetToggleMiningFortuneOk returns a tuple with the ToggleMiningFortune field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningFortuneOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningFortune) {
		return nil, false
	}
	return o.ToggleMiningFortune, true
}

// HasToggleMiningFortune returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningFortune() bool {
	if o != nil && !IsNil(o.ToggleMiningFortune) {
		return true
	}

	return false
}

// SetToggleMiningFortune gets a reference to the given bool and assigns it to the ToggleMiningFortune field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningFortune(v bool) {
	o.ToggleMiningFortune = &v
}

// GetToggleMiningFortune2 returns the ToggleMiningFortune2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningFortune2() bool {
	if o == nil || IsNil(o.ToggleMiningFortune2) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningFortune2
}

// GetToggleMiningFortune2Ok returns a tuple with the ToggleMiningFortune2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningFortune2Ok() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningFortune2) {
		return nil, false
	}
	return o.ToggleMiningFortune2, true
}

// HasToggleMiningFortune2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningFortune2() bool {
	if o != nil && !IsNil(o.ToggleMiningFortune2) {
		return true
	}

	return false
}

// SetToggleMiningFortune2 gets a reference to the given bool and assigns it to the ToggleMiningFortune2 field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningFortune2(v bool) {
	o.ToggleMiningFortune2 = &v
}

// GetToggleMiningMadness returns the ToggleMiningMadness field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningMadness() bool {
	if o == nil || IsNil(o.ToggleMiningMadness) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningMadness
}

// GetToggleMiningMadnessOk returns a tuple with the ToggleMiningMadness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningMadnessOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningMadness) {
		return nil, false
	}
	return o.ToggleMiningMadness, true
}

// HasToggleMiningMadness returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningMadness() bool {
	if o != nil && !IsNil(o.ToggleMiningMadness) {
		return true
	}

	return false
}

// SetToggleMiningMadness gets a reference to the given bool and assigns it to the ToggleMiningMadness field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningMadness(v bool) {
	o.ToggleMiningMadness = &v
}

// GetToggleMiningMaster returns the ToggleMiningMaster field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningMaster() bool {
	if o == nil || IsNil(o.ToggleMiningMaster) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningMaster
}

// GetToggleMiningMasterOk returns a tuple with the ToggleMiningMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningMasterOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningMaster) {
		return nil, false
	}
	return o.ToggleMiningMaster, true
}

// HasToggleMiningMaster returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningMaster() bool {
	if o != nil && !IsNil(o.ToggleMiningMaster) {
		return true
	}

	return false
}

// SetToggleMiningMaster gets a reference to the given bool and assigns it to the ToggleMiningMaster field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningMaster(v bool) {
	o.ToggleMiningMaster = &v
}

// GetToggleMiningSpeed returns the ToggleMiningSpeed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningSpeed() bool {
	if o == nil || IsNil(o.ToggleMiningSpeed) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningSpeed
}

// GetToggleMiningSpeedOk returns a tuple with the ToggleMiningSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningSpeedOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningSpeed) {
		return nil, false
	}
	return o.ToggleMiningSpeed, true
}

// HasToggleMiningSpeed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningSpeed() bool {
	if o != nil && !IsNil(o.ToggleMiningSpeed) {
		return true
	}

	return false
}

// SetToggleMiningSpeed gets a reference to the given bool and assigns it to the ToggleMiningSpeed field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningSpeed(v bool) {
	o.ToggleMiningSpeed = &v
}

// GetToggleMiningSpeed2 returns the ToggleMiningSpeed2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningSpeed2() bool {
	if o == nil || IsNil(o.ToggleMiningSpeed2) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningSpeed2
}

// GetToggleMiningSpeed2Ok returns a tuple with the ToggleMiningSpeed2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningSpeed2Ok() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningSpeed2) {
		return nil, false
	}
	return o.ToggleMiningSpeed2, true
}

// HasToggleMiningSpeed2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningSpeed2() bool {
	if o != nil && !IsNil(o.ToggleMiningSpeed2) {
		return true
	}

	return false
}

// SetToggleMiningSpeed2 gets a reference to the given bool and assigns it to the ToggleMiningSpeed2 field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningSpeed2(v bool) {
	o.ToggleMiningSpeed2 = &v
}

// GetToggleMiningSpeedBoost returns the ToggleMiningSpeedBoost field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningSpeedBoost() bool {
	if o == nil || IsNil(o.ToggleMiningSpeedBoost) {
		var ret bool
		return ret
	}
	return *o.ToggleMiningSpeedBoost
}

// GetToggleMiningSpeedBoostOk returns a tuple with the ToggleMiningSpeedBoost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMiningSpeedBoostOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMiningSpeedBoost) {
		return nil, false
	}
	return o.ToggleMiningSpeedBoost, true
}

// HasToggleMiningSpeedBoost returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMiningSpeedBoost() bool {
	if o != nil && !IsNil(o.ToggleMiningSpeedBoost) {
		return true
	}

	return false
}

// SetToggleMiningSpeedBoost gets a reference to the given bool and assigns it to the ToggleMiningSpeedBoost field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMiningSpeedBoost(v bool) {
	o.ToggleMiningSpeedBoost = &v
}

// GetToggleMole returns the ToggleMole field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMole() bool {
	if o == nil || IsNil(o.ToggleMole) {
		var ret bool
		return ret
	}
	return *o.ToggleMole
}

// GetToggleMoleOk returns a tuple with the ToggleMole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleMoleOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleMole) {
		return nil, false
	}
	return o.ToggleMole, true
}

// HasToggleMole returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleMole() bool {
	if o != nil && !IsNil(o.ToggleMole) {
		return true
	}

	return false
}

// SetToggleMole gets a reference to the given bool and assigns it to the ToggleMole field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleMole(v bool) {
	o.ToggleMole = &v
}

// GetToggleNoStoneUnturned returns the ToggleNoStoneUnturned field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleNoStoneUnturned() bool {
	if o == nil || IsNil(o.ToggleNoStoneUnturned) {
		var ret bool
		return ret
	}
	return *o.ToggleNoStoneUnturned
}

// GetToggleNoStoneUnturnedOk returns a tuple with the ToggleNoStoneUnturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleNoStoneUnturnedOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleNoStoneUnturned) {
		return nil, false
	}
	return o.ToggleNoStoneUnturned, true
}

// HasToggleNoStoneUnturned returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleNoStoneUnturned() bool {
	if o != nil && !IsNil(o.ToggleNoStoneUnturned) {
		return true
	}

	return false
}

// SetToggleNoStoneUnturned gets a reference to the given bool and assigns it to the ToggleNoStoneUnturned field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleNoStoneUnturned(v bool) {
	o.ToggleNoStoneUnturned = &v
}

// GetToggleOldSchool returns the ToggleOldSchool field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleOldSchool() bool {
	if o == nil || IsNil(o.ToggleOldSchool) {
		var ret bool
		return ret
	}
	return *o.ToggleOldSchool
}

// GetToggleOldSchoolOk returns a tuple with the ToggleOldSchool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleOldSchoolOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleOldSchool) {
		return nil, false
	}
	return o.ToggleOldSchool, true
}

// HasToggleOldSchool returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleOldSchool() bool {
	if o != nil && !IsNil(o.ToggleOldSchool) {
		return true
	}

	return false
}

// SetToggleOldSchool gets a reference to the given bool and assigns it to the ToggleOldSchool field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleOldSchool(v bool) {
	o.ToggleOldSchool = &v
}

// GetTogglePickaxeToss returns the TogglePickaxeToss field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTogglePickaxeToss() bool {
	if o == nil || IsNil(o.TogglePickaxeToss) {
		var ret bool
		return ret
	}
	return *o.TogglePickaxeToss
}

// GetTogglePickaxeTossOk returns a tuple with the TogglePickaxeToss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTogglePickaxeTossOk() (*bool, bool) {
	if o == nil || IsNil(o.TogglePickaxeToss) {
		return nil, false
	}
	return o.TogglePickaxeToss, true
}

// HasTogglePickaxeToss returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasTogglePickaxeToss() bool {
	if o != nil && !IsNil(o.TogglePickaxeToss) {
		return true
	}

	return false
}

// SetTogglePickaxeToss gets a reference to the given bool and assigns it to the TogglePickaxeToss field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetTogglePickaxeToss(v bool) {
	o.TogglePickaxeToss = &v
}

// GetTogglePowderBuff returns the TogglePowderBuff field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTogglePowderBuff() bool {
	if o == nil || IsNil(o.TogglePowderBuff) {
		var ret bool
		return ret
	}
	return *o.TogglePowderBuff
}

// GetTogglePowderBuffOk returns a tuple with the TogglePowderBuff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTogglePowderBuffOk() (*bool, bool) {
	if o == nil || IsNil(o.TogglePowderBuff) {
		return nil, false
	}
	return o.TogglePowderBuff, true
}

// HasTogglePowderBuff returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasTogglePowderBuff() bool {
	if o != nil && !IsNil(o.TogglePowderBuff) {
		return true
	}

	return false
}

// SetTogglePowderBuff gets a reference to the given bool and assigns it to the TogglePowderBuff field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetTogglePowderBuff(v bool) {
	o.TogglePowderBuff = &v
}

// GetTogglePrecisionMining returns the TogglePrecisionMining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTogglePrecisionMining() bool {
	if o == nil || IsNil(o.TogglePrecisionMining) {
		var ret bool
		return ret
	}
	return *o.TogglePrecisionMining
}

// GetTogglePrecisionMiningOk returns a tuple with the TogglePrecisionMining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetTogglePrecisionMiningOk() (*bool, bool) {
	if o == nil || IsNil(o.TogglePrecisionMining) {
		return nil, false
	}
	return o.TogglePrecisionMining, true
}

// HasTogglePrecisionMining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasTogglePrecisionMining() bool {
	if o != nil && !IsNil(o.TogglePrecisionMining) {
		return true
	}

	return false
}

// SetTogglePrecisionMining gets a reference to the given bool and assigns it to the TogglePrecisionMining field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetTogglePrecisionMining(v bool) {
	o.TogglePrecisionMining = &v
}

// GetToggleProfessional returns the ToggleProfessional field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleProfessional() bool {
	if o == nil || IsNil(o.ToggleProfessional) {
		var ret bool
		return ret
	}
	return *o.ToggleProfessional
}

// GetToggleProfessionalOk returns a tuple with the ToggleProfessional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleProfessionalOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleProfessional) {
		return nil, false
	}
	return o.ToggleProfessional, true
}

// HasToggleProfessional returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleProfessional() bool {
	if o != nil && !IsNil(o.ToggleProfessional) {
		return true
	}

	return false
}

// SetToggleProfessional gets a reference to the given bool and assigns it to the ToggleProfessional field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleProfessional(v bool) {
	o.ToggleProfessional = &v
}

// GetToggleRagsToRiches returns the ToggleRagsToRiches field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleRagsToRiches() bool {
	if o == nil || IsNil(o.ToggleRagsToRiches) {
		var ret bool
		return ret
	}
	return *o.ToggleRagsToRiches
}

// GetToggleRagsToRichesOk returns a tuple with the ToggleRagsToRiches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleRagsToRichesOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleRagsToRiches) {
		return nil, false
	}
	return o.ToggleRagsToRiches, true
}

// HasToggleRagsToRiches returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleRagsToRiches() bool {
	if o != nil && !IsNil(o.ToggleRagsToRiches) {
		return true
	}

	return false
}

// SetToggleRagsToRiches gets a reference to the given bool and assigns it to the ToggleRagsToRiches field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleRagsToRiches(v bool) {
	o.ToggleRagsToRiches = &v
}

// GetToggleRandomEvent returns the ToggleRandomEvent field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleRandomEvent() bool {
	if o == nil || IsNil(o.ToggleRandomEvent) {
		var ret bool
		return ret
	}
	return *o.ToggleRandomEvent
}

// GetToggleRandomEventOk returns a tuple with the ToggleRandomEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleRandomEventOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleRandomEvent) {
		return nil, false
	}
	return o.ToggleRandomEvent, true
}

// HasToggleRandomEvent returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleRandomEvent() bool {
	if o != nil && !IsNil(o.ToggleRandomEvent) {
		return true
	}

	return false
}

// SetToggleRandomEvent gets a reference to the given bool and assigns it to the ToggleRandomEvent field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleRandomEvent(v bool) {
	o.ToggleRandomEvent = &v
}

// GetToggleSheerForce returns the ToggleSheerForce field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSheerForce() bool {
	if o == nil || IsNil(o.ToggleSheerForce) {
		var ret bool
		return ret
	}
	return *o.ToggleSheerForce
}

// GetToggleSheerForceOk returns a tuple with the ToggleSheerForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSheerForceOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleSheerForce) {
		return nil, false
	}
	return o.ToggleSheerForce, true
}

// HasToggleSheerForce returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleSheerForce() bool {
	if o != nil && !IsNil(o.ToggleSheerForce) {
		return true
	}

	return false
}

// SetToggleSheerForce gets a reference to the given bool and assigns it to the ToggleSheerForce field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleSheerForce(v bool) {
	o.ToggleSheerForce = &v
}

// GetToggleStarPowder returns the ToggleStarPowder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleStarPowder() bool {
	if o == nil || IsNil(o.ToggleStarPowder) {
		var ret bool
		return ret
	}
	return *o.ToggleStarPowder
}

// GetToggleStarPowderOk returns a tuple with the ToggleStarPowder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleStarPowderOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleStarPowder) {
		return nil, false
	}
	return o.ToggleStarPowder, true
}

// HasToggleStarPowder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleStarPowder() bool {
	if o != nil && !IsNil(o.ToggleStarPowder) {
		return true
	}

	return false
}

// SetToggleStarPowder gets a reference to the given bool and assigns it to the ToggleStarPowder field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleStarPowder(v bool) {
	o.ToggleStarPowder = &v
}

// GetToggleSteadyHand returns the ToggleSteadyHand field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSteadyHand() bool {
	if o == nil || IsNil(o.ToggleSteadyHand) {
		var ret bool
		return ret
	}
	return *o.ToggleSteadyHand
}

// GetToggleSteadyHandOk returns a tuple with the ToggleSteadyHand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSteadyHandOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleSteadyHand) {
		return nil, false
	}
	return o.ToggleSteadyHand, true
}

// HasToggleSteadyHand returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleSteadyHand() bool {
	if o != nil && !IsNil(o.ToggleSteadyHand) {
		return true
	}

	return false
}

// SetToggleSteadyHand gets a reference to the given bool and assigns it to the ToggleSteadyHand field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleSteadyHand(v bool) {
	o.ToggleSteadyHand = &v
}

// GetToggleStrongArm returns the ToggleStrongArm field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleStrongArm() bool {
	if o == nil || IsNil(o.ToggleStrongArm) {
		var ret bool
		return ret
	}
	return *o.ToggleStrongArm
}

// GetToggleStrongArmOk returns a tuple with the ToggleStrongArm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleStrongArmOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleStrongArm) {
		return nil, false
	}
	return o.ToggleStrongArm, true
}

// HasToggleStrongArm returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleStrongArm() bool {
	if o != nil && !IsNil(o.ToggleStrongArm) {
		return true
	}

	return false
}

// SetToggleStrongArm gets a reference to the given bool and assigns it to the ToggleStrongArm field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleStrongArm(v bool) {
	o.ToggleStrongArm = &v
}

// GetToggleSubterraneanFisher returns the ToggleSubterraneanFisher field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSubterraneanFisher() bool {
	if o == nil || IsNil(o.ToggleSubterraneanFisher) {
		var ret bool
		return ret
	}
	return *o.ToggleSubterraneanFisher
}

// GetToggleSubterraneanFisherOk returns a tuple with the ToggleSubterraneanFisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSubterraneanFisherOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleSubterraneanFisher) {
		return nil, false
	}
	return o.ToggleSubterraneanFisher, true
}

// HasToggleSubterraneanFisher returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleSubterraneanFisher() bool {
	if o != nil && !IsNil(o.ToggleSubterraneanFisher) {
		return true
	}

	return false
}

// SetToggleSubterraneanFisher gets a reference to the given bool and assigns it to the ToggleSubterraneanFisher field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleSubterraneanFisher(v bool) {
	o.ToggleSubterraneanFisher = &v
}

// GetToggleSubzeroMining returns the ToggleSubzeroMining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSubzeroMining() bool {
	if o == nil || IsNil(o.ToggleSubzeroMining) {
		var ret bool
		return ret
	}
	return *o.ToggleSubzeroMining
}

// GetToggleSubzeroMiningOk returns a tuple with the ToggleSubzeroMining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSubzeroMiningOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleSubzeroMining) {
		return nil, false
	}
	return o.ToggleSubzeroMining, true
}

// HasToggleSubzeroMining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleSubzeroMining() bool {
	if o != nil && !IsNil(o.ToggleSubzeroMining) {
		return true
	}

	return false
}

// SetToggleSubzeroMining gets a reference to the given bool and assigns it to the ToggleSubzeroMining field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleSubzeroMining(v bool) {
	o.ToggleSubzeroMining = &v
}

// GetToggleSurveyor returns the ToggleSurveyor field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSurveyor() bool {
	if o == nil || IsNil(o.ToggleSurveyor) {
		var ret bool
		return ret
	}
	return *o.ToggleSurveyor
}

// GetToggleSurveyorOk returns a tuple with the ToggleSurveyor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleSurveyorOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleSurveyor) {
		return nil, false
	}
	return o.ToggleSurveyor, true
}

// HasToggleSurveyor returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleSurveyor() bool {
	if o != nil && !IsNil(o.ToggleSurveyor) {
		return true
	}

	return false
}

// SetToggleSurveyor gets a reference to the given bool and assigns it to the ToggleSurveyor field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleSurveyor(v bool) {
	o.ToggleSurveyor = &v
}

// GetToggleTitaniumInsanium returns the ToggleTitaniumInsanium field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleTitaniumInsanium() bool {
	if o == nil || IsNil(o.ToggleTitaniumInsanium) {
		var ret bool
		return ret
	}
	return *o.ToggleTitaniumInsanium
}

// GetToggleTitaniumInsaniumOk returns a tuple with the ToggleTitaniumInsanium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleTitaniumInsaniumOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleTitaniumInsanium) {
		return nil, false
	}
	return o.ToggleTitaniumInsanium, true
}

// HasToggleTitaniumInsanium returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleTitaniumInsanium() bool {
	if o != nil && !IsNil(o.ToggleTitaniumInsanium) {
		return true
	}

	return false
}

// SetToggleTitaniumInsanium gets a reference to the given bool and assigns it to the ToggleTitaniumInsanium field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleTitaniumInsanium(v bool) {
	o.ToggleTitaniumInsanium = &v
}

// GetToggleVanguardSeeker returns the ToggleVanguardSeeker field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleVanguardSeeker() bool {
	if o == nil || IsNil(o.ToggleVanguardSeeker) {
		var ret bool
		return ret
	}
	return *o.ToggleVanguardSeeker
}

// GetToggleVanguardSeekerOk returns a tuple with the ToggleVanguardSeeker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleVanguardSeekerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleVanguardSeeker) {
		return nil, false
	}
	return o.ToggleVanguardSeeker, true
}

// HasToggleVanguardSeeker returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleVanguardSeeker() bool {
	if o != nil && !IsNil(o.ToggleVanguardSeeker) {
		return true
	}

	return false
}

// SetToggleVanguardSeeker gets a reference to the given bool and assigns it to the ToggleVanguardSeeker field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleVanguardSeeker(v bool) {
	o.ToggleVanguardSeeker = &v
}

// GetToggleVeinSeeker returns the ToggleVeinSeeker field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleVeinSeeker() bool {
	if o == nil || IsNil(o.ToggleVeinSeeker) {
		var ret bool
		return ret
	}
	return *o.ToggleVeinSeeker
}

// GetToggleVeinSeekerOk returns a tuple with the ToggleVeinSeeker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleVeinSeekerOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleVeinSeeker) {
		return nil, false
	}
	return o.ToggleVeinSeeker, true
}

// HasToggleVeinSeeker returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleVeinSeeker() bool {
	if o != nil && !IsNil(o.ToggleVeinSeeker) {
		return true
	}

	return false
}

// SetToggleVeinSeeker gets a reference to the given bool and assigns it to the ToggleVeinSeeker field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleVeinSeeker(v bool) {
	o.ToggleVeinSeeker = &v
}

// GetToggleWarmHearted returns the ToggleWarmHearted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleWarmHearted() bool {
	if o == nil || IsNil(o.ToggleWarmHearted) {
		var ret bool
		return ret
	}
	return *o.ToggleWarmHearted
}

// GetToggleWarmHeartedOk returns a tuple with the ToggleWarmHearted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetToggleWarmHeartedOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleWarmHearted) {
		return nil, false
	}
	return o.ToggleWarmHearted, true
}

// HasToggleWarmHearted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasToggleWarmHearted() bool {
	if o != nil && !IsNil(o.ToggleWarmHearted) {
		return true
	}

	return false
}

// SetToggleWarmHearted gets a reference to the given bool and assigns it to the ToggleWarmHearted field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetToggleWarmHearted(v bool) {
	o.ToggleWarmHearted = &v
}

// GetVanguardSeeker returns the VanguardSeeker field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetVanguardSeeker() int64 {
	if o == nil || IsNil(o.VanguardSeeker) {
		var ret int64
		return ret
	}
	return *o.VanguardSeeker
}

// GetVanguardSeekerOk returns a tuple with the VanguardSeeker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetVanguardSeekerOk() (*int64, bool) {
	if o == nil || IsNil(o.VanguardSeeker) {
		return nil, false
	}
	return o.VanguardSeeker, true
}

// HasVanguardSeeker returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasVanguardSeeker() bool {
	if o != nil && !IsNil(o.VanguardSeeker) {
		return true
	}

	return false
}

// SetVanguardSeeker gets a reference to the given int64 and assigns it to the VanguardSeeker field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetVanguardSeeker(v int64) {
	o.VanguardSeeker = &v
}

// GetVeinSeeker returns the VeinSeeker field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetVeinSeeker() int64 {
	if o == nil || IsNil(o.VeinSeeker) {
		var ret int64
		return ret
	}
	return *o.VeinSeeker
}

// GetVeinSeekerOk returns a tuple with the VeinSeeker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetVeinSeekerOk() (*int64, bool) {
	if o == nil || IsNil(o.VeinSeeker) {
		return nil, false
	}
	return o.VeinSeeker, true
}

// HasVeinSeeker returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasVeinSeeker() bool {
	if o != nil && !IsNil(o.VeinSeeker) {
		return true
	}

	return false
}

// SetVeinSeeker gets a reference to the given int64 and assigns it to the VeinSeeker field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetVeinSeeker(v int64) {
	o.VeinSeeker = &v
}

// GetWarmHearted returns the WarmHearted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetWarmHearted() int64 {
	if o == nil || IsNil(o.WarmHearted) {
		var ret int64
		return ret
	}
	return *o.WarmHearted
}

// GetWarmHeartedOk returns a tuple with the WarmHearted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) GetWarmHeartedOk() (*int64, bool) {
	if o == nil || IsNil(o.WarmHearted) {
		return nil, false
	}
	return o.WarmHearted, true
}

// HasWarmHearted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCoreNodes) HasWarmHearted() bool {
	if o != nil && !IsNil(o.WarmHearted) {
		return true
	}

	return false
}

// SetWarmHearted gets a reference to the given int64 and assigns it to the WarmHearted field.
func (o *SkyBlockProfileMemberMiningCoreNodes) SetWarmHearted(v int64) {
	o.WarmHearted = &v
}

func (o SkyBlockProfileMemberMiningCoreNodes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberMiningCoreNodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnomalousDesire) {
		toSerialize["anomalous_desire"] = o.AnomalousDesire
	}
	if !IsNil(o.Blockhead) {
		toSerialize["blockhead"] = o.Blockhead
	}
	if !IsNil(o.Crystalline) {
		toSerialize["crystalline"] = o.Crystalline
	}
	if !IsNil(o.DailyEffect) {
		toSerialize["daily_effect"] = o.DailyEffect
	}
	if !IsNil(o.DailyGrind) {
		toSerialize["daily_grind"] = o.DailyGrind
	}
	if !IsNil(o.DailyPowder) {
		toSerialize["daily_powder"] = o.DailyPowder
	}
	if !IsNil(o.DustCollector) {
		toSerialize["dust_collector"] = o.DustCollector
	}
	if !IsNil(o.EagerAdventurer) {
		toSerialize["eager_adventurer"] = o.EagerAdventurer
	}
	if !IsNil(o.EfficientMiner) {
		toSerialize["efficient_miner"] = o.EfficientMiner
	}
	if !IsNil(o.Excavator) {
		toSerialize["excavator"] = o.Excavator
	}
	if !IsNil(o.ExperienceOrbs) {
		toSerialize["experience_orbs"] = o.ExperienceOrbs
	}
	if !IsNil(o.FallenStarBonus) {
		toSerialize["fallen_star_bonus"] = o.FallenStarBonus
	}
	if !IsNil(o.ForgeTime) {
		toSerialize["forge_time"] = o.ForgeTime
	}
	if !IsNil(o.Fortunate) {
		toSerialize["fortunate"] = o.Fortunate
	}
	if !IsNil(o.FrontLoaded) {
		toSerialize["front_loaded"] = o.FrontLoaded
	}
	if !IsNil(o.FrozenSolid) {
		toSerialize["frozen_solid"] = o.FrozenSolid
	}
	if !IsNil(o.GemstoneInfusion) {
		toSerialize["gemstone_infusion"] = o.GemstoneInfusion
	}
	if !IsNil(o.GiftsFromTheDeparted) {
		toSerialize["gifts_from_the_departed"] = o.GiftsFromTheDeparted
	}
	if !IsNil(o.GoblinKiller) {
		toSerialize["goblin_killer"] = o.GoblinKiller
	}
	if !IsNil(o.GreatExplorer) {
		toSerialize["great_explorer"] = o.GreatExplorer
	}
	if !IsNil(o.HungryForMore) {
		toSerialize["hungry_for_more"] = o.HungryForMore
	}
	if !IsNil(o.KeenEye) {
		toSerialize["keen_eye"] = o.KeenEye
	}
	if !IsNil(o.KeepItCool) {
		toSerialize["keep_it_cool"] = o.KeepItCool
	}
	if !IsNil(o.LonesomeMiner) {
		toSerialize["lonesome_miner"] = o.LonesomeMiner
	}
	if !IsNil(o.ManiacMiner) {
		toSerialize["maniac_miner"] = o.ManiacMiner
	}
	if !IsNil(o.MetalHead) {
		toSerialize["metal_head"] = o.MetalHead
	}
	if !IsNil(o.MinersBlessing) {
		toSerialize["miners_blessing"] = o.MinersBlessing
	}
	if !IsNil(o.MineshaftMayhem) {
		toSerialize["mineshaft_mayhem"] = o.MineshaftMayhem
	}
	if !IsNil(o.MiningExperience) {
		toSerialize["mining_experience"] = o.MiningExperience
	}
	if !IsNil(o.MiningFortune) {
		toSerialize["mining_fortune"] = o.MiningFortune
	}
	if !IsNil(o.MiningFortune2) {
		toSerialize["mining_fortune_2"] = o.MiningFortune2
	}
	if !IsNil(o.MiningMadness) {
		toSerialize["mining_madness"] = o.MiningMadness
	}
	if !IsNil(o.MiningMaster) {
		toSerialize["mining_master"] = o.MiningMaster
	}
	if !IsNil(o.MiningSpeed) {
		toSerialize["mining_speed"] = o.MiningSpeed
	}
	if !IsNil(o.MiningSpeed2) {
		toSerialize["mining_speed_2"] = o.MiningSpeed2
	}
	if !IsNil(o.MiningSpeedBoost) {
		toSerialize["mining_speed_boost"] = o.MiningSpeedBoost
	}
	if !IsNil(o.Mole) {
		toSerialize["mole"] = o.Mole
	}
	if !IsNil(o.NoStoneUnturned) {
		toSerialize["no_stone_unturned"] = o.NoStoneUnturned
	}
	if !IsNil(o.OldSchool) {
		toSerialize["old_school"] = o.OldSchool
	}
	if !IsNil(o.PickaxeToss) {
		toSerialize["pickaxe_toss"] = o.PickaxeToss
	}
	if !IsNil(o.PowderBuff) {
		toSerialize["powder_buff"] = o.PowderBuff
	}
	if !IsNil(o.PrecisionMining) {
		toSerialize["precision_mining"] = o.PrecisionMining
	}
	if !IsNil(o.Professional) {
		toSerialize["professional"] = o.Professional
	}
	if !IsNil(o.RagsToRiches) {
		toSerialize["rags_to_riches"] = o.RagsToRiches
	}
	if !IsNil(o.RandomEvent) {
		toSerialize["random_event"] = o.RandomEvent
	}
	if !IsNil(o.SheerForce) {
		toSerialize["sheer_force"] = o.SheerForce
	}
	if !IsNil(o.Special0) {
		toSerialize["special_0"] = o.Special0
	}
	if !IsNil(o.StarPowder) {
		toSerialize["star_powder"] = o.StarPowder
	}
	if !IsNil(o.SteadyHand) {
		toSerialize["steady_hand"] = o.SteadyHand
	}
	if !IsNil(o.StrongArm) {
		toSerialize["strong_arm"] = o.StrongArm
	}
	if !IsNil(o.SubterraneanFisher) {
		toSerialize["subterranean_fisher"] = o.SubterraneanFisher
	}
	if !IsNil(o.SubzeroMining) {
		toSerialize["subzero_mining"] = o.SubzeroMining
	}
	if !IsNil(o.Surveyor) {
		toSerialize["surveyor"] = o.Surveyor
	}
	if !IsNil(o.TitaniumInsanium) {
		toSerialize["titanium_insanium"] = o.TitaniumInsanium
	}
	if !IsNil(o.ToggleAnomalousDesire) {
		toSerialize["toggle_anomalous_desire"] = o.ToggleAnomalousDesire
	}
	if !IsNil(o.ToggleBlockhead) {
		toSerialize["toggle_blockhead"] = o.ToggleBlockhead
	}
	if !IsNil(o.ToggleCrystalline) {
		toSerialize["toggle_crystalline"] = o.ToggleCrystalline
	}
	if !IsNil(o.ToggleDailyEffect) {
		toSerialize["toggle_daily_effect"] = o.ToggleDailyEffect
	}
	if !IsNil(o.ToggleDailyGrind) {
		toSerialize["toggle_daily_grind"] = o.ToggleDailyGrind
	}
	if !IsNil(o.ToggleDailyPowder) {
		toSerialize["toggle_daily_powder"] = o.ToggleDailyPowder
	}
	if !IsNil(o.ToggleDustCollector) {
		toSerialize["toggle_dust_collector"] = o.ToggleDustCollector
	}
	if !IsNil(o.ToggleEagerAdventurer) {
		toSerialize["toggle_eager_adventurer"] = o.ToggleEagerAdventurer
	}
	if !IsNil(o.ToggleEfficientMiner) {
		toSerialize["toggle_efficient_miner"] = o.ToggleEfficientMiner
	}
	if !IsNil(o.ToggleExcavator) {
		toSerialize["toggle_excavator"] = o.ToggleExcavator
	}
	if !IsNil(o.ToggleExperienceOrbs) {
		toSerialize["toggle_experience_orbs"] = o.ToggleExperienceOrbs
	}
	if !IsNil(o.ToggleForgeTime) {
		toSerialize["toggle_forge_time"] = o.ToggleForgeTime
	}
	if !IsNil(o.ToggleFortunate) {
		toSerialize["toggle_fortunate"] = o.ToggleFortunate
	}
	if !IsNil(o.ToggleFrontLoaded) {
		toSerialize["toggle_front_loaded"] = o.ToggleFrontLoaded
	}
	if !IsNil(o.ToggleFrozenSolid) {
		toSerialize["toggle_frozen_solid"] = o.ToggleFrozenSolid
	}
	if !IsNil(o.ToggleGemstoneInfusion) {
		toSerialize["toggle_gemstone_infusion"] = o.ToggleGemstoneInfusion
	}
	if !IsNil(o.ToggleGiftsFromTheDeparted) {
		toSerialize["toggle_gifts_from_the_departed"] = o.ToggleGiftsFromTheDeparted
	}
	if !IsNil(o.ToggleGoblinKiller) {
		toSerialize["toggle_goblin_killer"] = o.ToggleGoblinKiller
	}
	if !IsNil(o.ToggleGreatExplorer) {
		toSerialize["toggle_great_explorer"] = o.ToggleGreatExplorer
	}
	if !IsNil(o.ToggleHungryForMore) {
		toSerialize["toggle_hungry_for_more"] = o.ToggleHungryForMore
	}
	if !IsNil(o.ToggleKeenEye) {
		toSerialize["toggle_keen_eye"] = o.ToggleKeenEye
	}
	if !IsNil(o.ToggleKeepItCool) {
		toSerialize["toggle_keep_it_cool"] = o.ToggleKeepItCool
	}
	if !IsNil(o.ToggleLonesomeMiner) {
		toSerialize["toggle_lonesome_miner"] = o.ToggleLonesomeMiner
	}
	if !IsNil(o.ToggleManiacMiner) {
		toSerialize["toggle_maniac_miner"] = o.ToggleManiacMiner
	}
	if !IsNil(o.ToggleMetalHead) {
		toSerialize["toggle_metal_head"] = o.ToggleMetalHead
	}
	if !IsNil(o.ToggleMinersBlessing) {
		toSerialize["toggle_miners_blessing"] = o.ToggleMinersBlessing
	}
	if !IsNil(o.ToggleMineshaftMayhem) {
		toSerialize["toggle_mineshaft_mayhem"] = o.ToggleMineshaftMayhem
	}
	if !IsNil(o.ToggleMiningExpirience) {
		toSerialize["toggle_mining_expirience"] = o.ToggleMiningExpirience
	}
	if !IsNil(o.ToggleMiningFortune) {
		toSerialize["toggle_mining_fortune"] = o.ToggleMiningFortune
	}
	if !IsNil(o.ToggleMiningFortune2) {
		toSerialize["toggle_mining_fortune_2"] = o.ToggleMiningFortune2
	}
	if !IsNil(o.ToggleMiningMadness) {
		toSerialize["toggle_mining_madness"] = o.ToggleMiningMadness
	}
	if !IsNil(o.ToggleMiningMaster) {
		toSerialize["toggle_mining_master"] = o.ToggleMiningMaster
	}
	if !IsNil(o.ToggleMiningSpeed) {
		toSerialize["toggle_mining_speed"] = o.ToggleMiningSpeed
	}
	if !IsNil(o.ToggleMiningSpeed2) {
		toSerialize["toggle_mining_speed_2"] = o.ToggleMiningSpeed2
	}
	if !IsNil(o.ToggleMiningSpeedBoost) {
		toSerialize["toggle_mining_speed_boost"] = o.ToggleMiningSpeedBoost
	}
	if !IsNil(o.ToggleMole) {
		toSerialize["toggle_mole"] = o.ToggleMole
	}
	if !IsNil(o.ToggleNoStoneUnturned) {
		toSerialize["toggle_no_stone_unturned"] = o.ToggleNoStoneUnturned
	}
	if !IsNil(o.ToggleOldSchool) {
		toSerialize["toggle_old_school"] = o.ToggleOldSchool
	}
	if !IsNil(o.TogglePickaxeToss) {
		toSerialize["toggle_pickaxe_toss"] = o.TogglePickaxeToss
	}
	if !IsNil(o.TogglePowderBuff) {
		toSerialize["toggle_powder_buff"] = o.TogglePowderBuff
	}
	if !IsNil(o.TogglePrecisionMining) {
		toSerialize["toggle_precision_mining"] = o.TogglePrecisionMining
	}
	if !IsNil(o.ToggleProfessional) {
		toSerialize["toggle_professional"] = o.ToggleProfessional
	}
	if !IsNil(o.ToggleRagsToRiches) {
		toSerialize["toggle_rags_to_riches"] = o.ToggleRagsToRiches
	}
	if !IsNil(o.ToggleRandomEvent) {
		toSerialize["toggle_random_event"] = o.ToggleRandomEvent
	}
	if !IsNil(o.ToggleSheerForce) {
		toSerialize["toggle_sheer_force"] = o.ToggleSheerForce
	}
	if !IsNil(o.ToggleStarPowder) {
		toSerialize["toggle_star_powder"] = o.ToggleStarPowder
	}
	if !IsNil(o.ToggleSteadyHand) {
		toSerialize["toggle_steady_hand"] = o.ToggleSteadyHand
	}
	if !IsNil(o.ToggleStrongArm) {
		toSerialize["toggle_strong_arm"] = o.ToggleStrongArm
	}
	if !IsNil(o.ToggleSubterraneanFisher) {
		toSerialize["toggle_subterranean_fisher"] = o.ToggleSubterraneanFisher
	}
	if !IsNil(o.ToggleSubzeroMining) {
		toSerialize["toggle_subzero_mining"] = o.ToggleSubzeroMining
	}
	if !IsNil(o.ToggleSurveyor) {
		toSerialize["toggle_surveyor"] = o.ToggleSurveyor
	}
	if !IsNil(o.ToggleTitaniumInsanium) {
		toSerialize["toggle_titanium_insanium"] = o.ToggleTitaniumInsanium
	}
	if !IsNil(o.ToggleVanguardSeeker) {
		toSerialize["toggle_vanguard_seeker"] = o.ToggleVanguardSeeker
	}
	if !IsNil(o.ToggleVeinSeeker) {
		toSerialize["toggle_vein_seeker"] = o.ToggleVeinSeeker
	}
	if !IsNil(o.ToggleWarmHearted) {
		toSerialize["toggle_warm_hearted"] = o.ToggleWarmHearted
	}
	if !IsNil(o.VanguardSeeker) {
		toSerialize["vanguard_seeker"] = o.VanguardSeeker
	}
	if !IsNil(o.VeinSeeker) {
		toSerialize["vein_seeker"] = o.VeinSeeker
	}
	if !IsNil(o.WarmHearted) {
		toSerialize["warm_hearted"] = o.WarmHearted
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberMiningCoreNodes struct {
	value *SkyBlockProfileMemberMiningCoreNodes
	isSet bool
}

func (v NullableSkyBlockProfileMemberMiningCoreNodes) Get() *SkyBlockProfileMemberMiningCoreNodes {
	return v.value
}

func (v *NullableSkyBlockProfileMemberMiningCoreNodes) Set(val *SkyBlockProfileMemberMiningCoreNodes) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberMiningCoreNodes) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberMiningCoreNodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberMiningCoreNodes(val *SkyBlockProfileMemberMiningCoreNodes) *NullableSkyBlockProfileMemberMiningCoreNodes {
	return &NullableSkyBlockProfileMemberMiningCoreNodes{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberMiningCoreNodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberMiningCoreNodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
