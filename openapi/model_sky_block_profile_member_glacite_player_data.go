/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberGlacitePlayerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberGlacitePlayerData{}

// SkyBlockProfileMemberGlacitePlayerData struct for SkyBlockProfileMemberGlacitePlayerData
type SkyBlockProfileMemberGlacitePlayerData struct {
	CorpsesLooted     *SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted `json:"corpses_looted,omitempty"`
	FossilDust        *float64                                             `json:"fossil_dust,omitempty"`
	FossilsDonated    []string                                             `json:"fossils_donated,omitempty"`
	MineshaftsEntered *int64                                               `json:"mineshafts_entered,omitempty"`
}

// NewSkyBlockProfileMemberGlacitePlayerData instantiates a new SkyBlockProfileMemberGlacitePlayerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberGlacitePlayerData() *SkyBlockProfileMemberGlacitePlayerData {
	this := SkyBlockProfileMemberGlacitePlayerData{}
	return &this
}

// NewSkyBlockProfileMemberGlacitePlayerDataWithDefaults instantiates a new SkyBlockProfileMemberGlacitePlayerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberGlacitePlayerDataWithDefaults() *SkyBlockProfileMemberGlacitePlayerData {
	this := SkyBlockProfileMemberGlacitePlayerData{}
	return &this
}

// GetCorpsesLooted returns the CorpsesLooted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetCorpsesLooted() SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted {
	if o == nil || IsNil(o.CorpsesLooted) {
		var ret SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted
		return ret
	}
	return *o.CorpsesLooted
}

// GetCorpsesLootedOk returns a tuple with the CorpsesLooted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetCorpsesLootedOk() (*SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted, bool) {
	if o == nil || IsNil(o.CorpsesLooted) {
		return nil, false
	}
	return o.CorpsesLooted, true
}

// HasCorpsesLooted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) HasCorpsesLooted() bool {
	if o != nil && !IsNil(o.CorpsesLooted) {
		return true
	}

	return false
}

// SetCorpsesLooted gets a reference to the given SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted and assigns it to the CorpsesLooted field.
func (o *SkyBlockProfileMemberGlacitePlayerData) SetCorpsesLooted(v SkyBlockProfileMemberGlacitePlayerDataCorpsesLooted) {
	o.CorpsesLooted = &v
}

// GetFossilDust returns the FossilDust field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetFossilDust() float64 {
	if o == nil || IsNil(o.FossilDust) {
		var ret float64
		return ret
	}
	return *o.FossilDust
}

// GetFossilDustOk returns a tuple with the FossilDust field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetFossilDustOk() (*float64, bool) {
	if o == nil || IsNil(o.FossilDust) {
		return nil, false
	}
	return o.FossilDust, true
}

// HasFossilDust returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) HasFossilDust() bool {
	if o != nil && !IsNil(o.FossilDust) {
		return true
	}

	return false
}

// SetFossilDust gets a reference to the given float64 and assigns it to the FossilDust field.
func (o *SkyBlockProfileMemberGlacitePlayerData) SetFossilDust(v float64) {
	o.FossilDust = &v
}

// GetFossilsDonated returns the FossilsDonated field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetFossilsDonated() []string {
	if o == nil || IsNil(o.FossilsDonated) {
		var ret []string
		return ret
	}
	return o.FossilsDonated
}

// GetFossilsDonatedOk returns a tuple with the FossilsDonated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetFossilsDonatedOk() ([]string, bool) {
	if o == nil || IsNil(o.FossilsDonated) {
		return nil, false
	}
	return o.FossilsDonated, true
}

// HasFossilsDonated returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) HasFossilsDonated() bool {
	if o != nil && !IsNil(o.FossilsDonated) {
		return true
	}

	return false
}

// SetFossilsDonated gets a reference to the given []string and assigns it to the FossilsDonated field.
func (o *SkyBlockProfileMemberGlacitePlayerData) SetFossilsDonated(v []string) {
	o.FossilsDonated = v
}

// GetMineshaftsEntered returns the MineshaftsEntered field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetMineshaftsEntered() int64 {
	if o == nil || IsNil(o.MineshaftsEntered) {
		var ret int64
		return ret
	}
	return *o.MineshaftsEntered
}

// GetMineshaftsEnteredOk returns a tuple with the MineshaftsEntered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) GetMineshaftsEnteredOk() (*int64, bool) {
	if o == nil || IsNil(o.MineshaftsEntered) {
		return nil, false
	}
	return o.MineshaftsEntered, true
}

// HasMineshaftsEntered returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberGlacitePlayerData) HasMineshaftsEntered() bool {
	if o != nil && !IsNil(o.MineshaftsEntered) {
		return true
	}

	return false
}

// SetMineshaftsEntered gets a reference to the given int64 and assigns it to the MineshaftsEntered field.
func (o *SkyBlockProfileMemberGlacitePlayerData) SetMineshaftsEntered(v int64) {
	o.MineshaftsEntered = &v
}

func (o SkyBlockProfileMemberGlacitePlayerData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberGlacitePlayerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorpsesLooted) {
		toSerialize["corpses_looted"] = o.CorpsesLooted
	}
	if !IsNil(o.FossilDust) {
		toSerialize["fossil_dust"] = o.FossilDust
	}
	if !IsNil(o.FossilsDonated) {
		toSerialize["fossils_donated"] = o.FossilsDonated
	}
	if !IsNil(o.MineshaftsEntered) {
		toSerialize["mineshafts_entered"] = o.MineshaftsEntered
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberGlacitePlayerData struct {
	value *SkyBlockProfileMemberGlacitePlayerData
	isSet bool
}

func (v NullableSkyBlockProfileMemberGlacitePlayerData) Get() *SkyBlockProfileMemberGlacitePlayerData {
	return v.value
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerData) Set(val *SkyBlockProfileMemberGlacitePlayerData) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberGlacitePlayerData) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberGlacitePlayerData(val *SkyBlockProfileMemberGlacitePlayerData) *NullableSkyBlockProfileMemberGlacitePlayerData {
	return &NullableSkyBlockProfileMemberGlacitePlayerData{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberGlacitePlayerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberGlacitePlayerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
