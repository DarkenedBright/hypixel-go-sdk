/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberPlayerStatsRift type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerStatsRift{}

// SkyBlockProfileMemberPlayerStatsRift struct for SkyBlockProfileMemberPlayerStatsRift
type SkyBlockProfileMemberPlayerStatsRift struct {
	CastleEffigyBroken          *float64                                                `json:"castle_effigy_broken,omitempty"`
	CastleSentToPrison          *float64                                                `json:"castle_sent_to_prison,omitempty"`
	ColosseumBacteDefeated      *float64                                                `json:"colosseum_bacte_defeated,omitempty"`
	ColosseumBlasterShots       *float64                                                `json:"colosseum_blaster_shots,omitempty"`
	ColosseumGlobowlsAtTentacle *float64                                                `json:"colosseum_globowls_at_tentacle,omitempty"`
	DreadfarmAgaricusHarvested  *float64                                                `json:"dreadfarm_agaricus_harvested,omitempty"`
	DreadfarmBeanBulbCollected  *float64                                                `json:"dreadfarm_bean_bulb_collected,omitempty"`
	DreadfarmCaducousHarvested  *float64                                                `json:"dreadfarm_caducous_harvested,omitempty"`
	DreadfarmChickenKilled      *float64                                                `json:"dreadfarm_chicken_killed,omitempty"`
	DreadfarmRiftwartsHarvested *float64                                                `json:"dreadfarm_riftwarts_harvested,omitempty"`
	DreadfarmWiltedHarvested    *float64                                                `json:"dreadfarm_wilted_harvested,omitempty"`
	LagoonLeechSupremeKilled    *float64                                                `json:"lagoon_leech_supreme_killed,omitempty"`
	LagoonLilPadsSold           *float64                                                `json:"lagoon_lil_pads_sold,omitempty"`
	LagoonMushroomPoppedOut     *float64                                                `json:"lagoon_mushroom_popped_out,omitempty"`
	LagoonRocksGameComplete     *float64                                                `json:"lagoon_rocks_game_complete,omitempty"`
	LifetimeMotesEarned         *float64                                                `json:"lifetime_motes_earned,omitempty"`
	LivingCaveSnakeCollected    *float64                                                `json:"living_cave_snake_collected,omitempty"`
	LivingMetalPieceMaxed       *float64                                                `json:"living_metal_piece_maxed,omitempty"`
	LivingMetalSpawneggUsed     *float64                                                `json:"living_metal_spawnegg_used,omitempty"`
	MotesOrbPickup              *float64                                                `json:"motes_orb_pickup,omitempty"`
	OdonataRepeatableCompleted  *float64                                                `json:"odonata_repeatable_completed,omitempty"`
	PassConsumed                *float64                                                `json:"pass_consumed,omitempty"`
	PlazaHayDeaths              *float64                                                `json:"plaza_hay_deaths,omitempty"`
	PlazaHorsezookaShot         *float64                                                `json:"plaza_horsezooka_shot,omitempty"`
	PlazaPillarDeaths           *float64                                                `json:"plaza_pillar_deaths,omitempty"`
	PlazaRedLightDeaths         *float64                                                `json:"plaza_red_light_deaths,omitempty"`
	PoppedBalloons              *float64                                                `json:"popped_balloons,omitempty"`
	ShenItemBought              *SkyBlockProfileMemberPlayerStatsRiftShenItemBought     `json:"shen_item_bought,omitempty"`
	Visits                      float64                                                 `json:"visits"`
	WestCakePartEaten           *float64                                                `json:"west_cake_part_eaten,omitempty"`
	WestHotDogsGiven            *float64                                                `json:"west_hot_dogs_given,omitempty"`
	WestVerminVacuumed          *SkyBlockProfileMemberPlayerStatsRiftWestVerminVacuumed `json:"west_vermin_vacuumed,omitempty"`
	WoodsLarvaKilled            *float64                                                `json:"woods_larva_killed,omitempty"`
	WoodsOdonataBottled         *float64                                                `json:"woods_odonata_bottled,omitempty"`
}

type _SkyBlockProfileMemberPlayerStatsRift SkyBlockProfileMemberPlayerStatsRift

// NewSkyBlockProfileMemberPlayerStatsRift instantiates a new SkyBlockProfileMemberPlayerStatsRift object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerStatsRift(visits float64) *SkyBlockProfileMemberPlayerStatsRift {
	this := SkyBlockProfileMemberPlayerStatsRift{}
	this.Visits = visits
	return &this
}

// NewSkyBlockProfileMemberPlayerStatsRiftWithDefaults instantiates a new SkyBlockProfileMemberPlayerStatsRift object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerStatsRiftWithDefaults() *SkyBlockProfileMemberPlayerStatsRift {
	this := SkyBlockProfileMemberPlayerStatsRift{}
	return &this
}

// GetCastleEffigyBroken returns the CastleEffigyBroken field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetCastleEffigyBroken() float64 {
	if o == nil || IsNil(o.CastleEffigyBroken) {
		var ret float64
		return ret
	}
	return *o.CastleEffigyBroken
}

// GetCastleEffigyBrokenOk returns a tuple with the CastleEffigyBroken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetCastleEffigyBrokenOk() (*float64, bool) {
	if o == nil || IsNil(o.CastleEffigyBroken) {
		return nil, false
	}
	return o.CastleEffigyBroken, true
}

// HasCastleEffigyBroken returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasCastleEffigyBroken() bool {
	if o != nil && !IsNil(o.CastleEffigyBroken) {
		return true
	}

	return false
}

// SetCastleEffigyBroken gets a reference to the given float64 and assigns it to the CastleEffigyBroken field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetCastleEffigyBroken(v float64) {
	o.CastleEffigyBroken = &v
}

// GetCastleSentToPrison returns the CastleSentToPrison field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetCastleSentToPrison() float64 {
	if o == nil || IsNil(o.CastleSentToPrison) {
		var ret float64
		return ret
	}
	return *o.CastleSentToPrison
}

// GetCastleSentToPrisonOk returns a tuple with the CastleSentToPrison field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetCastleSentToPrisonOk() (*float64, bool) {
	if o == nil || IsNil(o.CastleSentToPrison) {
		return nil, false
	}
	return o.CastleSentToPrison, true
}

// HasCastleSentToPrison returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasCastleSentToPrison() bool {
	if o != nil && !IsNil(o.CastleSentToPrison) {
		return true
	}

	return false
}

// SetCastleSentToPrison gets a reference to the given float64 and assigns it to the CastleSentToPrison field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetCastleSentToPrison(v float64) {
	o.CastleSentToPrison = &v
}

// GetColosseumBacteDefeated returns the ColosseumBacteDefeated field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetColosseumBacteDefeated() float64 {
	if o == nil || IsNil(o.ColosseumBacteDefeated) {
		var ret float64
		return ret
	}
	return *o.ColosseumBacteDefeated
}

// GetColosseumBacteDefeatedOk returns a tuple with the ColosseumBacteDefeated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetColosseumBacteDefeatedOk() (*float64, bool) {
	if o == nil || IsNil(o.ColosseumBacteDefeated) {
		return nil, false
	}
	return o.ColosseumBacteDefeated, true
}

// HasColosseumBacteDefeated returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasColosseumBacteDefeated() bool {
	if o != nil && !IsNil(o.ColosseumBacteDefeated) {
		return true
	}

	return false
}

// SetColosseumBacteDefeated gets a reference to the given float64 and assigns it to the ColosseumBacteDefeated field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetColosseumBacteDefeated(v float64) {
	o.ColosseumBacteDefeated = &v
}

// GetColosseumBlasterShots returns the ColosseumBlasterShots field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetColosseumBlasterShots() float64 {
	if o == nil || IsNil(o.ColosseumBlasterShots) {
		var ret float64
		return ret
	}
	return *o.ColosseumBlasterShots
}

// GetColosseumBlasterShotsOk returns a tuple with the ColosseumBlasterShots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetColosseumBlasterShotsOk() (*float64, bool) {
	if o == nil || IsNil(o.ColosseumBlasterShots) {
		return nil, false
	}
	return o.ColosseumBlasterShots, true
}

// HasColosseumBlasterShots returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasColosseumBlasterShots() bool {
	if o != nil && !IsNil(o.ColosseumBlasterShots) {
		return true
	}

	return false
}

// SetColosseumBlasterShots gets a reference to the given float64 and assigns it to the ColosseumBlasterShots field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetColosseumBlasterShots(v float64) {
	o.ColosseumBlasterShots = &v
}

// GetColosseumGlobowlsAtTentacle returns the ColosseumGlobowlsAtTentacle field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetColosseumGlobowlsAtTentacle() float64 {
	if o == nil || IsNil(o.ColosseumGlobowlsAtTentacle) {
		var ret float64
		return ret
	}
	return *o.ColosseumGlobowlsAtTentacle
}

// GetColosseumGlobowlsAtTentacleOk returns a tuple with the ColosseumGlobowlsAtTentacle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetColosseumGlobowlsAtTentacleOk() (*float64, bool) {
	if o == nil || IsNil(o.ColosseumGlobowlsAtTentacle) {
		return nil, false
	}
	return o.ColosseumGlobowlsAtTentacle, true
}

// HasColosseumGlobowlsAtTentacle returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasColosseumGlobowlsAtTentacle() bool {
	if o != nil && !IsNil(o.ColosseumGlobowlsAtTentacle) {
		return true
	}

	return false
}

// SetColosseumGlobowlsAtTentacle gets a reference to the given float64 and assigns it to the ColosseumGlobowlsAtTentacle field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetColosseumGlobowlsAtTentacle(v float64) {
	o.ColosseumGlobowlsAtTentacle = &v
}

// GetDreadfarmAgaricusHarvested returns the DreadfarmAgaricusHarvested field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmAgaricusHarvested() float64 {
	if o == nil || IsNil(o.DreadfarmAgaricusHarvested) {
		var ret float64
		return ret
	}
	return *o.DreadfarmAgaricusHarvested
}

// GetDreadfarmAgaricusHarvestedOk returns a tuple with the DreadfarmAgaricusHarvested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmAgaricusHarvestedOk() (*float64, bool) {
	if o == nil || IsNil(o.DreadfarmAgaricusHarvested) {
		return nil, false
	}
	return o.DreadfarmAgaricusHarvested, true
}

// HasDreadfarmAgaricusHarvested returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasDreadfarmAgaricusHarvested() bool {
	if o != nil && !IsNil(o.DreadfarmAgaricusHarvested) {
		return true
	}

	return false
}

// SetDreadfarmAgaricusHarvested gets a reference to the given float64 and assigns it to the DreadfarmAgaricusHarvested field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetDreadfarmAgaricusHarvested(v float64) {
	o.DreadfarmAgaricusHarvested = &v
}

// GetDreadfarmBeanBulbCollected returns the DreadfarmBeanBulbCollected field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmBeanBulbCollected() float64 {
	if o == nil || IsNil(o.DreadfarmBeanBulbCollected) {
		var ret float64
		return ret
	}
	return *o.DreadfarmBeanBulbCollected
}

// GetDreadfarmBeanBulbCollectedOk returns a tuple with the DreadfarmBeanBulbCollected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmBeanBulbCollectedOk() (*float64, bool) {
	if o == nil || IsNil(o.DreadfarmBeanBulbCollected) {
		return nil, false
	}
	return o.DreadfarmBeanBulbCollected, true
}

// HasDreadfarmBeanBulbCollected returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasDreadfarmBeanBulbCollected() bool {
	if o != nil && !IsNil(o.DreadfarmBeanBulbCollected) {
		return true
	}

	return false
}

// SetDreadfarmBeanBulbCollected gets a reference to the given float64 and assigns it to the DreadfarmBeanBulbCollected field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetDreadfarmBeanBulbCollected(v float64) {
	o.DreadfarmBeanBulbCollected = &v
}

// GetDreadfarmCaducousHarvested returns the DreadfarmCaducousHarvested field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmCaducousHarvested() float64 {
	if o == nil || IsNil(o.DreadfarmCaducousHarvested) {
		var ret float64
		return ret
	}
	return *o.DreadfarmCaducousHarvested
}

// GetDreadfarmCaducousHarvestedOk returns a tuple with the DreadfarmCaducousHarvested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmCaducousHarvestedOk() (*float64, bool) {
	if o == nil || IsNil(o.DreadfarmCaducousHarvested) {
		return nil, false
	}
	return o.DreadfarmCaducousHarvested, true
}

// HasDreadfarmCaducousHarvested returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasDreadfarmCaducousHarvested() bool {
	if o != nil && !IsNil(o.DreadfarmCaducousHarvested) {
		return true
	}

	return false
}

// SetDreadfarmCaducousHarvested gets a reference to the given float64 and assigns it to the DreadfarmCaducousHarvested field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetDreadfarmCaducousHarvested(v float64) {
	o.DreadfarmCaducousHarvested = &v
}

// GetDreadfarmChickenKilled returns the DreadfarmChickenKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmChickenKilled() float64 {
	if o == nil || IsNil(o.DreadfarmChickenKilled) {
		var ret float64
		return ret
	}
	return *o.DreadfarmChickenKilled
}

// GetDreadfarmChickenKilledOk returns a tuple with the DreadfarmChickenKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmChickenKilledOk() (*float64, bool) {
	if o == nil || IsNil(o.DreadfarmChickenKilled) {
		return nil, false
	}
	return o.DreadfarmChickenKilled, true
}

// HasDreadfarmChickenKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasDreadfarmChickenKilled() bool {
	if o != nil && !IsNil(o.DreadfarmChickenKilled) {
		return true
	}

	return false
}

// SetDreadfarmChickenKilled gets a reference to the given float64 and assigns it to the DreadfarmChickenKilled field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetDreadfarmChickenKilled(v float64) {
	o.DreadfarmChickenKilled = &v
}

// GetDreadfarmRiftwartsHarvested returns the DreadfarmRiftwartsHarvested field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmRiftwartsHarvested() float64 {
	if o == nil || IsNil(o.DreadfarmRiftwartsHarvested) {
		var ret float64
		return ret
	}
	return *o.DreadfarmRiftwartsHarvested
}

// GetDreadfarmRiftwartsHarvestedOk returns a tuple with the DreadfarmRiftwartsHarvested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmRiftwartsHarvestedOk() (*float64, bool) {
	if o == nil || IsNil(o.DreadfarmRiftwartsHarvested) {
		return nil, false
	}
	return o.DreadfarmRiftwartsHarvested, true
}

// HasDreadfarmRiftwartsHarvested returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasDreadfarmRiftwartsHarvested() bool {
	if o != nil && !IsNil(o.DreadfarmRiftwartsHarvested) {
		return true
	}

	return false
}

// SetDreadfarmRiftwartsHarvested gets a reference to the given float64 and assigns it to the DreadfarmRiftwartsHarvested field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetDreadfarmRiftwartsHarvested(v float64) {
	o.DreadfarmRiftwartsHarvested = &v
}

// GetDreadfarmWiltedHarvested returns the DreadfarmWiltedHarvested field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmWiltedHarvested() float64 {
	if o == nil || IsNil(o.DreadfarmWiltedHarvested) {
		var ret float64
		return ret
	}
	return *o.DreadfarmWiltedHarvested
}

// GetDreadfarmWiltedHarvestedOk returns a tuple with the DreadfarmWiltedHarvested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetDreadfarmWiltedHarvestedOk() (*float64, bool) {
	if o == nil || IsNil(o.DreadfarmWiltedHarvested) {
		return nil, false
	}
	return o.DreadfarmWiltedHarvested, true
}

// HasDreadfarmWiltedHarvested returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasDreadfarmWiltedHarvested() bool {
	if o != nil && !IsNil(o.DreadfarmWiltedHarvested) {
		return true
	}

	return false
}

// SetDreadfarmWiltedHarvested gets a reference to the given float64 and assigns it to the DreadfarmWiltedHarvested field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetDreadfarmWiltedHarvested(v float64) {
	o.DreadfarmWiltedHarvested = &v
}

// GetLagoonLeechSupremeKilled returns the LagoonLeechSupremeKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonLeechSupremeKilled() float64 {
	if o == nil || IsNil(o.LagoonLeechSupremeKilled) {
		var ret float64
		return ret
	}
	return *o.LagoonLeechSupremeKilled
}

// GetLagoonLeechSupremeKilledOk returns a tuple with the LagoonLeechSupremeKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonLeechSupremeKilledOk() (*float64, bool) {
	if o == nil || IsNil(o.LagoonLeechSupremeKilled) {
		return nil, false
	}
	return o.LagoonLeechSupremeKilled, true
}

// HasLagoonLeechSupremeKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLagoonLeechSupremeKilled() bool {
	if o != nil && !IsNil(o.LagoonLeechSupremeKilled) {
		return true
	}

	return false
}

// SetLagoonLeechSupremeKilled gets a reference to the given float64 and assigns it to the LagoonLeechSupremeKilled field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLagoonLeechSupremeKilled(v float64) {
	o.LagoonLeechSupremeKilled = &v
}

// GetLagoonLilPadsSold returns the LagoonLilPadsSold field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonLilPadsSold() float64 {
	if o == nil || IsNil(o.LagoonLilPadsSold) {
		var ret float64
		return ret
	}
	return *o.LagoonLilPadsSold
}

// GetLagoonLilPadsSoldOk returns a tuple with the LagoonLilPadsSold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonLilPadsSoldOk() (*float64, bool) {
	if o == nil || IsNil(o.LagoonLilPadsSold) {
		return nil, false
	}
	return o.LagoonLilPadsSold, true
}

// HasLagoonLilPadsSold returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLagoonLilPadsSold() bool {
	if o != nil && !IsNil(o.LagoonLilPadsSold) {
		return true
	}

	return false
}

// SetLagoonLilPadsSold gets a reference to the given float64 and assigns it to the LagoonLilPadsSold field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLagoonLilPadsSold(v float64) {
	o.LagoonLilPadsSold = &v
}

// GetLagoonMushroomPoppedOut returns the LagoonMushroomPoppedOut field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonMushroomPoppedOut() float64 {
	if o == nil || IsNil(o.LagoonMushroomPoppedOut) {
		var ret float64
		return ret
	}
	return *o.LagoonMushroomPoppedOut
}

// GetLagoonMushroomPoppedOutOk returns a tuple with the LagoonMushroomPoppedOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonMushroomPoppedOutOk() (*float64, bool) {
	if o == nil || IsNil(o.LagoonMushroomPoppedOut) {
		return nil, false
	}
	return o.LagoonMushroomPoppedOut, true
}

// HasLagoonMushroomPoppedOut returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLagoonMushroomPoppedOut() bool {
	if o != nil && !IsNil(o.LagoonMushroomPoppedOut) {
		return true
	}

	return false
}

// SetLagoonMushroomPoppedOut gets a reference to the given float64 and assigns it to the LagoonMushroomPoppedOut field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLagoonMushroomPoppedOut(v float64) {
	o.LagoonMushroomPoppedOut = &v
}

// GetLagoonRocksGameComplete returns the LagoonRocksGameComplete field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonRocksGameComplete() float64 {
	if o == nil || IsNil(o.LagoonRocksGameComplete) {
		var ret float64
		return ret
	}
	return *o.LagoonRocksGameComplete
}

// GetLagoonRocksGameCompleteOk returns a tuple with the LagoonRocksGameComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLagoonRocksGameCompleteOk() (*float64, bool) {
	if o == nil || IsNil(o.LagoonRocksGameComplete) {
		return nil, false
	}
	return o.LagoonRocksGameComplete, true
}

// HasLagoonRocksGameComplete returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLagoonRocksGameComplete() bool {
	if o != nil && !IsNil(o.LagoonRocksGameComplete) {
		return true
	}

	return false
}

// SetLagoonRocksGameComplete gets a reference to the given float64 and assigns it to the LagoonRocksGameComplete field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLagoonRocksGameComplete(v float64) {
	o.LagoonRocksGameComplete = &v
}

// GetLifetimeMotesEarned returns the LifetimeMotesEarned field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLifetimeMotesEarned() float64 {
	if o == nil || IsNil(o.LifetimeMotesEarned) {
		var ret float64
		return ret
	}
	return *o.LifetimeMotesEarned
}

// GetLifetimeMotesEarnedOk returns a tuple with the LifetimeMotesEarned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLifetimeMotesEarnedOk() (*float64, bool) {
	if o == nil || IsNil(o.LifetimeMotesEarned) {
		return nil, false
	}
	return o.LifetimeMotesEarned, true
}

// HasLifetimeMotesEarned returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLifetimeMotesEarned() bool {
	if o != nil && !IsNil(o.LifetimeMotesEarned) {
		return true
	}

	return false
}

// SetLifetimeMotesEarned gets a reference to the given float64 and assigns it to the LifetimeMotesEarned field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLifetimeMotesEarned(v float64) {
	o.LifetimeMotesEarned = &v
}

// GetLivingCaveSnakeCollected returns the LivingCaveSnakeCollected field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLivingCaveSnakeCollected() float64 {
	if o == nil || IsNil(o.LivingCaveSnakeCollected) {
		var ret float64
		return ret
	}
	return *o.LivingCaveSnakeCollected
}

// GetLivingCaveSnakeCollectedOk returns a tuple with the LivingCaveSnakeCollected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLivingCaveSnakeCollectedOk() (*float64, bool) {
	if o == nil || IsNil(o.LivingCaveSnakeCollected) {
		return nil, false
	}
	return o.LivingCaveSnakeCollected, true
}

// HasLivingCaveSnakeCollected returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLivingCaveSnakeCollected() bool {
	if o != nil && !IsNil(o.LivingCaveSnakeCollected) {
		return true
	}

	return false
}

// SetLivingCaveSnakeCollected gets a reference to the given float64 and assigns it to the LivingCaveSnakeCollected field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLivingCaveSnakeCollected(v float64) {
	o.LivingCaveSnakeCollected = &v
}

// GetLivingMetalPieceMaxed returns the LivingMetalPieceMaxed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLivingMetalPieceMaxed() float64 {
	if o == nil || IsNil(o.LivingMetalPieceMaxed) {
		var ret float64
		return ret
	}
	return *o.LivingMetalPieceMaxed
}

// GetLivingMetalPieceMaxedOk returns a tuple with the LivingMetalPieceMaxed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLivingMetalPieceMaxedOk() (*float64, bool) {
	if o == nil || IsNil(o.LivingMetalPieceMaxed) {
		return nil, false
	}
	return o.LivingMetalPieceMaxed, true
}

// HasLivingMetalPieceMaxed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLivingMetalPieceMaxed() bool {
	if o != nil && !IsNil(o.LivingMetalPieceMaxed) {
		return true
	}

	return false
}

// SetLivingMetalPieceMaxed gets a reference to the given float64 and assigns it to the LivingMetalPieceMaxed field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLivingMetalPieceMaxed(v float64) {
	o.LivingMetalPieceMaxed = &v
}

// GetLivingMetalSpawneggUsed returns the LivingMetalSpawneggUsed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLivingMetalSpawneggUsed() float64 {
	if o == nil || IsNil(o.LivingMetalSpawneggUsed) {
		var ret float64
		return ret
	}
	return *o.LivingMetalSpawneggUsed
}

// GetLivingMetalSpawneggUsedOk returns a tuple with the LivingMetalSpawneggUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetLivingMetalSpawneggUsedOk() (*float64, bool) {
	if o == nil || IsNil(o.LivingMetalSpawneggUsed) {
		return nil, false
	}
	return o.LivingMetalSpawneggUsed, true
}

// HasLivingMetalSpawneggUsed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasLivingMetalSpawneggUsed() bool {
	if o != nil && !IsNil(o.LivingMetalSpawneggUsed) {
		return true
	}

	return false
}

// SetLivingMetalSpawneggUsed gets a reference to the given float64 and assigns it to the LivingMetalSpawneggUsed field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetLivingMetalSpawneggUsed(v float64) {
	o.LivingMetalSpawneggUsed = &v
}

// GetMotesOrbPickup returns the MotesOrbPickup field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetMotesOrbPickup() float64 {
	if o == nil || IsNil(o.MotesOrbPickup) {
		var ret float64
		return ret
	}
	return *o.MotesOrbPickup
}

// GetMotesOrbPickupOk returns a tuple with the MotesOrbPickup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetMotesOrbPickupOk() (*float64, bool) {
	if o == nil || IsNil(o.MotesOrbPickup) {
		return nil, false
	}
	return o.MotesOrbPickup, true
}

// HasMotesOrbPickup returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasMotesOrbPickup() bool {
	if o != nil && !IsNil(o.MotesOrbPickup) {
		return true
	}

	return false
}

// SetMotesOrbPickup gets a reference to the given float64 and assigns it to the MotesOrbPickup field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetMotesOrbPickup(v float64) {
	o.MotesOrbPickup = &v
}

// GetOdonataRepeatableCompleted returns the OdonataRepeatableCompleted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetOdonataRepeatableCompleted() float64 {
	if o == nil || IsNil(o.OdonataRepeatableCompleted) {
		var ret float64
		return ret
	}
	return *o.OdonataRepeatableCompleted
}

// GetOdonataRepeatableCompletedOk returns a tuple with the OdonataRepeatableCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetOdonataRepeatableCompletedOk() (*float64, bool) {
	if o == nil || IsNil(o.OdonataRepeatableCompleted) {
		return nil, false
	}
	return o.OdonataRepeatableCompleted, true
}

// HasOdonataRepeatableCompleted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasOdonataRepeatableCompleted() bool {
	if o != nil && !IsNil(o.OdonataRepeatableCompleted) {
		return true
	}

	return false
}

// SetOdonataRepeatableCompleted gets a reference to the given float64 and assigns it to the OdonataRepeatableCompleted field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetOdonataRepeatableCompleted(v float64) {
	o.OdonataRepeatableCompleted = &v
}

// GetPassConsumed returns the PassConsumed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPassConsumed() float64 {
	if o == nil || IsNil(o.PassConsumed) {
		var ret float64
		return ret
	}
	return *o.PassConsumed
}

// GetPassConsumedOk returns a tuple with the PassConsumed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPassConsumedOk() (*float64, bool) {
	if o == nil || IsNil(o.PassConsumed) {
		return nil, false
	}
	return o.PassConsumed, true
}

// HasPassConsumed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasPassConsumed() bool {
	if o != nil && !IsNil(o.PassConsumed) {
		return true
	}

	return false
}

// SetPassConsumed gets a reference to the given float64 and assigns it to the PassConsumed field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetPassConsumed(v float64) {
	o.PassConsumed = &v
}

// GetPlazaHayDeaths returns the PlazaHayDeaths field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaHayDeaths() float64 {
	if o == nil || IsNil(o.PlazaHayDeaths) {
		var ret float64
		return ret
	}
	return *o.PlazaHayDeaths
}

// GetPlazaHayDeathsOk returns a tuple with the PlazaHayDeaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaHayDeathsOk() (*float64, bool) {
	if o == nil || IsNil(o.PlazaHayDeaths) {
		return nil, false
	}
	return o.PlazaHayDeaths, true
}

// HasPlazaHayDeaths returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasPlazaHayDeaths() bool {
	if o != nil && !IsNil(o.PlazaHayDeaths) {
		return true
	}

	return false
}

// SetPlazaHayDeaths gets a reference to the given float64 and assigns it to the PlazaHayDeaths field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetPlazaHayDeaths(v float64) {
	o.PlazaHayDeaths = &v
}

// GetPlazaHorsezookaShot returns the PlazaHorsezookaShot field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaHorsezookaShot() float64 {
	if o == nil || IsNil(o.PlazaHorsezookaShot) {
		var ret float64
		return ret
	}
	return *o.PlazaHorsezookaShot
}

// GetPlazaHorsezookaShotOk returns a tuple with the PlazaHorsezookaShot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaHorsezookaShotOk() (*float64, bool) {
	if o == nil || IsNil(o.PlazaHorsezookaShot) {
		return nil, false
	}
	return o.PlazaHorsezookaShot, true
}

// HasPlazaHorsezookaShot returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasPlazaHorsezookaShot() bool {
	if o != nil && !IsNil(o.PlazaHorsezookaShot) {
		return true
	}

	return false
}

// SetPlazaHorsezookaShot gets a reference to the given float64 and assigns it to the PlazaHorsezookaShot field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetPlazaHorsezookaShot(v float64) {
	o.PlazaHorsezookaShot = &v
}

// GetPlazaPillarDeaths returns the PlazaPillarDeaths field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaPillarDeaths() float64 {
	if o == nil || IsNil(o.PlazaPillarDeaths) {
		var ret float64
		return ret
	}
	return *o.PlazaPillarDeaths
}

// GetPlazaPillarDeathsOk returns a tuple with the PlazaPillarDeaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaPillarDeathsOk() (*float64, bool) {
	if o == nil || IsNil(o.PlazaPillarDeaths) {
		return nil, false
	}
	return o.PlazaPillarDeaths, true
}

// HasPlazaPillarDeaths returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasPlazaPillarDeaths() bool {
	if o != nil && !IsNil(o.PlazaPillarDeaths) {
		return true
	}

	return false
}

// SetPlazaPillarDeaths gets a reference to the given float64 and assigns it to the PlazaPillarDeaths field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetPlazaPillarDeaths(v float64) {
	o.PlazaPillarDeaths = &v
}

// GetPlazaRedLightDeaths returns the PlazaRedLightDeaths field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaRedLightDeaths() float64 {
	if o == nil || IsNil(o.PlazaRedLightDeaths) {
		var ret float64
		return ret
	}
	return *o.PlazaRedLightDeaths
}

// GetPlazaRedLightDeathsOk returns a tuple with the PlazaRedLightDeaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPlazaRedLightDeathsOk() (*float64, bool) {
	if o == nil || IsNil(o.PlazaRedLightDeaths) {
		return nil, false
	}
	return o.PlazaRedLightDeaths, true
}

// HasPlazaRedLightDeaths returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasPlazaRedLightDeaths() bool {
	if o != nil && !IsNil(o.PlazaRedLightDeaths) {
		return true
	}

	return false
}

// SetPlazaRedLightDeaths gets a reference to the given float64 and assigns it to the PlazaRedLightDeaths field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetPlazaRedLightDeaths(v float64) {
	o.PlazaRedLightDeaths = &v
}

// GetPoppedBalloons returns the PoppedBalloons field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPoppedBalloons() float64 {
	if o == nil || IsNil(o.PoppedBalloons) {
		var ret float64
		return ret
	}
	return *o.PoppedBalloons
}

// GetPoppedBalloonsOk returns a tuple with the PoppedBalloons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetPoppedBalloonsOk() (*float64, bool) {
	if o == nil || IsNil(o.PoppedBalloons) {
		return nil, false
	}
	return o.PoppedBalloons, true
}

// HasPoppedBalloons returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasPoppedBalloons() bool {
	if o != nil && !IsNil(o.PoppedBalloons) {
		return true
	}

	return false
}

// SetPoppedBalloons gets a reference to the given float64 and assigns it to the PoppedBalloons field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetPoppedBalloons(v float64) {
	o.PoppedBalloons = &v
}

// GetShenItemBought returns the ShenItemBought field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetShenItemBought() SkyBlockProfileMemberPlayerStatsRiftShenItemBought {
	if o == nil || IsNil(o.ShenItemBought) {
		var ret SkyBlockProfileMemberPlayerStatsRiftShenItemBought
		return ret
	}
	return *o.ShenItemBought
}

// GetShenItemBoughtOk returns a tuple with the ShenItemBought field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetShenItemBoughtOk() (*SkyBlockProfileMemberPlayerStatsRiftShenItemBought, bool) {
	if o == nil || IsNil(o.ShenItemBought) {
		return nil, false
	}
	return o.ShenItemBought, true
}

// HasShenItemBought returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasShenItemBought() bool {
	if o != nil && !IsNil(o.ShenItemBought) {
		return true
	}

	return false
}

// SetShenItemBought gets a reference to the given SkyBlockProfileMemberPlayerStatsRiftShenItemBought and assigns it to the ShenItemBought field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetShenItemBought(v SkyBlockProfileMemberPlayerStatsRiftShenItemBought) {
	o.ShenItemBought = &v
}

// GetVisits returns the Visits field value
func (o *SkyBlockProfileMemberPlayerStatsRift) GetVisits() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Visits
}

// GetVisitsOk returns a tuple with the Visits field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetVisitsOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visits, true
}

// SetVisits sets field value
func (o *SkyBlockProfileMemberPlayerStatsRift) SetVisits(v float64) {
	o.Visits = v
}

// GetWestCakePartEaten returns the WestCakePartEaten field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWestCakePartEaten() float64 {
	if o == nil || IsNil(o.WestCakePartEaten) {
		var ret float64
		return ret
	}
	return *o.WestCakePartEaten
}

// GetWestCakePartEatenOk returns a tuple with the WestCakePartEaten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWestCakePartEatenOk() (*float64, bool) {
	if o == nil || IsNil(o.WestCakePartEaten) {
		return nil, false
	}
	return o.WestCakePartEaten, true
}

// HasWestCakePartEaten returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasWestCakePartEaten() bool {
	if o != nil && !IsNil(o.WestCakePartEaten) {
		return true
	}

	return false
}

// SetWestCakePartEaten gets a reference to the given float64 and assigns it to the WestCakePartEaten field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetWestCakePartEaten(v float64) {
	o.WestCakePartEaten = &v
}

// GetWestHotDogsGiven returns the WestHotDogsGiven field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWestHotDogsGiven() float64 {
	if o == nil || IsNil(o.WestHotDogsGiven) {
		var ret float64
		return ret
	}
	return *o.WestHotDogsGiven
}

// GetWestHotDogsGivenOk returns a tuple with the WestHotDogsGiven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWestHotDogsGivenOk() (*float64, bool) {
	if o == nil || IsNil(o.WestHotDogsGiven) {
		return nil, false
	}
	return o.WestHotDogsGiven, true
}

// HasWestHotDogsGiven returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasWestHotDogsGiven() bool {
	if o != nil && !IsNil(o.WestHotDogsGiven) {
		return true
	}

	return false
}

// SetWestHotDogsGiven gets a reference to the given float64 and assigns it to the WestHotDogsGiven field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetWestHotDogsGiven(v float64) {
	o.WestHotDogsGiven = &v
}

// GetWestVerminVacuumed returns the WestVerminVacuumed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWestVerminVacuumed() SkyBlockProfileMemberPlayerStatsRiftWestVerminVacuumed {
	if o == nil || IsNil(o.WestVerminVacuumed) {
		var ret SkyBlockProfileMemberPlayerStatsRiftWestVerminVacuumed
		return ret
	}
	return *o.WestVerminVacuumed
}

// GetWestVerminVacuumedOk returns a tuple with the WestVerminVacuumed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWestVerminVacuumedOk() (*SkyBlockProfileMemberPlayerStatsRiftWestVerminVacuumed, bool) {
	if o == nil || IsNil(o.WestVerminVacuumed) {
		return nil, false
	}
	return o.WestVerminVacuumed, true
}

// HasWestVerminVacuumed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasWestVerminVacuumed() bool {
	if o != nil && !IsNil(o.WestVerminVacuumed) {
		return true
	}

	return false
}

// SetWestVerminVacuumed gets a reference to the given SkyBlockProfileMemberPlayerStatsRiftWestVerminVacuumed and assigns it to the WestVerminVacuumed field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetWestVerminVacuumed(v SkyBlockProfileMemberPlayerStatsRiftWestVerminVacuumed) {
	o.WestVerminVacuumed = &v
}

// GetWoodsLarvaKilled returns the WoodsLarvaKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWoodsLarvaKilled() float64 {
	if o == nil || IsNil(o.WoodsLarvaKilled) {
		var ret float64
		return ret
	}
	return *o.WoodsLarvaKilled
}

// GetWoodsLarvaKilledOk returns a tuple with the WoodsLarvaKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWoodsLarvaKilledOk() (*float64, bool) {
	if o == nil || IsNil(o.WoodsLarvaKilled) {
		return nil, false
	}
	return o.WoodsLarvaKilled, true
}

// HasWoodsLarvaKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasWoodsLarvaKilled() bool {
	if o != nil && !IsNil(o.WoodsLarvaKilled) {
		return true
	}

	return false
}

// SetWoodsLarvaKilled gets a reference to the given float64 and assigns it to the WoodsLarvaKilled field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetWoodsLarvaKilled(v float64) {
	o.WoodsLarvaKilled = &v
}

// GetWoodsOdonataBottled returns the WoodsOdonataBottled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWoodsOdonataBottled() float64 {
	if o == nil || IsNil(o.WoodsOdonataBottled) {
		var ret float64
		return ret
	}
	return *o.WoodsOdonataBottled
}

// GetWoodsOdonataBottledOk returns a tuple with the WoodsOdonataBottled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) GetWoodsOdonataBottledOk() (*float64, bool) {
	if o == nil || IsNil(o.WoodsOdonataBottled) {
		return nil, false
	}
	return o.WoodsOdonataBottled, true
}

// HasWoodsOdonataBottled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRift) HasWoodsOdonataBottled() bool {
	if o != nil && !IsNil(o.WoodsOdonataBottled) {
		return true
	}

	return false
}

// SetWoodsOdonataBottled gets a reference to the given float64 and assigns it to the WoodsOdonataBottled field.
func (o *SkyBlockProfileMemberPlayerStatsRift) SetWoodsOdonataBottled(v float64) {
	o.WoodsOdonataBottled = &v
}

func (o SkyBlockProfileMemberPlayerStatsRift) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerStatsRift) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CastleEffigyBroken) {
		toSerialize["castle_effigy_broken"] = o.CastleEffigyBroken
	}
	if !IsNil(o.CastleSentToPrison) {
		toSerialize["castle_sent_to_prison"] = o.CastleSentToPrison
	}
	if !IsNil(o.ColosseumBacteDefeated) {
		toSerialize["colosseum_bacte_defeated"] = o.ColosseumBacteDefeated
	}
	if !IsNil(o.ColosseumBlasterShots) {
		toSerialize["colosseum_blaster_shots"] = o.ColosseumBlasterShots
	}
	if !IsNil(o.ColosseumGlobowlsAtTentacle) {
		toSerialize["colosseum_globowls_at_tentacle"] = o.ColosseumGlobowlsAtTentacle
	}
	if !IsNil(o.DreadfarmAgaricusHarvested) {
		toSerialize["dreadfarm_agaricus_harvested"] = o.DreadfarmAgaricusHarvested
	}
	if !IsNil(o.DreadfarmBeanBulbCollected) {
		toSerialize["dreadfarm_bean_bulb_collected"] = o.DreadfarmBeanBulbCollected
	}
	if !IsNil(o.DreadfarmCaducousHarvested) {
		toSerialize["dreadfarm_caducous_harvested"] = o.DreadfarmCaducousHarvested
	}
	if !IsNil(o.DreadfarmChickenKilled) {
		toSerialize["dreadfarm_chicken_killed"] = o.DreadfarmChickenKilled
	}
	if !IsNil(o.DreadfarmRiftwartsHarvested) {
		toSerialize["dreadfarm_riftwarts_harvested"] = o.DreadfarmRiftwartsHarvested
	}
	if !IsNil(o.DreadfarmWiltedHarvested) {
		toSerialize["dreadfarm_wilted_harvested"] = o.DreadfarmWiltedHarvested
	}
	if !IsNil(o.LagoonLeechSupremeKilled) {
		toSerialize["lagoon_leech_supreme_killed"] = o.LagoonLeechSupremeKilled
	}
	if !IsNil(o.LagoonLilPadsSold) {
		toSerialize["lagoon_lil_pads_sold"] = o.LagoonLilPadsSold
	}
	if !IsNil(o.LagoonMushroomPoppedOut) {
		toSerialize["lagoon_mushroom_popped_out"] = o.LagoonMushroomPoppedOut
	}
	if !IsNil(o.LagoonRocksGameComplete) {
		toSerialize["lagoon_rocks_game_complete"] = o.LagoonRocksGameComplete
	}
	if !IsNil(o.LifetimeMotesEarned) {
		toSerialize["lifetime_motes_earned"] = o.LifetimeMotesEarned
	}
	if !IsNil(o.LivingCaveSnakeCollected) {
		toSerialize["living_cave_snake_collected"] = o.LivingCaveSnakeCollected
	}
	if !IsNil(o.LivingMetalPieceMaxed) {
		toSerialize["living_metal_piece_maxed"] = o.LivingMetalPieceMaxed
	}
	if !IsNil(o.LivingMetalSpawneggUsed) {
		toSerialize["living_metal_spawnegg_used"] = o.LivingMetalSpawneggUsed
	}
	if !IsNil(o.MotesOrbPickup) {
		toSerialize["motes_orb_pickup"] = o.MotesOrbPickup
	}
	if !IsNil(o.OdonataRepeatableCompleted) {
		toSerialize["odonata_repeatable_completed"] = o.OdonataRepeatableCompleted
	}
	if !IsNil(o.PassConsumed) {
		toSerialize["pass_consumed"] = o.PassConsumed
	}
	if !IsNil(o.PlazaHayDeaths) {
		toSerialize["plaza_hay_deaths"] = o.PlazaHayDeaths
	}
	if !IsNil(o.PlazaHorsezookaShot) {
		toSerialize["plaza_horsezooka_shot"] = o.PlazaHorsezookaShot
	}
	if !IsNil(o.PlazaPillarDeaths) {
		toSerialize["plaza_pillar_deaths"] = o.PlazaPillarDeaths
	}
	if !IsNil(o.PlazaRedLightDeaths) {
		toSerialize["plaza_red_light_deaths"] = o.PlazaRedLightDeaths
	}
	if !IsNil(o.PoppedBalloons) {
		toSerialize["popped_balloons"] = o.PoppedBalloons
	}
	if !IsNil(o.ShenItemBought) {
		toSerialize["shen_item_bought"] = o.ShenItemBought
	}
	toSerialize["visits"] = o.Visits
	if !IsNil(o.WestCakePartEaten) {
		toSerialize["west_cake_part_eaten"] = o.WestCakePartEaten
	}
	if !IsNil(o.WestHotDogsGiven) {
		toSerialize["west_hot_dogs_given"] = o.WestHotDogsGiven
	}
	if !IsNil(o.WestVerminVacuumed) {
		toSerialize["west_vermin_vacuumed"] = o.WestVerminVacuumed
	}
	if !IsNil(o.WoodsLarvaKilled) {
		toSerialize["woods_larva_killed"] = o.WoodsLarvaKilled
	}
	if !IsNil(o.WoodsOdonataBottled) {
		toSerialize["woods_odonata_bottled"] = o.WoodsOdonataBottled
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberPlayerStatsRift) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"visits",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberPlayerStatsRift := _SkyBlockProfileMemberPlayerStatsRift{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberPlayerStatsRift)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberPlayerStatsRift(varSkyBlockProfileMemberPlayerStatsRift)

	return err
}

type NullableSkyBlockProfileMemberPlayerStatsRift struct {
	value *SkyBlockProfileMemberPlayerStatsRift
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerStatsRift) Get() *SkyBlockProfileMemberPlayerStatsRift {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerStatsRift) Set(val *SkyBlockProfileMemberPlayerStatsRift) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerStatsRift) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerStatsRift) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerStatsRift(val *SkyBlockProfileMemberPlayerStatsRift) *NullableSkyBlockProfileMemberPlayerStatsRift {
	return &NullableSkyBlockProfileMemberPlayerStatsRift{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerStatsRift) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerStatsRift) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
