/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// V2ResourcesSkyblockBingoGet200ResponseModifier The modifier for the current bingo event
type V2ResourcesSkyblockBingoGet200ResponseModifier string

// List of _v2_resources_skyblock_bingo_get_200_response_modifier
const (
	EXTREME V2ResourcesSkyblockBingoGet200ResponseModifier = "EXTREME"
	NORMAL  V2ResourcesSkyblockBingoGet200ResponseModifier = "NORMAL"
	SECRET  V2ResourcesSkyblockBingoGet200ResponseModifier = "SECRET"
)

// All allowed values of V2ResourcesSkyblockBingoGet200ResponseModifier enum
var AllowedV2ResourcesSkyblockBingoGet200ResponseModifierEnumValues = []V2ResourcesSkyblockBingoGet200ResponseModifier{
	"EXTREME",
	"NORMAL",
	"SECRET",
}

func (v *V2ResourcesSkyblockBingoGet200ResponseModifier) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V2ResourcesSkyblockBingoGet200ResponseModifier(value)
	for _, existing := range AllowedV2ResourcesSkyblockBingoGet200ResponseModifierEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V2ResourcesSkyblockBingoGet200ResponseModifier", value)
}

// NewV2ResourcesSkyblockBingoGet200ResponseModifierFromValue returns a pointer to a valid V2ResourcesSkyblockBingoGet200ResponseModifier
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV2ResourcesSkyblockBingoGet200ResponseModifierFromValue(v string) (*V2ResourcesSkyblockBingoGet200ResponseModifier, error) {
	ev := V2ResourcesSkyblockBingoGet200ResponseModifier(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V2ResourcesSkyblockBingoGet200ResponseModifier: valid values are %v", v, AllowedV2ResourcesSkyblockBingoGet200ResponseModifierEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V2ResourcesSkyblockBingoGet200ResponseModifier) IsValid() bool {
	for _, existing := range AllowedV2ResourcesSkyblockBingoGet200ResponseModifierEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to _v2_resources_skyblock_bingo_get_200_response_modifier value
func (v V2ResourcesSkyblockBingoGet200ResponseModifier) Ptr() *V2ResourcesSkyblockBingoGet200ResponseModifier {
	return &v
}

type NullableV2ResourcesSkyblockBingoGet200ResponseModifier struct {
	value *V2ResourcesSkyblockBingoGet200ResponseModifier
	isSet bool
}

func (v NullableV2ResourcesSkyblockBingoGet200ResponseModifier) Get() *V2ResourcesSkyblockBingoGet200ResponseModifier {
	return v.value
}

func (v *NullableV2ResourcesSkyblockBingoGet200ResponseModifier) Set(val *V2ResourcesSkyblockBingoGet200ResponseModifier) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ResourcesSkyblockBingoGet200ResponseModifier) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ResourcesSkyblockBingoGet200ResponseModifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ResourcesSkyblockBingoGet200ResponseModifier(val *V2ResourcesSkyblockBingoGet200ResponseModifier) *NullableV2ResourcesSkyblockBingoGet200ResponseModifier {
	return &NullableV2ResourcesSkyblockBingoGet200ResponseModifier{value: val, isSet: true}
}

func (v NullableV2ResourcesSkyblockBingoGet200ResponseModifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ResourcesSkyblockBingoGet200ResponseModifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
