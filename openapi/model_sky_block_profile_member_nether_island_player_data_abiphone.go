/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberNetherIslandPlayerDataAbiphone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberNetherIslandPlayerDataAbiphone{}

// SkyBlockProfileMemberNetherIslandPlayerDataAbiphone struct for SkyBlockProfileMemberNetherIslandPlayerDataAbiphone
type SkyBlockProfileMemberNetherIslandPlayerDataAbiphone struct {
	ActiveContacts                       []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneActiveContactsInner `json:"active_contacts"`
	ContactData                          SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneContactData           `json:"contact_data"`
	Games                                map[string]interface{}                                                   `json:"games"`
	HasUsedSiriusPersonalPhoneNumberItem *bool                                                                    `json:"has_used_sirius_personal_phone_number_item,omitempty"`
	LastDyeCalledYear                    *int64                                                                   `json:"last_dye_called_year,omitempty"`
	OperatorChip                         SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneOperatorChip          `json:"operator_chip"`
	SelectedRingtone                     *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone     `json:"selected_ringtone,omitempty"`
	SelectedSort                         *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort         `json:"selected_sort,omitempty"`
	TrioContactAddons                    *int64                                                                   `json:"trio_contact_addons,omitempty"`
}

type _SkyBlockProfileMemberNetherIslandPlayerDataAbiphone SkyBlockProfileMemberNetherIslandPlayerDataAbiphone

// NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphone instantiates a new SkyBlockProfileMemberNetherIslandPlayerDataAbiphone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphone(activeContacts []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneActiveContactsInner, contactData SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneContactData, games map[string]interface{}, operatorChip SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneOperatorChip) *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone {
	this := SkyBlockProfileMemberNetherIslandPlayerDataAbiphone{}
	this.ActiveContacts = activeContacts
	this.ContactData = contactData
	this.Games = games
	this.OperatorChip = operatorChip
	return &this
}

// NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneWithDefaults instantiates a new SkyBlockProfileMemberNetherIslandPlayerDataAbiphone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneWithDefaults() *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone {
	this := SkyBlockProfileMemberNetherIslandPlayerDataAbiphone{}
	return &this
}

// GetActiveContacts returns the ActiveContacts field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetActiveContacts() []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneActiveContactsInner {
	if o == nil {
		var ret []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneActiveContactsInner
		return ret
	}

	return o.ActiveContacts
}

// GetActiveContactsOk returns a tuple with the ActiveContacts field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetActiveContactsOk() ([]SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneActiveContactsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveContacts, true
}

// SetActiveContacts sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetActiveContacts(v []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneActiveContactsInner) {
	o.ActiveContacts = v
}

// GetContactData returns the ContactData field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetContactData() SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneContactData {
	if o == nil {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneContactData
		return ret
	}

	return o.ContactData
}

// GetContactDataOk returns a tuple with the ContactData field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetContactDataOk() (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneContactData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactData, true
}

// SetContactData sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetContactData(v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneContactData) {
	o.ContactData = v
}

// GetGames returns the Games field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetGames() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Games
}

// GetGamesOk returns a tuple with the Games field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetGamesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Games, true
}

// SetGames sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetGames(v map[string]interface{}) {
	o.Games = v
}

// GetHasUsedSiriusPersonalPhoneNumberItem returns the HasUsedSiriusPersonalPhoneNumberItem field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetHasUsedSiriusPersonalPhoneNumberItem() bool {
	if o == nil || IsNil(o.HasUsedSiriusPersonalPhoneNumberItem) {
		var ret bool
		return ret
	}
	return *o.HasUsedSiriusPersonalPhoneNumberItem
}

// GetHasUsedSiriusPersonalPhoneNumberItemOk returns a tuple with the HasUsedSiriusPersonalPhoneNumberItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetHasUsedSiriusPersonalPhoneNumberItemOk() (*bool, bool) {
	if o == nil || IsNil(o.HasUsedSiriusPersonalPhoneNumberItem) {
		return nil, false
	}
	return o.HasUsedSiriusPersonalPhoneNumberItem, true
}

// HasHasUsedSiriusPersonalPhoneNumberItem returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) HasHasUsedSiriusPersonalPhoneNumberItem() bool {
	if o != nil && !IsNil(o.HasUsedSiriusPersonalPhoneNumberItem) {
		return true
	}

	return false
}

// SetHasUsedSiriusPersonalPhoneNumberItem gets a reference to the given bool and assigns it to the HasUsedSiriusPersonalPhoneNumberItem field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetHasUsedSiriusPersonalPhoneNumberItem(v bool) {
	o.HasUsedSiriusPersonalPhoneNumberItem = &v
}

// GetLastDyeCalledYear returns the LastDyeCalledYear field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetLastDyeCalledYear() int64 {
	if o == nil || IsNil(o.LastDyeCalledYear) {
		var ret int64
		return ret
	}
	return *o.LastDyeCalledYear
}

// GetLastDyeCalledYearOk returns a tuple with the LastDyeCalledYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetLastDyeCalledYearOk() (*int64, bool) {
	if o == nil || IsNil(o.LastDyeCalledYear) {
		return nil, false
	}
	return o.LastDyeCalledYear, true
}

// HasLastDyeCalledYear returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) HasLastDyeCalledYear() bool {
	if o != nil && !IsNil(o.LastDyeCalledYear) {
		return true
	}

	return false
}

// SetLastDyeCalledYear gets a reference to the given int64 and assigns it to the LastDyeCalledYear field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetLastDyeCalledYear(v int64) {
	o.LastDyeCalledYear = &v
}

// GetOperatorChip returns the OperatorChip field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetOperatorChip() SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneOperatorChip {
	if o == nil {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneOperatorChip
		return ret
	}

	return o.OperatorChip
}

// GetOperatorChipOk returns a tuple with the OperatorChip field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetOperatorChipOk() (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneOperatorChip, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatorChip, true
}

// SetOperatorChip sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetOperatorChip(v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneOperatorChip) {
	o.OperatorChip = v
}

// GetSelectedRingtone returns the SelectedRingtone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetSelectedRingtone() SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone {
	if o == nil || IsNil(o.SelectedRingtone) {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone
		return ret
	}
	return *o.SelectedRingtone
}

// GetSelectedRingtoneOk returns a tuple with the SelectedRingtone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetSelectedRingtoneOk() (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone, bool) {
	if o == nil || IsNil(o.SelectedRingtone) {
		return nil, false
	}
	return o.SelectedRingtone, true
}

// HasSelectedRingtone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) HasSelectedRingtone() bool {
	if o != nil && !IsNil(o.SelectedRingtone) {
		return true
	}

	return false
}

// SetSelectedRingtone gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone and assigns it to the SelectedRingtone field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetSelectedRingtone(v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) {
	o.SelectedRingtone = &v
}

// GetSelectedSort returns the SelectedSort field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetSelectedSort() SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort {
	if o == nil || IsNil(o.SelectedSort) {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort
		return ret
	}
	return *o.SelectedSort
}

// GetSelectedSortOk returns a tuple with the SelectedSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetSelectedSortOk() (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort, bool) {
	if o == nil || IsNil(o.SelectedSort) {
		return nil, false
	}
	return o.SelectedSort, true
}

// HasSelectedSort returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) HasSelectedSort() bool {
	if o != nil && !IsNil(o.SelectedSort) {
		return true
	}

	return false
}

// SetSelectedSort gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort and assigns it to the SelectedSort field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetSelectedSort(v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedSort) {
	o.SelectedSort = &v
}

// GetTrioContactAddons returns the TrioContactAddons field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetTrioContactAddons() int64 {
	if o == nil || IsNil(o.TrioContactAddons) {
		var ret int64
		return ret
	}
	return *o.TrioContactAddons
}

// GetTrioContactAddonsOk returns a tuple with the TrioContactAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) GetTrioContactAddonsOk() (*int64, bool) {
	if o == nil || IsNil(o.TrioContactAddons) {
		return nil, false
	}
	return o.TrioContactAddons, true
}

// HasTrioContactAddons returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) HasTrioContactAddons() bool {
	if o != nil && !IsNil(o.TrioContactAddons) {
		return true
	}

	return false
}

// SetTrioContactAddons gets a reference to the given int64 and assigns it to the TrioContactAddons field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) SetTrioContactAddons(v int64) {
	o.TrioContactAddons = &v
}

func (o SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_contacts"] = o.ActiveContacts
	toSerialize["contact_data"] = o.ContactData
	toSerialize["games"] = o.Games
	if !IsNil(o.HasUsedSiriusPersonalPhoneNumberItem) {
		toSerialize["has_used_sirius_personal_phone_number_item"] = o.HasUsedSiriusPersonalPhoneNumberItem
	}
	if !IsNil(o.LastDyeCalledYear) {
		toSerialize["last_dye_called_year"] = o.LastDyeCalledYear
	}
	toSerialize["operator_chip"] = o.OperatorChip
	if !IsNil(o.SelectedRingtone) {
		toSerialize["selected_ringtone"] = o.SelectedRingtone
	}
	if !IsNil(o.SelectedSort) {
		toSerialize["selected_sort"] = o.SelectedSort
	}
	if !IsNil(o.TrioContactAddons) {
		toSerialize["trio_contact_addons"] = o.TrioContactAddons
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active_contacts",
		"contact_data",
		"games",
		"operator_chip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberNetherIslandPlayerDataAbiphone := _SkyBlockProfileMemberNetherIslandPlayerDataAbiphone{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberNetherIslandPlayerDataAbiphone)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberNetherIslandPlayerDataAbiphone(varSkyBlockProfileMemberNetherIslandPlayerDataAbiphone)

	return err
}

type NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone struct {
	value *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone) Get() *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone) Set(val *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone(val *SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
