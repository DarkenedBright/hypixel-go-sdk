/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberPetsDataPetTier the model 'SkyBlockProfileMemberPetsDataPetTier'
type SkyBlockProfileMemberPetsDataPetTier string

// List of SkyBlockProfileMemberPetsDataPet_tier
const (
	SKYBLOCKPROFILEMEMBERPETSDATAPETTIER_COMMON    SkyBlockProfileMemberPetsDataPetTier = "COMMON"
	SKYBLOCKPROFILEMEMBERPETSDATAPETTIER_EPIC      SkyBlockProfileMemberPetsDataPetTier = "EPIC"
	SKYBLOCKPROFILEMEMBERPETSDATAPETTIER_LEGENDARY SkyBlockProfileMemberPetsDataPetTier = "LEGENDARY"
	SKYBLOCKPROFILEMEMBERPETSDATAPETTIER_MYTHIC    SkyBlockProfileMemberPetsDataPetTier = "MYTHIC"
	SKYBLOCKPROFILEMEMBERPETSDATAPETTIER_RARE      SkyBlockProfileMemberPetsDataPetTier = "RARE"
	SKYBLOCKPROFILEMEMBERPETSDATAPETTIER_UNCOMMON  SkyBlockProfileMemberPetsDataPetTier = "UNCOMMON"
)

// All allowed values of SkyBlockProfileMemberPetsDataPetTier enum
var AllowedSkyBlockProfileMemberPetsDataPetTierEnumValues = []SkyBlockProfileMemberPetsDataPetTier{
	"COMMON",
	"EPIC",
	"LEGENDARY",
	"MYTHIC",
	"RARE",
	"UNCOMMON",
}

func (v *SkyBlockProfileMemberPetsDataPetTier) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberPetsDataPetTier(value)
	for _, existing := range AllowedSkyBlockProfileMemberPetsDataPetTierEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberPetsDataPetTier", value)
}

// NewSkyBlockProfileMemberPetsDataPetTierFromValue returns a pointer to a valid SkyBlockProfileMemberPetsDataPetTier
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberPetsDataPetTierFromValue(v string) (*SkyBlockProfileMemberPetsDataPetTier, error) {
	ev := SkyBlockProfileMemberPetsDataPetTier(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberPetsDataPetTier: valid values are %v", v, AllowedSkyBlockProfileMemberPetsDataPetTierEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberPetsDataPetTier) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberPetsDataPetTierEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberPetsDataPet_tier value
func (v SkyBlockProfileMemberPetsDataPetTier) Ptr() *SkyBlockProfileMemberPetsDataPetTier {
	return &v
}

type NullableSkyBlockProfileMemberPetsDataPetTier struct {
	value *SkyBlockProfileMemberPetsDataPetTier
	isSet bool
}

func (v NullableSkyBlockProfileMemberPetsDataPetTier) Get() *SkyBlockProfileMemberPetsDataPetTier {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPetsDataPetTier) Set(val *SkyBlockProfileMemberPetsDataPetTier) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPetsDataPetTier) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPetsDataPetTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPetsDataPetTier(val *SkyBlockProfileMemberPetsDataPetTier) *NullableSkyBlockProfileMemberPetsDataPetTier {
	return &NullableSkyBlockProfileMemberPetsDataPetTier{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPetsDataPetTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPetsDataPetTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
