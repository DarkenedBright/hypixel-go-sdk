/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberMiningCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberMiningCore{}

// SkyBlockProfileMemberMiningCore struct for SkyBlockProfileMemberMiningCore
type SkyBlockProfileMemberMiningCore struct {
	Biomes                        *SkyBlockProfileMemberMiningCoreBiomes                 `json:"biomes,omitempty"`
	Crystals                      *SkyBlockProfileMemberMiningCoreCrystals               `json:"crystals,omitempty"`
	DailyOresMined                *int64                                                 `json:"daily_ores_mined,omitempty"`
	DailyOresMinedDay             *int64                                                 `json:"daily_ores_mined_day,omitempty"`
	DailyOresMinedDayGemstone     *int64                                                 `json:"daily_ores_mined_day_gemstone,omitempty"`
	DailyOresMinedDayGlacite      *int64                                                 `json:"daily_ores_mined_day_glacite,omitempty"`
	DailyOresMinedDayMithrilOre   *int64                                                 `json:"daily_ores_mined_day_mithril_ore,omitempty"`
	DailyOresMinedGemstone        *int64                                                 `json:"daily_ores_mined_gemstone,omitempty"`
	DailyOresMinedGlacite         *int64                                                 `json:"daily_ores_mined_glacite,omitempty"`
	DailyOresMinedMithrilOre      *int64                                                 `json:"daily_ores_mined_mithril_ore,omitempty"`
	Experience                    float64                                                `json:"experience"`
	GreaterMinesLastAccess        *int64                                                 `json:"greater_mines_last_access,omitempty"`
	LastReset                     *int64                                                 `json:"last_reset,omitempty"`
	Nodes                         SkyBlockProfileMemberMiningCoreNodes                   `json:"nodes"`
	PowderGemstone                *int64                                                 `json:"powder_gemstone,omitempty"`
	PowderGemstoneTotal           *int64                                                 `json:"powder_gemstone_total,omitempty"`
	PowderGlacite                 *int64                                                 `json:"powder_glacite,omitempty"`
	PowderGlaciteTotal            *int64                                                 `json:"powder_glacite_total,omitempty"`
	PowderMithril                 int64                                                  `json:"powder_mithril"`
	PowderMithrilTotal            int64                                                  `json:"powder_mithril_total"`
	PowderSpentGemstone           *int64                                                 `json:"powder_spent_gemstone,omitempty"`
	CurrentDailyEffect            *string                                                `json:"current_daily_effect,omitempty"`
	CurrentDailyEffectLastChanged *int64                                                 `json:"current_daily_effect_last_changed,omitempty"`
	PowderSpentGlacite            *int64                                                 `json:"powder_spent_glacite,omitempty"`
	PowderSpentMithril            *int64                                                 `json:"powder_spent_mithril,omitempty"`
	ReceivedFreeTier              bool                                                   `json:"received_free_tier"`
	RetroactiveTier2Token         bool                                                   `json:"retroactive_tier2_token"`
	SelectedPickaxeAbility        *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility `json:"selected_pickaxe_ability,omitempty"`
	TokensSpent                   int64                                                  `json:"tokens_spent"`
}

type _SkyBlockProfileMemberMiningCore SkyBlockProfileMemberMiningCore

// NewSkyBlockProfileMemberMiningCore instantiates a new SkyBlockProfileMemberMiningCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberMiningCore(experience float64, nodes SkyBlockProfileMemberMiningCoreNodes, powderMithril int64, powderMithrilTotal int64, receivedFreeTier bool, retroactiveTier2Token bool, tokensSpent int64) *SkyBlockProfileMemberMiningCore {
	this := SkyBlockProfileMemberMiningCore{}
	this.Experience = experience
	this.Nodes = nodes
	this.PowderMithril = powderMithril
	this.PowderMithrilTotal = powderMithrilTotal
	this.ReceivedFreeTier = receivedFreeTier
	this.RetroactiveTier2Token = retroactiveTier2Token
	this.TokensSpent = tokensSpent
	return &this
}

// NewSkyBlockProfileMemberMiningCoreWithDefaults instantiates a new SkyBlockProfileMemberMiningCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberMiningCoreWithDefaults() *SkyBlockProfileMemberMiningCore {
	this := SkyBlockProfileMemberMiningCore{}
	return &this
}

// GetBiomes returns the Biomes field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetBiomes() SkyBlockProfileMemberMiningCoreBiomes {
	if o == nil || IsNil(o.Biomes) {
		var ret SkyBlockProfileMemberMiningCoreBiomes
		return ret
	}
	return *o.Biomes
}

// GetBiomesOk returns a tuple with the Biomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetBiomesOk() (*SkyBlockProfileMemberMiningCoreBiomes, bool) {
	if o == nil || IsNil(o.Biomes) {
		return nil, false
	}
	return o.Biomes, true
}

// HasBiomes returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasBiomes() bool {
	if o != nil && !IsNil(o.Biomes) {
		return true
	}

	return false
}

// SetBiomes gets a reference to the given SkyBlockProfileMemberMiningCoreBiomes and assigns it to the Biomes field.
func (o *SkyBlockProfileMemberMiningCore) SetBiomes(v SkyBlockProfileMemberMiningCoreBiomes) {
	o.Biomes = &v
}

// GetCrystals returns the Crystals field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetCrystals() SkyBlockProfileMemberMiningCoreCrystals {
	if o == nil || IsNil(o.Crystals) {
		var ret SkyBlockProfileMemberMiningCoreCrystals
		return ret
	}
	return *o.Crystals
}

// GetCrystalsOk returns a tuple with the Crystals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetCrystalsOk() (*SkyBlockProfileMemberMiningCoreCrystals, bool) {
	if o == nil || IsNil(o.Crystals) {
		return nil, false
	}
	return o.Crystals, true
}

// HasCrystals returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasCrystals() bool {
	if o != nil && !IsNil(o.Crystals) {
		return true
	}

	return false
}

// SetCrystals gets a reference to the given SkyBlockProfileMemberMiningCoreCrystals and assigns it to the Crystals field.
func (o *SkyBlockProfileMemberMiningCore) SetCrystals(v SkyBlockProfileMemberMiningCoreCrystals) {
	o.Crystals = &v
}

// GetDailyOresMined returns the DailyOresMined field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMined() int64 {
	if o == nil || IsNil(o.DailyOresMined) {
		var ret int64
		return ret
	}
	return *o.DailyOresMined
}

// GetDailyOresMinedOk returns a tuple with the DailyOresMined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMined) {
		return nil, false
	}
	return o.DailyOresMined, true
}

// HasDailyOresMined returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMined() bool {
	if o != nil && !IsNil(o.DailyOresMined) {
		return true
	}

	return false
}

// SetDailyOresMined gets a reference to the given int64 and assigns it to the DailyOresMined field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMined(v int64) {
	o.DailyOresMined = &v
}

// GetDailyOresMinedDay returns the DailyOresMinedDay field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDay() int64 {
	if o == nil || IsNil(o.DailyOresMinedDay) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedDay
}

// GetDailyOresMinedDayOk returns a tuple with the DailyOresMinedDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedDay) {
		return nil, false
	}
	return o.DailyOresMinedDay, true
}

// HasDailyOresMinedDay returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedDay() bool {
	if o != nil && !IsNil(o.DailyOresMinedDay) {
		return true
	}

	return false
}

// SetDailyOresMinedDay gets a reference to the given int64 and assigns it to the DailyOresMinedDay field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedDay(v int64) {
	o.DailyOresMinedDay = &v
}

// GetDailyOresMinedDayGemstone returns the DailyOresMinedDayGemstone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayGemstone() int64 {
	if o == nil || IsNil(o.DailyOresMinedDayGemstone) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedDayGemstone
}

// GetDailyOresMinedDayGemstoneOk returns a tuple with the DailyOresMinedDayGemstone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayGemstoneOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedDayGemstone) {
		return nil, false
	}
	return o.DailyOresMinedDayGemstone, true
}

// HasDailyOresMinedDayGemstone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedDayGemstone() bool {
	if o != nil && !IsNil(o.DailyOresMinedDayGemstone) {
		return true
	}

	return false
}

// SetDailyOresMinedDayGemstone gets a reference to the given int64 and assigns it to the DailyOresMinedDayGemstone field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedDayGemstone(v int64) {
	o.DailyOresMinedDayGemstone = &v
}

// GetDailyOresMinedDayGlacite returns the DailyOresMinedDayGlacite field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayGlacite() int64 {
	if o == nil || IsNil(o.DailyOresMinedDayGlacite) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedDayGlacite
}

// GetDailyOresMinedDayGlaciteOk returns a tuple with the DailyOresMinedDayGlacite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayGlaciteOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedDayGlacite) {
		return nil, false
	}
	return o.DailyOresMinedDayGlacite, true
}

// HasDailyOresMinedDayGlacite returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedDayGlacite() bool {
	if o != nil && !IsNil(o.DailyOresMinedDayGlacite) {
		return true
	}

	return false
}

// SetDailyOresMinedDayGlacite gets a reference to the given int64 and assigns it to the DailyOresMinedDayGlacite field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedDayGlacite(v int64) {
	o.DailyOresMinedDayGlacite = &v
}

// GetDailyOresMinedDayMithrilOre returns the DailyOresMinedDayMithrilOre field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayMithrilOre() int64 {
	if o == nil || IsNil(o.DailyOresMinedDayMithrilOre) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedDayMithrilOre
}

// GetDailyOresMinedDayMithrilOreOk returns a tuple with the DailyOresMinedDayMithrilOre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedDayMithrilOreOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedDayMithrilOre) {
		return nil, false
	}
	return o.DailyOresMinedDayMithrilOre, true
}

// HasDailyOresMinedDayMithrilOre returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedDayMithrilOre() bool {
	if o != nil && !IsNil(o.DailyOresMinedDayMithrilOre) {
		return true
	}

	return false
}

// SetDailyOresMinedDayMithrilOre gets a reference to the given int64 and assigns it to the DailyOresMinedDayMithrilOre field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedDayMithrilOre(v int64) {
	o.DailyOresMinedDayMithrilOre = &v
}

// GetDailyOresMinedGemstone returns the DailyOresMinedGemstone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedGemstone() int64 {
	if o == nil || IsNil(o.DailyOresMinedGemstone) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedGemstone
}

// GetDailyOresMinedGemstoneOk returns a tuple with the DailyOresMinedGemstone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedGemstoneOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedGemstone) {
		return nil, false
	}
	return o.DailyOresMinedGemstone, true
}

// HasDailyOresMinedGemstone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedGemstone() bool {
	if o != nil && !IsNil(o.DailyOresMinedGemstone) {
		return true
	}

	return false
}

// SetDailyOresMinedGemstone gets a reference to the given int64 and assigns it to the DailyOresMinedGemstone field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedGemstone(v int64) {
	o.DailyOresMinedGemstone = &v
}

// GetDailyOresMinedGlacite returns the DailyOresMinedGlacite field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedGlacite() int64 {
	if o == nil || IsNil(o.DailyOresMinedGlacite) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedGlacite
}

// GetDailyOresMinedGlaciteOk returns a tuple with the DailyOresMinedGlacite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedGlaciteOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedGlacite) {
		return nil, false
	}
	return o.DailyOresMinedGlacite, true
}

// HasDailyOresMinedGlacite returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedGlacite() bool {
	if o != nil && !IsNil(o.DailyOresMinedGlacite) {
		return true
	}

	return false
}

// SetDailyOresMinedGlacite gets a reference to the given int64 and assigns it to the DailyOresMinedGlacite field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedGlacite(v int64) {
	o.DailyOresMinedGlacite = &v
}

// GetDailyOresMinedMithrilOre returns the DailyOresMinedMithrilOre field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedMithrilOre() int64 {
	if o == nil || IsNil(o.DailyOresMinedMithrilOre) {
		var ret int64
		return ret
	}
	return *o.DailyOresMinedMithrilOre
}

// GetDailyOresMinedMithrilOreOk returns a tuple with the DailyOresMinedMithrilOre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetDailyOresMinedMithrilOreOk() (*int64, bool) {
	if o == nil || IsNil(o.DailyOresMinedMithrilOre) {
		return nil, false
	}
	return o.DailyOresMinedMithrilOre, true
}

// HasDailyOresMinedMithrilOre returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasDailyOresMinedMithrilOre() bool {
	if o != nil && !IsNil(o.DailyOresMinedMithrilOre) {
		return true
	}

	return false
}

// SetDailyOresMinedMithrilOre gets a reference to the given int64 and assigns it to the DailyOresMinedMithrilOre field.
func (o *SkyBlockProfileMemberMiningCore) SetDailyOresMinedMithrilOre(v int64) {
	o.DailyOresMinedMithrilOre = &v
}

// GetExperience returns the Experience field value
func (o *SkyBlockProfileMemberMiningCore) GetExperience() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Experience
}

// GetExperienceOk returns a tuple with the Experience field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetExperienceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Experience, true
}

// SetExperience sets field value
func (o *SkyBlockProfileMemberMiningCore) SetExperience(v float64) {
	o.Experience = v
}

// GetGreaterMinesLastAccess returns the GreaterMinesLastAccess field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetGreaterMinesLastAccess() int64 {
	if o == nil || IsNil(o.GreaterMinesLastAccess) {
		var ret int64
		return ret
	}
	return *o.GreaterMinesLastAccess
}

// GetGreaterMinesLastAccessOk returns a tuple with the GreaterMinesLastAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetGreaterMinesLastAccessOk() (*int64, bool) {
	if o == nil || IsNil(o.GreaterMinesLastAccess) {
		return nil, false
	}
	return o.GreaterMinesLastAccess, true
}

// HasGreaterMinesLastAccess returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasGreaterMinesLastAccess() bool {
	if o != nil && !IsNil(o.GreaterMinesLastAccess) {
		return true
	}

	return false
}

// SetGreaterMinesLastAccess gets a reference to the given int64 and assigns it to the GreaterMinesLastAccess field.
func (o *SkyBlockProfileMemberMiningCore) SetGreaterMinesLastAccess(v int64) {
	o.GreaterMinesLastAccess = &v
}

// GetLastReset returns the LastReset field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetLastReset() int64 {
	if o == nil || IsNil(o.LastReset) {
		var ret int64
		return ret
	}
	return *o.LastReset
}

// GetLastResetOk returns a tuple with the LastReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetLastResetOk() (*int64, bool) {
	if o == nil || IsNil(o.LastReset) {
		return nil, false
	}
	return o.LastReset, true
}

// HasLastReset returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasLastReset() bool {
	if o != nil && !IsNil(o.LastReset) {
		return true
	}

	return false
}

// SetLastReset gets a reference to the given int64 and assigns it to the LastReset field.
func (o *SkyBlockProfileMemberMiningCore) SetLastReset(v int64) {
	o.LastReset = &v
}

// GetNodes returns the Nodes field value
func (o *SkyBlockProfileMemberMiningCore) GetNodes() SkyBlockProfileMemberMiningCoreNodes {
	if o == nil {
		var ret SkyBlockProfileMemberMiningCoreNodes
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetNodesOk() (*SkyBlockProfileMemberMiningCoreNodes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nodes, true
}

// SetNodes sets field value
func (o *SkyBlockProfileMemberMiningCore) SetNodes(v SkyBlockProfileMemberMiningCoreNodes) {
	o.Nodes = v
}

// GetPowderGemstone returns the PowderGemstone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGemstone() int64 {
	if o == nil || IsNil(o.PowderGemstone) {
		var ret int64
		return ret
	}
	return *o.PowderGemstone
}

// GetPowderGemstoneOk returns a tuple with the PowderGemstone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGemstoneOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderGemstone) {
		return nil, false
	}
	return o.PowderGemstone, true
}

// HasPowderGemstone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderGemstone() bool {
	if o != nil && !IsNil(o.PowderGemstone) {
		return true
	}

	return false
}

// SetPowderGemstone gets a reference to the given int64 and assigns it to the PowderGemstone field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderGemstone(v int64) {
	o.PowderGemstone = &v
}

// GetPowderGemstoneTotal returns the PowderGemstoneTotal field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGemstoneTotal() int64 {
	if o == nil || IsNil(o.PowderGemstoneTotal) {
		var ret int64
		return ret
	}
	return *o.PowderGemstoneTotal
}

// GetPowderGemstoneTotalOk returns a tuple with the PowderGemstoneTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGemstoneTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderGemstoneTotal) {
		return nil, false
	}
	return o.PowderGemstoneTotal, true
}

// HasPowderGemstoneTotal returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderGemstoneTotal() bool {
	if o != nil && !IsNil(o.PowderGemstoneTotal) {
		return true
	}

	return false
}

// SetPowderGemstoneTotal gets a reference to the given int64 and assigns it to the PowderGemstoneTotal field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderGemstoneTotal(v int64) {
	o.PowderGemstoneTotal = &v
}

// GetPowderGlacite returns the PowderGlacite field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGlacite() int64 {
	if o == nil || IsNil(o.PowderGlacite) {
		var ret int64
		return ret
	}
	return *o.PowderGlacite
}

// GetPowderGlaciteOk returns a tuple with the PowderGlacite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGlaciteOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderGlacite) {
		return nil, false
	}
	return o.PowderGlacite, true
}

// HasPowderGlacite returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderGlacite() bool {
	if o != nil && !IsNil(o.PowderGlacite) {
		return true
	}

	return false
}

// SetPowderGlacite gets a reference to the given int64 and assigns it to the PowderGlacite field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderGlacite(v int64) {
	o.PowderGlacite = &v
}

// GetPowderGlaciteTotal returns the PowderGlaciteTotal field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGlaciteTotal() int64 {
	if o == nil || IsNil(o.PowderGlaciteTotal) {
		var ret int64
		return ret
	}
	return *o.PowderGlaciteTotal
}

// GetPowderGlaciteTotalOk returns a tuple with the PowderGlaciteTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderGlaciteTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderGlaciteTotal) {
		return nil, false
	}
	return o.PowderGlaciteTotal, true
}

// HasPowderGlaciteTotal returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderGlaciteTotal() bool {
	if o != nil && !IsNil(o.PowderGlaciteTotal) {
		return true
	}

	return false
}

// SetPowderGlaciteTotal gets a reference to the given int64 and assigns it to the PowderGlaciteTotal field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderGlaciteTotal(v int64) {
	o.PowderGlaciteTotal = &v
}

// GetPowderMithril returns the PowderMithril field value
func (o *SkyBlockProfileMemberMiningCore) GetPowderMithril() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PowderMithril
}

// GetPowderMithrilOk returns a tuple with the PowderMithril field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderMithrilOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PowderMithril, true
}

// SetPowderMithril sets field value
func (o *SkyBlockProfileMemberMiningCore) SetPowderMithril(v int64) {
	o.PowderMithril = v
}

// GetPowderMithrilTotal returns the PowderMithrilTotal field value
func (o *SkyBlockProfileMemberMiningCore) GetPowderMithrilTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PowderMithrilTotal
}

// GetPowderMithrilTotalOk returns a tuple with the PowderMithrilTotal field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderMithrilTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PowderMithrilTotal, true
}

// SetPowderMithrilTotal sets field value
func (o *SkyBlockProfileMemberMiningCore) SetPowderMithrilTotal(v int64) {
	o.PowderMithrilTotal = v
}

// GetPowderSpentGemstone returns the PowderSpentGemstone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderSpentGemstone() int64 {
	if o == nil || IsNil(o.PowderSpentGemstone) {
		var ret int64
		return ret
	}
	return *o.PowderSpentGemstone
}

// GetPowderSpentGemstoneOk returns a tuple with the PowderSpentGemstone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderSpentGemstoneOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderSpentGemstone) {
		return nil, false
	}
	return o.PowderSpentGemstone, true
}

// HasPowderSpentGemstone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderSpentGemstone() bool {
	if o != nil && !IsNil(o.PowderSpentGemstone) {
		return true
	}

	return false
}

// SetPowderSpentGemstone gets a reference to the given int64 and assigns it to the PowderSpentGemstone field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderSpentGemstone(v int64) {
	o.PowderSpentGemstone = &v
}

// GetCurrentDailyEffect returns the CurrentDailyEffect field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetCurrentDailyEffect() string {
	if o == nil || IsNil(o.CurrentDailyEffect) {
		var ret string
		return ret
	}
	return *o.CurrentDailyEffect
}

// GetCurrentDailyEffectOk returns a tuple with the CurrentDailyEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetCurrentDailyEffectOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentDailyEffect) {
		return nil, false
	}
	return o.CurrentDailyEffect, true
}

// HasCurrentDailyEffect returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasCurrentDailyEffect() bool {
	if o != nil && !IsNil(o.CurrentDailyEffect) {
		return true
	}

	return false
}

// SetCurrentDailyEffect gets a reference to the given string and assigns it to the CurrentDailyEffect field.
func (o *SkyBlockProfileMemberMiningCore) SetCurrentDailyEffect(v string) {
	o.CurrentDailyEffect = &v
}

// GetCurrentDailyEffectLastChanged returns the CurrentDailyEffectLastChanged field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetCurrentDailyEffectLastChanged() int64 {
	if o == nil || IsNil(o.CurrentDailyEffectLastChanged) {
		var ret int64
		return ret
	}
	return *o.CurrentDailyEffectLastChanged
}

// GetCurrentDailyEffectLastChangedOk returns a tuple with the CurrentDailyEffectLastChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetCurrentDailyEffectLastChangedOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentDailyEffectLastChanged) {
		return nil, false
	}
	return o.CurrentDailyEffectLastChanged, true
}

// HasCurrentDailyEffectLastChanged returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasCurrentDailyEffectLastChanged() bool {
	if o != nil && !IsNil(o.CurrentDailyEffectLastChanged) {
		return true
	}

	return false
}

// SetCurrentDailyEffectLastChanged gets a reference to the given int64 and assigns it to the CurrentDailyEffectLastChanged field.
func (o *SkyBlockProfileMemberMiningCore) SetCurrentDailyEffectLastChanged(v int64) {
	o.CurrentDailyEffectLastChanged = &v
}

// GetPowderSpentGlacite returns the PowderSpentGlacite field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderSpentGlacite() int64 {
	if o == nil || IsNil(o.PowderSpentGlacite) {
		var ret int64
		return ret
	}
	return *o.PowderSpentGlacite
}

// GetPowderSpentGlaciteOk returns a tuple with the PowderSpentGlacite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderSpentGlaciteOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderSpentGlacite) {
		return nil, false
	}
	return o.PowderSpentGlacite, true
}

// HasPowderSpentGlacite returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderSpentGlacite() bool {
	if o != nil && !IsNil(o.PowderSpentGlacite) {
		return true
	}

	return false
}

// SetPowderSpentGlacite gets a reference to the given int64 and assigns it to the PowderSpentGlacite field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderSpentGlacite(v int64) {
	o.PowderSpentGlacite = &v
}

// GetPowderSpentMithril returns the PowderSpentMithril field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetPowderSpentMithril() int64 {
	if o == nil || IsNil(o.PowderSpentMithril) {
		var ret int64
		return ret
	}
	return *o.PowderSpentMithril
}

// GetPowderSpentMithrilOk returns a tuple with the PowderSpentMithril field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetPowderSpentMithrilOk() (*int64, bool) {
	if o == nil || IsNil(o.PowderSpentMithril) {
		return nil, false
	}
	return o.PowderSpentMithril, true
}

// HasPowderSpentMithril returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasPowderSpentMithril() bool {
	if o != nil && !IsNil(o.PowderSpentMithril) {
		return true
	}

	return false
}

// SetPowderSpentMithril gets a reference to the given int64 and assigns it to the PowderSpentMithril field.
func (o *SkyBlockProfileMemberMiningCore) SetPowderSpentMithril(v int64) {
	o.PowderSpentMithril = &v
}

// GetReceivedFreeTier returns the ReceivedFreeTier field value
func (o *SkyBlockProfileMemberMiningCore) GetReceivedFreeTier() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReceivedFreeTier
}

// GetReceivedFreeTierOk returns a tuple with the ReceivedFreeTier field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetReceivedFreeTierOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceivedFreeTier, true
}

// SetReceivedFreeTier sets field value
func (o *SkyBlockProfileMemberMiningCore) SetReceivedFreeTier(v bool) {
	o.ReceivedFreeTier = v
}

// GetRetroactiveTier2Token returns the RetroactiveTier2Token field value
func (o *SkyBlockProfileMemberMiningCore) GetRetroactiveTier2Token() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RetroactiveTier2Token
}

// GetRetroactiveTier2TokenOk returns a tuple with the RetroactiveTier2Token field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetRetroactiveTier2TokenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetroactiveTier2Token, true
}

// SetRetroactiveTier2Token sets field value
func (o *SkyBlockProfileMemberMiningCore) SetRetroactiveTier2Token(v bool) {
	o.RetroactiveTier2Token = v
}

// GetSelectedPickaxeAbility returns the SelectedPickaxeAbility field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberMiningCore) GetSelectedPickaxeAbility() SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility {
	if o == nil || IsNil(o.SelectedPickaxeAbility) {
		var ret SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility
		return ret
	}
	return *o.SelectedPickaxeAbility
}

// GetSelectedPickaxeAbilityOk returns a tuple with the SelectedPickaxeAbility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetSelectedPickaxeAbilityOk() (*SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility, bool) {
	if o == nil || IsNil(o.SelectedPickaxeAbility) {
		return nil, false
	}
	return o.SelectedPickaxeAbility, true
}

// HasSelectedPickaxeAbility returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberMiningCore) HasSelectedPickaxeAbility() bool {
	if o != nil && !IsNil(o.SelectedPickaxeAbility) {
		return true
	}

	return false
}

// SetSelectedPickaxeAbility gets a reference to the given SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility and assigns it to the SelectedPickaxeAbility field.
func (o *SkyBlockProfileMemberMiningCore) SetSelectedPickaxeAbility(v SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) {
	o.SelectedPickaxeAbility = &v
}

// GetTokensSpent returns the TokensSpent field value
func (o *SkyBlockProfileMemberMiningCore) GetTokensSpent() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TokensSpent
}

// GetTokensSpentOk returns a tuple with the TokensSpent field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberMiningCore) GetTokensSpentOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokensSpent, true
}

// SetTokensSpent sets field value
func (o *SkyBlockProfileMemberMiningCore) SetTokensSpent(v int64) {
	o.TokensSpent = v
}

func (o SkyBlockProfileMemberMiningCore) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberMiningCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Biomes) {
		toSerialize["biomes"] = o.Biomes
	}
	if !IsNil(o.Crystals) {
		toSerialize["crystals"] = o.Crystals
	}
	if !IsNil(o.DailyOresMined) {
		toSerialize["daily_ores_mined"] = o.DailyOresMined
	}
	if !IsNil(o.DailyOresMinedDay) {
		toSerialize["daily_ores_mined_day"] = o.DailyOresMinedDay
	}
	if !IsNil(o.DailyOresMinedDayGemstone) {
		toSerialize["daily_ores_mined_day_gemstone"] = o.DailyOresMinedDayGemstone
	}
	if !IsNil(o.DailyOresMinedDayGlacite) {
		toSerialize["daily_ores_mined_day_glacite"] = o.DailyOresMinedDayGlacite
	}
	if !IsNil(o.DailyOresMinedDayMithrilOre) {
		toSerialize["daily_ores_mined_day_mithril_ore"] = o.DailyOresMinedDayMithrilOre
	}
	if !IsNil(o.DailyOresMinedGemstone) {
		toSerialize["daily_ores_mined_gemstone"] = o.DailyOresMinedGemstone
	}
	if !IsNil(o.DailyOresMinedGlacite) {
		toSerialize["daily_ores_mined_glacite"] = o.DailyOresMinedGlacite
	}
	if !IsNil(o.DailyOresMinedMithrilOre) {
		toSerialize["daily_ores_mined_mithril_ore"] = o.DailyOresMinedMithrilOre
	}
	toSerialize["experience"] = o.Experience
	if !IsNil(o.GreaterMinesLastAccess) {
		toSerialize["greater_mines_last_access"] = o.GreaterMinesLastAccess
	}
	if !IsNil(o.LastReset) {
		toSerialize["last_reset"] = o.LastReset
	}
	toSerialize["nodes"] = o.Nodes
	if !IsNil(o.PowderGemstone) {
		toSerialize["powder_gemstone"] = o.PowderGemstone
	}
	if !IsNil(o.PowderGemstoneTotal) {
		toSerialize["powder_gemstone_total"] = o.PowderGemstoneTotal
	}
	if !IsNil(o.PowderGlacite) {
		toSerialize["powder_glacite"] = o.PowderGlacite
	}
	if !IsNil(o.PowderGlaciteTotal) {
		toSerialize["powder_glacite_total"] = o.PowderGlaciteTotal
	}
	toSerialize["powder_mithril"] = o.PowderMithril
	toSerialize["powder_mithril_total"] = o.PowderMithrilTotal
	if !IsNil(o.PowderSpentGemstone) {
		toSerialize["powder_spent_gemstone"] = o.PowderSpentGemstone
	}
	if !IsNil(o.CurrentDailyEffect) {
		toSerialize["current_daily_effect"] = o.CurrentDailyEffect
	}
	if !IsNil(o.CurrentDailyEffectLastChanged) {
		toSerialize["current_daily_effect_last_changed"] = o.CurrentDailyEffectLastChanged
	}
	if !IsNil(o.PowderSpentGlacite) {
		toSerialize["powder_spent_glacite"] = o.PowderSpentGlacite
	}
	if !IsNil(o.PowderSpentMithril) {
		toSerialize["powder_spent_mithril"] = o.PowderSpentMithril
	}
	toSerialize["received_free_tier"] = o.ReceivedFreeTier
	toSerialize["retroactive_tier2_token"] = o.RetroactiveTier2Token
	if !IsNil(o.SelectedPickaxeAbility) {
		toSerialize["selected_pickaxe_ability"] = o.SelectedPickaxeAbility
	}
	toSerialize["tokens_spent"] = o.TokensSpent
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberMiningCore) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"experience",
		"nodes",
		"powder_mithril",
		"powder_mithril_total",
		"received_free_tier",
		"retroactive_tier2_token",
		"tokens_spent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberMiningCore := _SkyBlockProfileMemberMiningCore{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberMiningCore)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberMiningCore(varSkyBlockProfileMemberMiningCore)

	return err
}

type NullableSkyBlockProfileMemberMiningCore struct {
	value *SkyBlockProfileMemberMiningCore
	isSet bool
}

func (v NullableSkyBlockProfileMemberMiningCore) Get() *SkyBlockProfileMemberMiningCore {
	return v.value
}

func (v *NullableSkyBlockProfileMemberMiningCore) Set(val *SkyBlockProfileMemberMiningCore) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberMiningCore) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberMiningCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberMiningCore(val *SkyBlockProfileMemberMiningCore) *NullableSkyBlockProfileMemberMiningCore {
	return &NullableSkyBlockProfileMemberMiningCore{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberMiningCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberMiningCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
