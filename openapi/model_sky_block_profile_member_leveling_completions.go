/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberLevelingCompletions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberLevelingCompletions{}

// SkyBlockProfileMemberLevelingCompletions struct for SkyBlockProfileMemberLevelingCompletions
type SkyBlockProfileMemberLevelingCompletions struct {
	NUCLEUS_RUNS               *int64 `json:"NUCLEUS_RUNS,omitempty"`
	REAPER_PEPPERS             *int64 `json:"REAPER_PEPPERS,omitempty"`
	REFINED_DARK_CACAO_TRUFFLE *int64 `json:"REFINED_DARK_CACAO_TRUFFLE,omitempty"`
}

// NewSkyBlockProfileMemberLevelingCompletions instantiates a new SkyBlockProfileMemberLevelingCompletions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberLevelingCompletions() *SkyBlockProfileMemberLevelingCompletions {
	this := SkyBlockProfileMemberLevelingCompletions{}
	return &this
}

// NewSkyBlockProfileMemberLevelingCompletionsWithDefaults instantiates a new SkyBlockProfileMemberLevelingCompletions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberLevelingCompletionsWithDefaults() *SkyBlockProfileMemberLevelingCompletions {
	this := SkyBlockProfileMemberLevelingCompletions{}
	return &this
}

// GetNUCLEUS_RUNS returns the NUCLEUS_RUNS field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLevelingCompletions) GetNUCLEUS_RUNS() int64 {
	if o == nil || IsNil(o.NUCLEUS_RUNS) {
		var ret int64
		return ret
	}
	return *o.NUCLEUS_RUNS
}

// GetNUCLEUS_RUNSOk returns a tuple with the NUCLEUS_RUNS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLevelingCompletions) GetNUCLEUS_RUNSOk() (*int64, bool) {
	if o == nil || IsNil(o.NUCLEUS_RUNS) {
		return nil, false
	}
	return o.NUCLEUS_RUNS, true
}

// HasNUCLEUS_RUNS returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLevelingCompletions) HasNUCLEUS_RUNS() bool {
	if o != nil && !IsNil(o.NUCLEUS_RUNS) {
		return true
	}

	return false
}

// SetNUCLEUS_RUNS gets a reference to the given int64 and assigns it to the NUCLEUS_RUNS field.
func (o *SkyBlockProfileMemberLevelingCompletions) SetNUCLEUS_RUNS(v int64) {
	o.NUCLEUS_RUNS = &v
}

// GetREAPER_PEPPERS returns the REAPER_PEPPERS field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLevelingCompletions) GetREAPER_PEPPERS() int64 {
	if o == nil || IsNil(o.REAPER_PEPPERS) {
		var ret int64
		return ret
	}
	return *o.REAPER_PEPPERS
}

// GetREAPER_PEPPERSOk returns a tuple with the REAPER_PEPPERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLevelingCompletions) GetREAPER_PEPPERSOk() (*int64, bool) {
	if o == nil || IsNil(o.REAPER_PEPPERS) {
		return nil, false
	}
	return o.REAPER_PEPPERS, true
}

// HasREAPER_PEPPERS returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLevelingCompletions) HasREAPER_PEPPERS() bool {
	if o != nil && !IsNil(o.REAPER_PEPPERS) {
		return true
	}

	return false
}

// SetREAPER_PEPPERS gets a reference to the given int64 and assigns it to the REAPER_PEPPERS field.
func (o *SkyBlockProfileMemberLevelingCompletions) SetREAPER_PEPPERS(v int64) {
	o.REAPER_PEPPERS = &v
}

// GetREFINED_DARK_CACAO_TRUFFLE returns the REFINED_DARK_CACAO_TRUFFLE field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberLevelingCompletions) GetREFINED_DARK_CACAO_TRUFFLE() int64 {
	if o == nil || IsNil(o.REFINED_DARK_CACAO_TRUFFLE) {
		var ret int64
		return ret
	}
	return *o.REFINED_DARK_CACAO_TRUFFLE
}

// GetREFINED_DARK_CACAO_TRUFFLEOk returns a tuple with the REFINED_DARK_CACAO_TRUFFLE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberLevelingCompletions) GetREFINED_DARK_CACAO_TRUFFLEOk() (*int64, bool) {
	if o == nil || IsNil(o.REFINED_DARK_CACAO_TRUFFLE) {
		return nil, false
	}
	return o.REFINED_DARK_CACAO_TRUFFLE, true
}

// HasREFINED_DARK_CACAO_TRUFFLE returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberLevelingCompletions) HasREFINED_DARK_CACAO_TRUFFLE() bool {
	if o != nil && !IsNil(o.REFINED_DARK_CACAO_TRUFFLE) {
		return true
	}

	return false
}

// SetREFINED_DARK_CACAO_TRUFFLE gets a reference to the given int64 and assigns it to the REFINED_DARK_CACAO_TRUFFLE field.
func (o *SkyBlockProfileMemberLevelingCompletions) SetREFINED_DARK_CACAO_TRUFFLE(v int64) {
	o.REFINED_DARK_CACAO_TRUFFLE = &v
}

func (o SkyBlockProfileMemberLevelingCompletions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberLevelingCompletions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NUCLEUS_RUNS) {
		toSerialize["NUCLEUS_RUNS"] = o.NUCLEUS_RUNS
	}
	if !IsNil(o.REAPER_PEPPERS) {
		toSerialize["REAPER_PEPPERS"] = o.REAPER_PEPPERS
	}
	if !IsNil(o.REFINED_DARK_CACAO_TRUFFLE) {
		toSerialize["REFINED_DARK_CACAO_TRUFFLE"] = o.REFINED_DARK_CACAO_TRUFFLE
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberLevelingCompletions struct {
	value *SkyBlockProfileMemberLevelingCompletions
	isSet bool
}

func (v NullableSkyBlockProfileMemberLevelingCompletions) Get() *SkyBlockProfileMemberLevelingCompletions {
	return v.value
}

func (v *NullableSkyBlockProfileMemberLevelingCompletions) Set(val *SkyBlockProfileMemberLevelingCompletions) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberLevelingCompletions) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberLevelingCompletions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberLevelingCompletions(val *SkyBlockProfileMemberLevelingCompletions) *NullableSkyBlockProfileMemberLevelingCompletions {
	return &NullableSkyBlockProfileMemberLevelingCompletions{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberLevelingCompletions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberLevelingCompletions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
