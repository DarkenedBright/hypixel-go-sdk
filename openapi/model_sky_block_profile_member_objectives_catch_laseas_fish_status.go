/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberObjectivesCatchLaseasFishStatus the model 'SkyBlockProfileMemberObjectivesCatchLaseasFishStatus'
type SkyBlockProfileMemberObjectivesCatchLaseasFishStatus string

// List of SkyBlockProfileMemberObjectivesCatchLaseasFish_status
const (
	SKYBLOCKPROFILEMEMBEROBJECTIVESCATCHLASEASFISHSTATUS_ACTIVE   SkyBlockProfileMemberObjectivesCatchLaseasFishStatus = "ACTIVE"
	SKYBLOCKPROFILEMEMBEROBJECTIVESCATCHLASEASFISHSTATUS_COMPLETE SkyBlockProfileMemberObjectivesCatchLaseasFishStatus = "COMPLETE"
	SKYBLOCKPROFILEMEMBEROBJECTIVESCATCHLASEASFISHSTATUS_INACTIVE SkyBlockProfileMemberObjectivesCatchLaseasFishStatus = "INACTIVE"
)

// All allowed values of SkyBlockProfileMemberObjectivesCatchLaseasFishStatus enum
var AllowedSkyBlockProfileMemberObjectivesCatchLaseasFishStatusEnumValues = []SkyBlockProfileMemberObjectivesCatchLaseasFishStatus{
	"ACTIVE",
	"COMPLETE",
	"INACTIVE",
}

func (v *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberObjectivesCatchLaseasFishStatus(value)
	for _, existing := range AllowedSkyBlockProfileMemberObjectivesCatchLaseasFishStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberObjectivesCatchLaseasFishStatus", value)
}

// NewSkyBlockProfileMemberObjectivesCatchLaseasFishStatusFromValue returns a pointer to a valid SkyBlockProfileMemberObjectivesCatchLaseasFishStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberObjectivesCatchLaseasFishStatusFromValue(v string) (*SkyBlockProfileMemberObjectivesCatchLaseasFishStatus, error) {
	ev := SkyBlockProfileMemberObjectivesCatchLaseasFishStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberObjectivesCatchLaseasFishStatus: valid values are %v", v, AllowedSkyBlockProfileMemberObjectivesCatchLaseasFishStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberObjectivesCatchLaseasFishStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberObjectivesCatchLaseasFish_status value
func (v SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) Ptr() *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus {
	return &v
}

type NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus struct {
	value *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus
	isSet bool
}

func (v NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus) Get() *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus {
	return v.value
}

func (v *NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus) Set(val *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus(val *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) *NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus {
	return &NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberObjectivesCatchLaseasFishStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
