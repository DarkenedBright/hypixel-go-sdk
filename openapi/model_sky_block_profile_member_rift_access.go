/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberRiftAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRiftAccess{}

// SkyBlockProfileMemberRiftAccess struct for SkyBlockProfileMemberRiftAccess
type SkyBlockProfileMemberRiftAccess struct {
	ChargeTrackTimestamp *int64                               `json:"charge_track_timestamp,omitempty"`
	ConsumedPrism        *bool                                `json:"consumed_prism,omitempty"`
	LastFree             *int64                               `json:"last_free,omitempty"`
	Pass                 *SkyBlockProfileMemberRiftAccessPass `json:"pass,omitempty"`
}

// NewSkyBlockProfileMemberRiftAccess instantiates a new SkyBlockProfileMemberRiftAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRiftAccess() *SkyBlockProfileMemberRiftAccess {
	this := SkyBlockProfileMemberRiftAccess{}
	return &this
}

// NewSkyBlockProfileMemberRiftAccessWithDefaults instantiates a new SkyBlockProfileMemberRiftAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftAccessWithDefaults() *SkyBlockProfileMemberRiftAccess {
	this := SkyBlockProfileMemberRiftAccess{}
	return &this
}

// GetChargeTrackTimestamp returns the ChargeTrackTimestamp field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftAccess) GetChargeTrackTimestamp() int64 {
	if o == nil || IsNil(o.ChargeTrackTimestamp) {
		var ret int64
		return ret
	}
	return *o.ChargeTrackTimestamp
}

// GetChargeTrackTimestampOk returns a tuple with the ChargeTrackTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftAccess) GetChargeTrackTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.ChargeTrackTimestamp) {
		return nil, false
	}
	return o.ChargeTrackTimestamp, true
}

// HasChargeTrackTimestamp returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftAccess) HasChargeTrackTimestamp() bool {
	if o != nil && !IsNil(o.ChargeTrackTimestamp) {
		return true
	}

	return false
}

// SetChargeTrackTimestamp gets a reference to the given int64 and assigns it to the ChargeTrackTimestamp field.
func (o *SkyBlockProfileMemberRiftAccess) SetChargeTrackTimestamp(v int64) {
	o.ChargeTrackTimestamp = &v
}

// GetConsumedPrism returns the ConsumedPrism field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftAccess) GetConsumedPrism() bool {
	if o == nil || IsNil(o.ConsumedPrism) {
		var ret bool
		return ret
	}
	return *o.ConsumedPrism
}

// GetConsumedPrismOk returns a tuple with the ConsumedPrism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftAccess) GetConsumedPrismOk() (*bool, bool) {
	if o == nil || IsNil(o.ConsumedPrism) {
		return nil, false
	}
	return o.ConsumedPrism, true
}

// HasConsumedPrism returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftAccess) HasConsumedPrism() bool {
	if o != nil && !IsNil(o.ConsumedPrism) {
		return true
	}

	return false
}

// SetConsumedPrism gets a reference to the given bool and assigns it to the ConsumedPrism field.
func (o *SkyBlockProfileMemberRiftAccess) SetConsumedPrism(v bool) {
	o.ConsumedPrism = &v
}

// GetLastFree returns the LastFree field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftAccess) GetLastFree() int64 {
	if o == nil || IsNil(o.LastFree) {
		var ret int64
		return ret
	}
	return *o.LastFree
}

// GetLastFreeOk returns a tuple with the LastFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftAccess) GetLastFreeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastFree) {
		return nil, false
	}
	return o.LastFree, true
}

// HasLastFree returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftAccess) HasLastFree() bool {
	if o != nil && !IsNil(o.LastFree) {
		return true
	}

	return false
}

// SetLastFree gets a reference to the given int64 and assigns it to the LastFree field.
func (o *SkyBlockProfileMemberRiftAccess) SetLastFree(v int64) {
	o.LastFree = &v
}

// GetPass returns the Pass field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftAccess) GetPass() SkyBlockProfileMemberRiftAccessPass {
	if o == nil || IsNil(o.Pass) {
		var ret SkyBlockProfileMemberRiftAccessPass
		return ret
	}
	return *o.Pass
}

// GetPassOk returns a tuple with the Pass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftAccess) GetPassOk() (*SkyBlockProfileMemberRiftAccessPass, bool) {
	if o == nil || IsNil(o.Pass) {
		return nil, false
	}
	return o.Pass, true
}

// HasPass returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftAccess) HasPass() bool {
	if o != nil && !IsNil(o.Pass) {
		return true
	}

	return false
}

// SetPass gets a reference to the given SkyBlockProfileMemberRiftAccessPass and assigns it to the Pass field.
func (o *SkyBlockProfileMemberRiftAccess) SetPass(v SkyBlockProfileMemberRiftAccessPass) {
	o.Pass = &v
}

func (o SkyBlockProfileMemberRiftAccess) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRiftAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChargeTrackTimestamp) {
		toSerialize["charge_track_timestamp"] = o.ChargeTrackTimestamp
	}
	if !IsNil(o.ConsumedPrism) {
		toSerialize["consumed_prism"] = o.ConsumedPrism
	}
	if !IsNil(o.LastFree) {
		toSerialize["last_free"] = o.LastFree
	}
	if !IsNil(o.Pass) {
		toSerialize["pass"] = o.Pass
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberRiftAccess struct {
	value *SkyBlockProfileMemberRiftAccess
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftAccess) Get() *SkyBlockProfileMemberRiftAccess {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftAccess) Set(val *SkyBlockProfileMemberRiftAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftAccess(val *SkyBlockProfileMemberRiftAccess) *NullableSkyBlockProfileMemberRiftAccess {
	return &NullableSkyBlockProfileMemberRiftAccess{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
