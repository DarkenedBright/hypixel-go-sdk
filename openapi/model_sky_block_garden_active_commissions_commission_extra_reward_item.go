/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockGardenActiveCommissionsCommissionExtraRewardItem the model 'SkyBlockGardenActiveCommissionsCommissionExtraRewardItem'
type SkyBlockGardenActiveCommissionsCommissionExtraRewardItem string

// List of SkyBlockGardenActiveCommissionsCommissionExtraReward_item
const (
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDITEM_CASHMERE_JACKET SkyBlockGardenActiveCommissionsCommissionExtraRewardItem = "CASHMERE_JACKET"
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDITEM_OXFORD_SHOES    SkyBlockGardenActiveCommissionsCommissionExtraRewardItem = "OXFORD_SHOES"
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDITEM_SATIN_TROUSERS  SkyBlockGardenActiveCommissionsCommissionExtraRewardItem = "SATIN_TROUSERS"
	SKYBLOCKGARDENACTIVECOMMISSIONSCOMMISSIONEXTRAREWARDITEM_VELVET_TOP_HAT  SkyBlockGardenActiveCommissionsCommissionExtraRewardItem = "VELVET_TOP_HAT"
)

// All allowed values of SkyBlockGardenActiveCommissionsCommissionExtraRewardItem enum
var AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardItemEnumValues = []SkyBlockGardenActiveCommissionsCommissionExtraRewardItem{
	"CASHMERE_JACKET",
	"OXFORD_SHOES",
	"SATIN_TROUSERS",
	"VELVET_TOP_HAT",
}

func (v *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockGardenActiveCommissionsCommissionExtraRewardItem(value)
	for _, existing := range AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardItemEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockGardenActiveCommissionsCommissionExtraRewardItem", value)
}

// NewSkyBlockGardenActiveCommissionsCommissionExtraRewardItemFromValue returns a pointer to a valid SkyBlockGardenActiveCommissionsCommissionExtraRewardItem
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockGardenActiveCommissionsCommissionExtraRewardItemFromValue(v string) (*SkyBlockGardenActiveCommissionsCommissionExtraRewardItem, error) {
	ev := SkyBlockGardenActiveCommissionsCommissionExtraRewardItem(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockGardenActiveCommissionsCommissionExtraRewardItem: valid values are %v", v, AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardItemEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockGardenActiveCommissionsCommissionExtraRewardItem) IsValid() bool {
	for _, existing := range AllowedSkyBlockGardenActiveCommissionsCommissionExtraRewardItemEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockGardenActiveCommissionsCommissionExtraReward_item value
func (v SkyBlockGardenActiveCommissionsCommissionExtraRewardItem) Ptr() *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem {
	return &v
}

type NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem struct {
	value *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem
	isSet bool
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem) Get() *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem {
	return v.value
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem) Set(val *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem(val *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem) *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem {
	return &NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem{value: val, isSet: true}
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraRewardItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
