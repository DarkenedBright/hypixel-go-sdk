/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberEventsEasterShop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberEventsEasterShop{}

// SkyBlockProfileMemberEventsEasterShop struct for SkyBlockProfileMemberEventsEasterShop
type SkyBlockProfileMemberEventsEasterShop struct {
	ChocolateSpent       *int64   `json:"chocolate_spent,omitempty"`
	CocoaFortuneUpgrades *int64   `json:"cocoa_fortune_upgrades,omitempty"`
	Rabbits              []string `json:"rabbits,omitempty"`
	RabbitsPurchased     []string `json:"rabbits_purchased,omitempty"`
	Year                 *int64   `json:"year,omitempty"`
}

// NewSkyBlockProfileMemberEventsEasterShop instantiates a new SkyBlockProfileMemberEventsEasterShop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberEventsEasterShop() *SkyBlockProfileMemberEventsEasterShop {
	this := SkyBlockProfileMemberEventsEasterShop{}
	return &this
}

// NewSkyBlockProfileMemberEventsEasterShopWithDefaults instantiates a new SkyBlockProfileMemberEventsEasterShop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberEventsEasterShopWithDefaults() *SkyBlockProfileMemberEventsEasterShop {
	this := SkyBlockProfileMemberEventsEasterShop{}
	return &this
}

// GetChocolateSpent returns the ChocolateSpent field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterShop) GetChocolateSpent() int64 {
	if o == nil || IsNil(o.ChocolateSpent) {
		var ret int64
		return ret
	}
	return *o.ChocolateSpent
}

// GetChocolateSpentOk returns a tuple with the ChocolateSpent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) GetChocolateSpentOk() (*int64, bool) {
	if o == nil || IsNil(o.ChocolateSpent) {
		return nil, false
	}
	return o.ChocolateSpent, true
}

// HasChocolateSpent returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) HasChocolateSpent() bool {
	if o != nil && !IsNil(o.ChocolateSpent) {
		return true
	}

	return false
}

// SetChocolateSpent gets a reference to the given int64 and assigns it to the ChocolateSpent field.
func (o *SkyBlockProfileMemberEventsEasterShop) SetChocolateSpent(v int64) {
	o.ChocolateSpent = &v
}

// GetCocoaFortuneUpgrades returns the CocoaFortuneUpgrades field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterShop) GetCocoaFortuneUpgrades() int64 {
	if o == nil || IsNil(o.CocoaFortuneUpgrades) {
		var ret int64
		return ret
	}
	return *o.CocoaFortuneUpgrades
}

// GetCocoaFortuneUpgradesOk returns a tuple with the CocoaFortuneUpgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) GetCocoaFortuneUpgradesOk() (*int64, bool) {
	if o == nil || IsNil(o.CocoaFortuneUpgrades) {
		return nil, false
	}
	return o.CocoaFortuneUpgrades, true
}

// HasCocoaFortuneUpgrades returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) HasCocoaFortuneUpgrades() bool {
	if o != nil && !IsNil(o.CocoaFortuneUpgrades) {
		return true
	}

	return false
}

// SetCocoaFortuneUpgrades gets a reference to the given int64 and assigns it to the CocoaFortuneUpgrades field.
func (o *SkyBlockProfileMemberEventsEasterShop) SetCocoaFortuneUpgrades(v int64) {
	o.CocoaFortuneUpgrades = &v
}

// GetRabbits returns the Rabbits field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterShop) GetRabbits() []string {
	if o == nil || IsNil(o.Rabbits) {
		var ret []string
		return ret
	}
	return o.Rabbits
}

// GetRabbitsOk returns a tuple with the Rabbits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) GetRabbitsOk() ([]string, bool) {
	if o == nil || IsNil(o.Rabbits) {
		return nil, false
	}
	return o.Rabbits, true
}

// HasRabbits returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) HasRabbits() bool {
	if o != nil && !IsNil(o.Rabbits) {
		return true
	}

	return false
}

// SetRabbits gets a reference to the given []string and assigns it to the Rabbits field.
func (o *SkyBlockProfileMemberEventsEasterShop) SetRabbits(v []string) {
	o.Rabbits = v
}

// GetRabbitsPurchased returns the RabbitsPurchased field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterShop) GetRabbitsPurchased() []string {
	if o == nil || IsNil(o.RabbitsPurchased) {
		var ret []string
		return ret
	}
	return o.RabbitsPurchased
}

// GetRabbitsPurchasedOk returns a tuple with the RabbitsPurchased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) GetRabbitsPurchasedOk() ([]string, bool) {
	if o == nil || IsNil(o.RabbitsPurchased) {
		return nil, false
	}
	return o.RabbitsPurchased, true
}

// HasRabbitsPurchased returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) HasRabbitsPurchased() bool {
	if o != nil && !IsNil(o.RabbitsPurchased) {
		return true
	}

	return false
}

// SetRabbitsPurchased gets a reference to the given []string and assigns it to the RabbitsPurchased field.
func (o *SkyBlockProfileMemberEventsEasterShop) SetRabbitsPurchased(v []string) {
	o.RabbitsPurchased = v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterShop) GetYear() int64 {
	if o == nil || IsNil(o.Year) {
		var ret int64
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) GetYearOk() (*int64, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterShop) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int64 and assigns it to the Year field.
func (o *SkyBlockProfileMemberEventsEasterShop) SetYear(v int64) {
	o.Year = &v
}

func (o SkyBlockProfileMemberEventsEasterShop) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberEventsEasterShop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChocolateSpent) {
		toSerialize["chocolate_spent"] = o.ChocolateSpent
	}
	if !IsNil(o.CocoaFortuneUpgrades) {
		toSerialize["cocoa_fortune_upgrades"] = o.CocoaFortuneUpgrades
	}
	if !IsNil(o.Rabbits) {
		toSerialize["rabbits"] = o.Rabbits
	}
	if !IsNil(o.RabbitsPurchased) {
		toSerialize["rabbits_purchased"] = o.RabbitsPurchased
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberEventsEasterShop struct {
	value *SkyBlockProfileMemberEventsEasterShop
	isSet bool
}

func (v NullableSkyBlockProfileMemberEventsEasterShop) Get() *SkyBlockProfileMemberEventsEasterShop {
	return v.value
}

func (v *NullableSkyBlockProfileMemberEventsEasterShop) Set(val *SkyBlockProfileMemberEventsEasterShop) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberEventsEasterShop) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberEventsEasterShop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberEventsEasterShop(val *SkyBlockProfileMemberEventsEasterShop) *NullableSkyBlockProfileMemberEventsEasterShop {
	return &NullableSkyBlockProfileMemberEventsEasterShop{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberEventsEasterShop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberEventsEasterShop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
