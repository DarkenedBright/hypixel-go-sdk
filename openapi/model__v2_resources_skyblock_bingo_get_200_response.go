/*
Hypixel Public API

# Introduction This is the official Hypixel API documentation. [Hypixel Website](https://hypixel.net/) - [GitHub Repo](https://github.com/HypixelDev/PublicAPI) - [API Help Forum](https://hypixel.net/forums/api-help.111/)  All use of the API must conform to the [API policies](https://developer.hypixel.net/policies), violation of these policies may lead to applications being revoked or users banned from the API. ## Limits API keys are limited to a maximum amount of requests per 5 minute intervals. These limits will depend on the type of application that the key is assigned to.  Endpoints which require the use of an API key will also respond with headers to assist with managing the rate limit: - 'RateLimit-Limit' - The limit of requests per minute for the provided API key. - 'RateLimit-Remaining' - The remaining amount of requests allowed for the current minute. - 'RateLimit-Reset' - The amount of seconds until the next minute and the reset of the API key usages.  ## GameTypes | ID | Type Name      | Database Name | Clean Name           |  |----|----------------|---------------|----------------------|  | 2  | QUAKECRAFT     | Quake         | Quake                |  | 3  | WALLS          | Walls         | Walls                |  | 4  | PAINTBALL      | Paintball     | Paintball            |  | 5  | SURVIVAL_GAMES | HungerGames   | Blitz Survival Games |  | 6  | TNTGAMES       | TNTGames      | TNT Games            |  | 7  | VAMPIREZ       | VampireZ      | VampireZ             |  | 13 | WALLS3         | Walls3        | Mega Walls           |  | 14 | ARCADE         | Arcade        | Arcade               |  | 17 | ARENA          | Arena         | Arena                |  | 20 | UHC            | UHC           | UHC Champions        |  | 21 | MCGO           | MCGO          | Cops and Crims       |  | 23 | BATTLEGROUND   | Battleground  | Warlords             |  | 24 | SUPER_SMASH    | SuperSmash    | Smash Heroes         |  | 25 | GINGERBREAD    | GingerBread   | Turbo Kart Racers    |  | 26 | HOUSING        | Housing       | Housing              |  | 51 | SKYWARS        | SkyWars       | SkyWars              |  | 52 | TRUE_COMBAT    | TrueCombat    | Crazy Walls          |  | 54 | SPEED_UHC      | SpeedUHC      | Speed UHC            |  | 55 | SKYCLASH       | SkyClash      | SkyClash             |  | 56 | LEGACY         | Legacy        | Classic Games        |  | 57 | PROTOTYPE      | Prototype     | Prototype            |  | 58 | BEDWARS        | Bedwars       | Bed Wars             |  | 59 | MURDER_MYSTERY | MurderMystery | Murder Mystery       |  | 60 | BUILD_BATTLE   | BuildBattle   | Build Battle         |  | 61 | DUELS          | Duels         | Duels                |  | 63 | SKYBLOCK       | SkyBlock      | SkyBlock             |  | 64 | PIT            | Pit           | Pit                  |  | 65 | REPLAY         | Replay        | Replay               |  | 67 | SMP            | SMP           | SMP                  |  | 68 | WOOL_GAMES     | WoolGames     | Wool Wars            |  ### Storage Games store their respective stats and data in a Player's `stats` collection. The game's specific data is held within a JSON object named after it's `Database Name` (seen above.) ### GameType Notes * Clean names are what is displayed to the user when referencing the name. * Database names or IDs are used when the API references a specific GameType. ## Notes  ### Date and Time Generally dates are stored as a Unix Epoch times in milliseconds. ### Response Format Responses are served in JSON format. ### UUID Parameters All uuid parameters support both dashed and undashed versions. ### SkyBlock items and inventories Items and inventory data are stored as a base64 encoded string containing gzipped nbt data. If a method is missing important information about an item or inventory, you should try checking this! >Note: the base64 string may contain a unicode escape for non-alphabetical symbols, and some programming languages may have silent defects when interpreting the string.   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the V2ResourcesSkyblockBingoGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ResourcesSkyblockBingoGet200Response{}

// V2ResourcesSkyblockBingoGet200Response struct for V2ResourcesSkyblockBingoGet200Response
type V2ResourcesSkyblockBingoGet200Response struct {
	// The end time of the current bingo event in unix milliseconds
	End int64 `json:"end"`
	// The goals for the current bingo event, as well as their progress
	Goals []V2ResourcesSkyblockBingoGet200ResponseGoalsInner `json:"goals"`
	// The current bingo event ID, increments by 1 for each bingo hosted
	Id int64 `json:"id"`
	// The unix milliseconds timestamp of the last time this data was updated
	LastUpdated int64 `json:"lastUpdated"`
	// The modifier for the current bingo event
	Modifier string `json:"modifier"`
	// The display name for the current bingo event
	Name string `json:"name"`
	// The start time of the current bingo event in unix milliseconds
	Start   int64 `json:"start"`
	Success bool  `json:"success"`
}

type _V2ResourcesSkyblockBingoGet200Response V2ResourcesSkyblockBingoGet200Response

// NewV2ResourcesSkyblockBingoGet200Response instantiates a new V2ResourcesSkyblockBingoGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ResourcesSkyblockBingoGet200Response(end int64, goals []V2ResourcesSkyblockBingoGet200ResponseGoalsInner, id int64, lastUpdated int64, modifier string, name string, start int64, success bool) *V2ResourcesSkyblockBingoGet200Response {
	this := V2ResourcesSkyblockBingoGet200Response{}
	this.End = end
	this.Goals = goals
	this.Id = id
	this.LastUpdated = lastUpdated
	this.Modifier = modifier
	this.Name = name
	this.Start = start
	this.Success = success
	return &this
}

// NewV2ResourcesSkyblockBingoGet200ResponseWithDefaults instantiates a new V2ResourcesSkyblockBingoGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ResourcesSkyblockBingoGet200ResponseWithDefaults() *V2ResourcesSkyblockBingoGet200Response {
	this := V2ResourcesSkyblockBingoGet200Response{}
	return &this
}

// GetEnd returns the End field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetEnd() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetEndOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetEnd(v int64) {
	o.End = v
}

// GetGoals returns the Goals field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetGoals() []V2ResourcesSkyblockBingoGet200ResponseGoalsInner {
	if o == nil {
		var ret []V2ResourcesSkyblockBingoGet200ResponseGoalsInner
		return ret
	}

	return o.Goals
}

// GetGoalsOk returns a tuple with the Goals field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetGoalsOk() ([]V2ResourcesSkyblockBingoGet200ResponseGoalsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Goals, true
}

// SetGoals sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetGoals(v []V2ResourcesSkyblockBingoGet200ResponseGoalsInner) {
	o.Goals = v
}

// GetId returns the Id field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetId(v int64) {
	o.Id = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetLastUpdated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetLastUpdatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetLastUpdated(v int64) {
	o.LastUpdated = v
}

// GetModifier returns the Modifier field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetModifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modifier
}

// GetModifierOk returns a tuple with the Modifier field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetModifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modifier, true
}

// SetModifier sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetModifier(v string) {
	o.Modifier = v
}

// GetName returns the Name field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetName(v string) {
	o.Name = v
}

// GetStart returns the Start field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetStart() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetStartOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetStart(v int64) {
	o.Start = v
}

// GetSuccess returns the Success field value
func (o *V2ResourcesSkyblockBingoGet200Response) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockBingoGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *V2ResourcesSkyblockBingoGet200Response) SetSuccess(v bool) {
	o.Success = v
}

func (o V2ResourcesSkyblockBingoGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ResourcesSkyblockBingoGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["end"] = o.End
	toSerialize["goals"] = o.Goals
	toSerialize["id"] = o.Id
	toSerialize["lastUpdated"] = o.LastUpdated
	toSerialize["modifier"] = o.Modifier
	toSerialize["name"] = o.Name
	toSerialize["start"] = o.Start
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

func (o *V2ResourcesSkyblockBingoGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"end",
		"goals",
		"id",
		"lastUpdated",
		"modifier",
		"name",
		"start",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ResourcesSkyblockBingoGet200Response := _V2ResourcesSkyblockBingoGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2ResourcesSkyblockBingoGet200Response)

	if err != nil {
		return err
	}

	*o = V2ResourcesSkyblockBingoGet200Response(varV2ResourcesSkyblockBingoGet200Response)

	return err
}

type NullableV2ResourcesSkyblockBingoGet200Response struct {
	value *V2ResourcesSkyblockBingoGet200Response
	isSet bool
}

func (v NullableV2ResourcesSkyblockBingoGet200Response) Get() *V2ResourcesSkyblockBingoGet200Response {
	return v.value
}

func (v *NullableV2ResourcesSkyblockBingoGet200Response) Set(val *V2ResourcesSkyblockBingoGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ResourcesSkyblockBingoGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ResourcesSkyblockBingoGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ResourcesSkyblockBingoGet200Response(val *V2ResourcesSkyblockBingoGet200Response) *NullableV2ResourcesSkyblockBingoGet200Response {
	return &NullableV2ResourcesSkyblockBingoGet200Response{value: val, isSet: true}
}

func (v NullableV2ResourcesSkyblockBingoGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ResourcesSkyblockBingoGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
