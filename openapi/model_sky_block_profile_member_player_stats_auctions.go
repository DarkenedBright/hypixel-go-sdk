/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberPlayerStatsAuctions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerStatsAuctions{}

// SkyBlockProfileMemberPlayerStatsAuctions struct for SkyBlockProfileMemberPlayerStatsAuctions
type SkyBlockProfileMemberPlayerStatsAuctions struct {
	Bids        *float64                                             `json:"bids,omitempty"`
	Completed   *float64                                             `json:"completed,omitempty"`
	Created     *float64                                             `json:"created,omitempty"`
	Fees        *float64                                             `json:"fees,omitempty"`
	GoldEarned  *float64                                             `json:"gold_earned,omitempty"`
	GoldSpent   *float64                                             `json:"gold_spent,omitempty"`
	HighestBid  *float64                                             `json:"highest_bid,omitempty"`
	NoBids      *float64                                             `json:"no_bids,omitempty"`
	TotalBought *SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts `json:"total_bought,omitempty"`
	TotalSold   *SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts `json:"total_sold,omitempty"`
	Won         *float64                                             `json:"won,omitempty"`
}

// NewSkyBlockProfileMemberPlayerStatsAuctions instantiates a new SkyBlockProfileMemberPlayerStatsAuctions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerStatsAuctions() *SkyBlockProfileMemberPlayerStatsAuctions {
	this := SkyBlockProfileMemberPlayerStatsAuctions{}
	return &this
}

// NewSkyBlockProfileMemberPlayerStatsAuctionsWithDefaults instantiates a new SkyBlockProfileMemberPlayerStatsAuctions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerStatsAuctionsWithDefaults() *SkyBlockProfileMemberPlayerStatsAuctions {
	this := SkyBlockProfileMemberPlayerStatsAuctions{}
	return &this
}

// GetBids returns the Bids field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetBids() float64 {
	if o == nil || IsNil(o.Bids) {
		var ret float64
		return ret
	}
	return *o.Bids
}

// GetBidsOk returns a tuple with the Bids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetBidsOk() (*float64, bool) {
	if o == nil || IsNil(o.Bids) {
		return nil, false
	}
	return o.Bids, true
}

// HasBids returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasBids() bool {
	if o != nil && !IsNil(o.Bids) {
		return true
	}

	return false
}

// SetBids gets a reference to the given float64 and assigns it to the Bids field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetBids(v float64) {
	o.Bids = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetCompleted() float64 {
	if o == nil || IsNil(o.Completed) {
		var ret float64
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetCompletedOk() (*float64, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given float64 and assigns it to the Completed field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetCompleted(v float64) {
	o.Completed = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetCreated() float64 {
	if o == nil || IsNil(o.Created) {
		var ret float64
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetCreatedOk() (*float64, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given float64 and assigns it to the Created field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetCreated(v float64) {
	o.Created = &v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetFees() float64 {
	if o == nil || IsNil(o.Fees) {
		var ret float64
		return ret
	}
	return *o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetFeesOk() (*float64, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given float64 and assigns it to the Fees field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetFees(v float64) {
	o.Fees = &v
}

// GetGoldEarned returns the GoldEarned field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetGoldEarned() float64 {
	if o == nil || IsNil(o.GoldEarned) {
		var ret float64
		return ret
	}
	return *o.GoldEarned
}

// GetGoldEarnedOk returns a tuple with the GoldEarned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetGoldEarnedOk() (*float64, bool) {
	if o == nil || IsNil(o.GoldEarned) {
		return nil, false
	}
	return o.GoldEarned, true
}

// HasGoldEarned returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasGoldEarned() bool {
	if o != nil && !IsNil(o.GoldEarned) {
		return true
	}

	return false
}

// SetGoldEarned gets a reference to the given float64 and assigns it to the GoldEarned field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetGoldEarned(v float64) {
	o.GoldEarned = &v
}

// GetGoldSpent returns the GoldSpent field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetGoldSpent() float64 {
	if o == nil || IsNil(o.GoldSpent) {
		var ret float64
		return ret
	}
	return *o.GoldSpent
}

// GetGoldSpentOk returns a tuple with the GoldSpent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetGoldSpentOk() (*float64, bool) {
	if o == nil || IsNil(o.GoldSpent) {
		return nil, false
	}
	return o.GoldSpent, true
}

// HasGoldSpent returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasGoldSpent() bool {
	if o != nil && !IsNil(o.GoldSpent) {
		return true
	}

	return false
}

// SetGoldSpent gets a reference to the given float64 and assigns it to the GoldSpent field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetGoldSpent(v float64) {
	o.GoldSpent = &v
}

// GetHighestBid returns the HighestBid field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetHighestBid() float64 {
	if o == nil || IsNil(o.HighestBid) {
		var ret float64
		return ret
	}
	return *o.HighestBid
}

// GetHighestBidOk returns a tuple with the HighestBid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetHighestBidOk() (*float64, bool) {
	if o == nil || IsNil(o.HighestBid) {
		return nil, false
	}
	return o.HighestBid, true
}

// HasHighestBid returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasHighestBid() bool {
	if o != nil && !IsNil(o.HighestBid) {
		return true
	}

	return false
}

// SetHighestBid gets a reference to the given float64 and assigns it to the HighestBid field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetHighestBid(v float64) {
	o.HighestBid = &v
}

// GetNoBids returns the NoBids field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetNoBids() float64 {
	if o == nil || IsNil(o.NoBids) {
		var ret float64
		return ret
	}
	return *o.NoBids
}

// GetNoBidsOk returns a tuple with the NoBids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetNoBidsOk() (*float64, bool) {
	if o == nil || IsNil(o.NoBids) {
		return nil, false
	}
	return o.NoBids, true
}

// HasNoBids returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasNoBids() bool {
	if o != nil && !IsNil(o.NoBids) {
		return true
	}

	return false
}

// SetNoBids gets a reference to the given float64 and assigns it to the NoBids field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetNoBids(v float64) {
	o.NoBids = &v
}

// GetTotalBought returns the TotalBought field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetTotalBought() SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts {
	if o == nil || IsNil(o.TotalBought) {
		var ret SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts
		return ret
	}
	return *o.TotalBought
}

// GetTotalBoughtOk returns a tuple with the TotalBought field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetTotalBoughtOk() (*SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts, bool) {
	if o == nil || IsNil(o.TotalBought) {
		return nil, false
	}
	return o.TotalBought, true
}

// HasTotalBought returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasTotalBought() bool {
	if o != nil && !IsNil(o.TotalBought) {
		return true
	}

	return false
}

// SetTotalBought gets a reference to the given SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts and assigns it to the TotalBought field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetTotalBought(v SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts) {
	o.TotalBought = &v
}

// GetTotalSold returns the TotalSold field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetTotalSold() SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts {
	if o == nil || IsNil(o.TotalSold) {
		var ret SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts
		return ret
	}
	return *o.TotalSold
}

// GetTotalSoldOk returns a tuple with the TotalSold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetTotalSoldOk() (*SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts, bool) {
	if o == nil || IsNil(o.TotalSold) {
		return nil, false
	}
	return o.TotalSold, true
}

// HasTotalSold returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasTotalSold() bool {
	if o != nil && !IsNil(o.TotalSold) {
		return true
	}

	return false
}

// SetTotalSold gets a reference to the given SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts and assigns it to the TotalSold field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetTotalSold(v SkyBlockProfileMemberPlayerStatsAuctionsTotalCounts) {
	o.TotalSold = &v
}

// GetWon returns the Won field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetWon() float64 {
	if o == nil || IsNil(o.Won) {
		var ret float64
		return ret
	}
	return *o.Won
}

// GetWonOk returns a tuple with the Won field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) GetWonOk() (*float64, bool) {
	if o == nil || IsNil(o.Won) {
		return nil, false
	}
	return o.Won, true
}

// HasWon returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) HasWon() bool {
	if o != nil && !IsNil(o.Won) {
		return true
	}

	return false
}

// SetWon gets a reference to the given float64 and assigns it to the Won field.
func (o *SkyBlockProfileMemberPlayerStatsAuctions) SetWon(v float64) {
	o.Won = &v
}

func (o SkyBlockProfileMemberPlayerStatsAuctions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerStatsAuctions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bids) {
		toSerialize["bids"] = o.Bids
	}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	if !IsNil(o.GoldEarned) {
		toSerialize["gold_earned"] = o.GoldEarned
	}
	if !IsNil(o.GoldSpent) {
		toSerialize["gold_spent"] = o.GoldSpent
	}
	if !IsNil(o.HighestBid) {
		toSerialize["highest_bid"] = o.HighestBid
	}
	if !IsNil(o.NoBids) {
		toSerialize["no_bids"] = o.NoBids
	}
	if !IsNil(o.TotalBought) {
		toSerialize["total_bought"] = o.TotalBought
	}
	if !IsNil(o.TotalSold) {
		toSerialize["total_sold"] = o.TotalSold
	}
	if !IsNil(o.Won) {
		toSerialize["won"] = o.Won
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberPlayerStatsAuctions struct {
	value *SkyBlockProfileMemberPlayerStatsAuctions
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerStatsAuctions) Get() *SkyBlockProfileMemberPlayerStatsAuctions {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerStatsAuctions) Set(val *SkyBlockProfileMemberPlayerStatsAuctions) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerStatsAuctions) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerStatsAuctions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerStatsAuctions(val *SkyBlockProfileMemberPlayerStatsAuctions) *NullableSkyBlockProfileMemberPlayerStatsAuctions {
	return &NullableSkyBlockProfileMemberPlayerStatsAuctions{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerStatsAuctions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerStatsAuctions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
