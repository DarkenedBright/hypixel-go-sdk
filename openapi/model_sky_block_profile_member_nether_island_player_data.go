/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberNetherIslandPlayerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberNetherIslandPlayerData{}

// SkyBlockProfileMemberNetherIslandPlayerData struct for SkyBlockProfileMemberNetherIslandPlayerData
type SkyBlockProfileMemberNetherIslandPlayerData struct {
	Abiphone             SkyBlockProfileMemberNetherIslandPlayerDataAbiphone              `json:"abiphone"`
	BarbariansReputation *float64                                                         `json:"barbarians_reputation,omitempty"`
	Dojo                 *SkyBlockProfileMemberNetherIslandPlayerDataDojo                 `json:"dojo,omitempty"`
	KuudraCompletedTiers *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers `json:"kuudra_completed_tiers,omitempty"`
	KuudraPartyFinder    *SkyBlockProfileMemberNetherIslandPlayerDataKuudraPartyFinder    `json:"kuudra_party_finder,omitempty"`
	LastMinibossesKilled []*string                                                        `json:"last_minibosses_killed,omitempty"`
	MagesReputation      *float64                                                         `json:"mages_reputation,omitempty"`
	Matriarch            *SkyBlockProfileMemberNetherIslandPlayerMatriarch                `json:"matriarch,omitempty"`
	NpcPath              *SkyBlockProfileMemberNetherIslandPlayerNpcPath                  `json:"npc_path,omitempty"`
	Quests               *SkyBlockProfileMemberNetherIslandPlayerQuests                   `json:"quests,omitempty"`
	SelectedFaction      *SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction      `json:"selected_faction,omitempty"`
}

type _SkyBlockProfileMemberNetherIslandPlayerData SkyBlockProfileMemberNetherIslandPlayerData

// NewSkyBlockProfileMemberNetherIslandPlayerData instantiates a new SkyBlockProfileMemberNetherIslandPlayerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberNetherIslandPlayerData(abiphone SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) *SkyBlockProfileMemberNetherIslandPlayerData {
	this := SkyBlockProfileMemberNetherIslandPlayerData{}
	this.Abiphone = abiphone
	return &this
}

// NewSkyBlockProfileMemberNetherIslandPlayerDataWithDefaults instantiates a new SkyBlockProfileMemberNetherIslandPlayerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberNetherIslandPlayerDataWithDefaults() *SkyBlockProfileMemberNetherIslandPlayerData {
	this := SkyBlockProfileMemberNetherIslandPlayerData{}
	return &this
}

// GetAbiphone returns the Abiphone field value
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetAbiphone() SkyBlockProfileMemberNetherIslandPlayerDataAbiphone {
	if o == nil {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataAbiphone
		return ret
	}

	return o.Abiphone
}

// GetAbiphoneOk returns a tuple with the Abiphone field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetAbiphoneOk() (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abiphone, true
}

// SetAbiphone sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetAbiphone(v SkyBlockProfileMemberNetherIslandPlayerDataAbiphone) {
	o.Abiphone = v
}

// GetBarbariansReputation returns the BarbariansReputation field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetBarbariansReputation() float64 {
	if o == nil || IsNil(o.BarbariansReputation) {
		var ret float64
		return ret
	}
	return *o.BarbariansReputation
}

// GetBarbariansReputationOk returns a tuple with the BarbariansReputation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetBarbariansReputationOk() (*float64, bool) {
	if o == nil || IsNil(o.BarbariansReputation) {
		return nil, false
	}
	return o.BarbariansReputation, true
}

// HasBarbariansReputation returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasBarbariansReputation() bool {
	if o != nil && !IsNil(o.BarbariansReputation) {
		return true
	}

	return false
}

// SetBarbariansReputation gets a reference to the given float64 and assigns it to the BarbariansReputation field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetBarbariansReputation(v float64) {
	o.BarbariansReputation = &v
}

// GetDojo returns the Dojo field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetDojo() SkyBlockProfileMemberNetherIslandPlayerDataDojo {
	if o == nil || IsNil(o.Dojo) {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataDojo
		return ret
	}
	return *o.Dojo
}

// GetDojoOk returns a tuple with the Dojo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetDojoOk() (*SkyBlockProfileMemberNetherIslandPlayerDataDojo, bool) {
	if o == nil || IsNil(o.Dojo) {
		return nil, false
	}
	return o.Dojo, true
}

// HasDojo returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasDojo() bool {
	if o != nil && !IsNil(o.Dojo) {
		return true
	}

	return false
}

// SetDojo gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerDataDojo and assigns it to the Dojo field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetDojo(v SkyBlockProfileMemberNetherIslandPlayerDataDojo) {
	o.Dojo = &v
}

// GetKuudraCompletedTiers returns the KuudraCompletedTiers field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetKuudraCompletedTiers() SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers {
	if o == nil || IsNil(o.KuudraCompletedTiers) {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers
		return ret
	}
	return *o.KuudraCompletedTiers
}

// GetKuudraCompletedTiersOk returns a tuple with the KuudraCompletedTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetKuudraCompletedTiersOk() (*SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers, bool) {
	if o == nil || IsNil(o.KuudraCompletedTiers) {
		return nil, false
	}
	return o.KuudraCompletedTiers, true
}

// HasKuudraCompletedTiers returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasKuudraCompletedTiers() bool {
	if o != nil && !IsNil(o.KuudraCompletedTiers) {
		return true
	}

	return false
}

// SetKuudraCompletedTiers gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers and assigns it to the KuudraCompletedTiers field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetKuudraCompletedTiers(v SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) {
	o.KuudraCompletedTiers = &v
}

// GetKuudraPartyFinder returns the KuudraPartyFinder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetKuudraPartyFinder() SkyBlockProfileMemberNetherIslandPlayerDataKuudraPartyFinder {
	if o == nil || IsNil(o.KuudraPartyFinder) {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataKuudraPartyFinder
		return ret
	}
	return *o.KuudraPartyFinder
}

// GetKuudraPartyFinderOk returns a tuple with the KuudraPartyFinder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetKuudraPartyFinderOk() (*SkyBlockProfileMemberNetherIslandPlayerDataKuudraPartyFinder, bool) {
	if o == nil || IsNil(o.KuudraPartyFinder) {
		return nil, false
	}
	return o.KuudraPartyFinder, true
}

// HasKuudraPartyFinder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasKuudraPartyFinder() bool {
	if o != nil && !IsNil(o.KuudraPartyFinder) {
		return true
	}

	return false
}

// SetKuudraPartyFinder gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerDataKuudraPartyFinder and assigns it to the KuudraPartyFinder field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetKuudraPartyFinder(v SkyBlockProfileMemberNetherIslandPlayerDataKuudraPartyFinder) {
	o.KuudraPartyFinder = &v
}

// GetLastMinibossesKilled returns the LastMinibossesKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetLastMinibossesKilled() []*string {
	if o == nil || IsNil(o.LastMinibossesKilled) {
		var ret []*string
		return ret
	}
	return o.LastMinibossesKilled
}

// GetLastMinibossesKilledOk returns a tuple with the LastMinibossesKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetLastMinibossesKilledOk() ([]*string, bool) {
	if o == nil || IsNil(o.LastMinibossesKilled) {
		return nil, false
	}
	return o.LastMinibossesKilled, true
}

// HasLastMinibossesKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasLastMinibossesKilled() bool {
	if o != nil && !IsNil(o.LastMinibossesKilled) {
		return true
	}

	return false
}

// SetLastMinibossesKilled gets a reference to the given []*string and assigns it to the LastMinibossesKilled field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetLastMinibossesKilled(v []*string) {
	o.LastMinibossesKilled = v
}

// GetMagesReputation returns the MagesReputation field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetMagesReputation() float64 {
	if o == nil || IsNil(o.MagesReputation) {
		var ret float64
		return ret
	}
	return *o.MagesReputation
}

// GetMagesReputationOk returns a tuple with the MagesReputation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetMagesReputationOk() (*float64, bool) {
	if o == nil || IsNil(o.MagesReputation) {
		return nil, false
	}
	return o.MagesReputation, true
}

// HasMagesReputation returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasMagesReputation() bool {
	if o != nil && !IsNil(o.MagesReputation) {
		return true
	}

	return false
}

// SetMagesReputation gets a reference to the given float64 and assigns it to the MagesReputation field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetMagesReputation(v float64) {
	o.MagesReputation = &v
}

// GetMatriarch returns the Matriarch field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetMatriarch() SkyBlockProfileMemberNetherIslandPlayerMatriarch {
	if o == nil || IsNil(o.Matriarch) {
		var ret SkyBlockProfileMemberNetherIslandPlayerMatriarch
		return ret
	}
	return *o.Matriarch
}

// GetMatriarchOk returns a tuple with the Matriarch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetMatriarchOk() (*SkyBlockProfileMemberNetherIslandPlayerMatriarch, bool) {
	if o == nil || IsNil(o.Matriarch) {
		return nil, false
	}
	return o.Matriarch, true
}

// HasMatriarch returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasMatriarch() bool {
	if o != nil && !IsNil(o.Matriarch) {
		return true
	}

	return false
}

// SetMatriarch gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerMatriarch and assigns it to the Matriarch field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetMatriarch(v SkyBlockProfileMemberNetherIslandPlayerMatriarch) {
	o.Matriarch = &v
}

// GetNpcPath returns the NpcPath field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetNpcPath() SkyBlockProfileMemberNetherIslandPlayerNpcPath {
	if o == nil || IsNil(o.NpcPath) {
		var ret SkyBlockProfileMemberNetherIslandPlayerNpcPath
		return ret
	}
	return *o.NpcPath
}

// GetNpcPathOk returns a tuple with the NpcPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetNpcPathOk() (*SkyBlockProfileMemberNetherIslandPlayerNpcPath, bool) {
	if o == nil || IsNil(o.NpcPath) {
		return nil, false
	}
	return o.NpcPath, true
}

// HasNpcPath returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasNpcPath() bool {
	if o != nil && !IsNil(o.NpcPath) {
		return true
	}

	return false
}

// SetNpcPath gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerNpcPath and assigns it to the NpcPath field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetNpcPath(v SkyBlockProfileMemberNetherIslandPlayerNpcPath) {
	o.NpcPath = &v
}

// GetQuests returns the Quests field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetQuests() SkyBlockProfileMemberNetherIslandPlayerQuests {
	if o == nil || IsNil(o.Quests) {
		var ret SkyBlockProfileMemberNetherIslandPlayerQuests
		return ret
	}
	return *o.Quests
}

// GetQuestsOk returns a tuple with the Quests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetQuestsOk() (*SkyBlockProfileMemberNetherIslandPlayerQuests, bool) {
	if o == nil || IsNil(o.Quests) {
		return nil, false
	}
	return o.Quests, true
}

// HasQuests returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasQuests() bool {
	if o != nil && !IsNil(o.Quests) {
		return true
	}

	return false
}

// SetQuests gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerQuests and assigns it to the Quests field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetQuests(v SkyBlockProfileMemberNetherIslandPlayerQuests) {
	o.Quests = &v
}

// GetSelectedFaction returns the SelectedFaction field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetSelectedFaction() SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction {
	if o == nil || IsNil(o.SelectedFaction) {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction
		return ret
	}
	return *o.SelectedFaction
}

// GetSelectedFactionOk returns a tuple with the SelectedFaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) GetSelectedFactionOk() (*SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction, bool) {
	if o == nil || IsNil(o.SelectedFaction) {
		return nil, false
	}
	return o.SelectedFaction, true
}

// HasSelectedFaction returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) HasSelectedFaction() bool {
	if o != nil && !IsNil(o.SelectedFaction) {
		return true
	}

	return false
}

// SetSelectedFaction gets a reference to the given SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction and assigns it to the SelectedFaction field.
func (o *SkyBlockProfileMemberNetherIslandPlayerData) SetSelectedFaction(v SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction) {
	o.SelectedFaction = &v
}

func (o SkyBlockProfileMemberNetherIslandPlayerData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberNetherIslandPlayerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["abiphone"] = o.Abiphone
	if !IsNil(o.BarbariansReputation) {
		toSerialize["barbarians_reputation"] = o.BarbariansReputation
	}
	if !IsNil(o.Dojo) {
		toSerialize["dojo"] = o.Dojo
	}
	if !IsNil(o.KuudraCompletedTiers) {
		toSerialize["kuudra_completed_tiers"] = o.KuudraCompletedTiers
	}
	if !IsNil(o.KuudraPartyFinder) {
		toSerialize["kuudra_party_finder"] = o.KuudraPartyFinder
	}
	if !IsNil(o.LastMinibossesKilled) {
		toSerialize["last_minibosses_killed"] = o.LastMinibossesKilled
	}
	if !IsNil(o.MagesReputation) {
		toSerialize["mages_reputation"] = o.MagesReputation
	}
	if !IsNil(o.Matriarch) {
		toSerialize["matriarch"] = o.Matriarch
	}
	if !IsNil(o.NpcPath) {
		toSerialize["npc_path"] = o.NpcPath
	}
	if !IsNil(o.Quests) {
		toSerialize["quests"] = o.Quests
	}
	if !IsNil(o.SelectedFaction) {
		toSerialize["selected_faction"] = o.SelectedFaction
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberNetherIslandPlayerData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"abiphone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberNetherIslandPlayerData := _SkyBlockProfileMemberNetherIslandPlayerData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberNetherIslandPlayerData)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberNetherIslandPlayerData(varSkyBlockProfileMemberNetherIslandPlayerData)

	return err
}

type NullableSkyBlockProfileMemberNetherIslandPlayerData struct {
	value *SkyBlockProfileMemberNetherIslandPlayerData
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerData) Get() *SkyBlockProfileMemberNetherIslandPlayerData {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerData) Set(val *SkyBlockProfileMemberNetherIslandPlayerData) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerData) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerData(val *SkyBlockProfileMemberNetherIslandPlayerData) *NullableSkyBlockProfileMemberNetherIslandPlayerData {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerData{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
