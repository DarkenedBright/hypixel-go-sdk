/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockGardenActiveCommissionsCommissionExtraReward type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockGardenActiveCommissionsCommissionExtraReward{}

// SkyBlockGardenActiveCommissionsCommissionExtraReward struct for SkyBlockGardenActiveCommissionsCommissionExtraReward
type SkyBlockGardenActiveCommissionsCommissionExtraReward struct {
	Amount  *int64                                                      `json:"amount,omitempty"`
	Blue    *int64                                                      `json:"blue,omitempty"`
	Candy   *SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy  `json:"candy,omitempty"`
	Enchant *string                                                     `json:"enchant,omitempty"`
	Green   *int64                                                      `json:"green,omitempty"`
	Item    *SkyBlockGardenActiveCommissionsCommissionExtraRewardItem   `json:"item,omitempty"`
	Level   *int64                                                      `json:"level,omitempty"`
	Powder  *SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder `json:"powder,omitempty"`
	Red     *int64                                                      `json:"red,omitempty"`
	Rune    *string                                                     `json:"rune,omitempty"`
}

// NewSkyBlockGardenActiveCommissionsCommissionExtraReward instantiates a new SkyBlockGardenActiveCommissionsCommissionExtraReward object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockGardenActiveCommissionsCommissionExtraReward() *SkyBlockGardenActiveCommissionsCommissionExtraReward {
	this := SkyBlockGardenActiveCommissionsCommissionExtraReward{}
	return &this
}

// NewSkyBlockGardenActiveCommissionsCommissionExtraRewardWithDefaults instantiates a new SkyBlockGardenActiveCommissionsCommissionExtraReward object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockGardenActiveCommissionsCommissionExtraRewardWithDefaults() *SkyBlockGardenActiveCommissionsCommissionExtraReward {
	this := SkyBlockGardenActiveCommissionsCommissionExtraReward{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetAmount(v int64) {
	o.Amount = &v
}

// GetBlue returns the Blue field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetBlue() int64 {
	if o == nil || IsNil(o.Blue) {
		var ret int64
		return ret
	}
	return *o.Blue
}

// GetBlueOk returns a tuple with the Blue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetBlueOk() (*int64, bool) {
	if o == nil || IsNil(o.Blue) {
		return nil, false
	}
	return o.Blue, true
}

// HasBlue returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasBlue() bool {
	if o != nil && !IsNil(o.Blue) {
		return true
	}

	return false
}

// SetBlue gets a reference to the given int64 and assigns it to the Blue field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetBlue(v int64) {
	o.Blue = &v
}

// GetCandy returns the Candy field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetCandy() SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy {
	if o == nil || IsNil(o.Candy) {
		var ret SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy
		return ret
	}
	return *o.Candy
}

// GetCandyOk returns a tuple with the Candy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetCandyOk() (*SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy, bool) {
	if o == nil || IsNil(o.Candy) {
		return nil, false
	}
	return o.Candy, true
}

// HasCandy returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasCandy() bool {
	if o != nil && !IsNil(o.Candy) {
		return true
	}

	return false
}

// SetCandy gets a reference to the given SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy and assigns it to the Candy field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetCandy(v SkyBlockGardenActiveCommissionsCommissionExtraRewardCandy) {
	o.Candy = &v
}

// GetEnchant returns the Enchant field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetEnchant() string {
	if o == nil || IsNil(o.Enchant) {
		var ret string
		return ret
	}
	return *o.Enchant
}

// GetEnchantOk returns a tuple with the Enchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetEnchantOk() (*string, bool) {
	if o == nil || IsNil(o.Enchant) {
		return nil, false
	}
	return o.Enchant, true
}

// HasEnchant returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasEnchant() bool {
	if o != nil && !IsNil(o.Enchant) {
		return true
	}

	return false
}

// SetEnchant gets a reference to the given string and assigns it to the Enchant field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetEnchant(v string) {
	o.Enchant = &v
}

// GetGreen returns the Green field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetGreen() int64 {
	if o == nil || IsNil(o.Green) {
		var ret int64
		return ret
	}
	return *o.Green
}

// GetGreenOk returns a tuple with the Green field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetGreenOk() (*int64, bool) {
	if o == nil || IsNil(o.Green) {
		return nil, false
	}
	return o.Green, true
}

// HasGreen returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasGreen() bool {
	if o != nil && !IsNil(o.Green) {
		return true
	}

	return false
}

// SetGreen gets a reference to the given int64 and assigns it to the Green field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetGreen(v int64) {
	o.Green = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetItem() SkyBlockGardenActiveCommissionsCommissionExtraRewardItem {
	if o == nil || IsNil(o.Item) {
		var ret SkyBlockGardenActiveCommissionsCommissionExtraRewardItem
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetItemOk() (*SkyBlockGardenActiveCommissionsCommissionExtraRewardItem, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given SkyBlockGardenActiveCommissionsCommissionExtraRewardItem and assigns it to the Item field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetItem(v SkyBlockGardenActiveCommissionsCommissionExtraRewardItem) {
	o.Item = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetLevel() int64 {
	if o == nil || IsNil(o.Level) {
		var ret int64
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetLevelOk() (*int64, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given int64 and assigns it to the Level field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetLevel(v int64) {
	o.Level = &v
}

// GetPowder returns the Powder field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetPowder() SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder {
	if o == nil || IsNil(o.Powder) {
		var ret SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder
		return ret
	}
	return *o.Powder
}

// GetPowderOk returns a tuple with the Powder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetPowderOk() (*SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder, bool) {
	if o == nil || IsNil(o.Powder) {
		return nil, false
	}
	return o.Powder, true
}

// HasPowder returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasPowder() bool {
	if o != nil && !IsNil(o.Powder) {
		return true
	}

	return false
}

// SetPowder gets a reference to the given SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder and assigns it to the Powder field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetPowder(v SkyBlockGardenActiveCommissionsCommissionExtraRewardPowder) {
	o.Powder = &v
}

// GetRed returns the Red field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetRed() int64 {
	if o == nil || IsNil(o.Red) {
		var ret int64
		return ret
	}
	return *o.Red
}

// GetRedOk returns a tuple with the Red field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetRedOk() (*int64, bool) {
	if o == nil || IsNil(o.Red) {
		return nil, false
	}
	return o.Red, true
}

// HasRed returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasRed() bool {
	if o != nil && !IsNil(o.Red) {
		return true
	}

	return false
}

// SetRed gets a reference to the given int64 and assigns it to the Red field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetRed(v int64) {
	o.Red = &v
}

// GetRune returns the Rune field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetRune() string {
	if o == nil || IsNil(o.Rune) {
		var ret string
		return ret
	}
	return *o.Rune
}

// GetRuneOk returns a tuple with the Rune field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) GetRuneOk() (*string, bool) {
	if o == nil || IsNil(o.Rune) {
		return nil, false
	}
	return o.Rune, true
}

// HasRune returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) HasRune() bool {
	if o != nil && !IsNil(o.Rune) {
		return true
	}

	return false
}

// SetRune gets a reference to the given string and assigns it to the Rune field.
func (o *SkyBlockGardenActiveCommissionsCommissionExtraReward) SetRune(v string) {
	o.Rune = &v
}

func (o SkyBlockGardenActiveCommissionsCommissionExtraReward) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockGardenActiveCommissionsCommissionExtraReward) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Blue) {
		toSerialize["blue"] = o.Blue
	}
	if !IsNil(o.Candy) {
		toSerialize["candy"] = o.Candy
	}
	if !IsNil(o.Enchant) {
		toSerialize["enchant"] = o.Enchant
	}
	if !IsNil(o.Green) {
		toSerialize["green"] = o.Green
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Powder) {
		toSerialize["powder"] = o.Powder
	}
	if !IsNil(o.Red) {
		toSerialize["red"] = o.Red
	}
	if !IsNil(o.Rune) {
		toSerialize["rune"] = o.Rune
	}
	return toSerialize, nil
}

type NullableSkyBlockGardenActiveCommissionsCommissionExtraReward struct {
	value *SkyBlockGardenActiveCommissionsCommissionExtraReward
	isSet bool
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraReward) Get() *SkyBlockGardenActiveCommissionsCommissionExtraReward {
	return v.value
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraReward) Set(val *SkyBlockGardenActiveCommissionsCommissionExtraReward) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraReward) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraReward) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenActiveCommissionsCommissionExtraReward(val *SkyBlockGardenActiveCommissionsCommissionExtraReward) *NullableSkyBlockGardenActiveCommissionsCommissionExtraReward {
	return &NullableSkyBlockGardenActiveCommissionsCommissionExtraReward{value: val, isSet: true}
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionExtraReward) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionExtraReward) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
