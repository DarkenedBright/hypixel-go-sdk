/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockMuseumMemberItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockMuseumMemberItem{}

// SkyBlockMuseumMemberItem struct for SkyBlockMuseumMemberItem
type SkyBlockMuseumMemberItem struct {
	Borrowing    *bool                                        `json:"borrowing,omitempty"`
	DonatedTime  int64                                        `json:"donated_time"`
	FeaturedSlot *SkyBlockMuseumMemberItemFeaturedSlot        `json:"featured_slot,omitempty"`
	Items        SkyBlockProfileMemberInventoryBase64GzipData `json:"items"`
}

type _SkyBlockMuseumMemberItem SkyBlockMuseumMemberItem

// NewSkyBlockMuseumMemberItem instantiates a new SkyBlockMuseumMemberItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockMuseumMemberItem(donatedTime int64, items SkyBlockProfileMemberInventoryBase64GzipData) *SkyBlockMuseumMemberItem {
	this := SkyBlockMuseumMemberItem{}
	this.DonatedTime = donatedTime
	this.Items = items
	return &this
}

// NewSkyBlockMuseumMemberItemWithDefaults instantiates a new SkyBlockMuseumMemberItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockMuseumMemberItemWithDefaults() *SkyBlockMuseumMemberItem {
	this := SkyBlockMuseumMemberItem{}
	return &this
}

// GetBorrowing returns the Borrowing field value if set, zero value otherwise.
func (o *SkyBlockMuseumMemberItem) GetBorrowing() bool {
	if o == nil || IsNil(o.Borrowing) {
		var ret bool
		return ret
	}
	return *o.Borrowing
}

// GetBorrowingOk returns a tuple with the Borrowing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMemberItem) GetBorrowingOk() (*bool, bool) {
	if o == nil || IsNil(o.Borrowing) {
		return nil, false
	}
	return o.Borrowing, true
}

// HasBorrowing returns a boolean if a field has been set.
func (o *SkyBlockMuseumMemberItem) HasBorrowing() bool {
	if o != nil && !IsNil(o.Borrowing) {
		return true
	}

	return false
}

// SetBorrowing gets a reference to the given bool and assigns it to the Borrowing field.
func (o *SkyBlockMuseumMemberItem) SetBorrowing(v bool) {
	o.Borrowing = &v
}

// GetDonatedTime returns the DonatedTime field value
func (o *SkyBlockMuseumMemberItem) GetDonatedTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DonatedTime
}

// GetDonatedTimeOk returns a tuple with the DonatedTime field value
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMemberItem) GetDonatedTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DonatedTime, true
}

// SetDonatedTime sets field value
func (o *SkyBlockMuseumMemberItem) SetDonatedTime(v int64) {
	o.DonatedTime = v
}

// GetFeaturedSlot returns the FeaturedSlot field value if set, zero value otherwise.
func (o *SkyBlockMuseumMemberItem) GetFeaturedSlot() SkyBlockMuseumMemberItemFeaturedSlot {
	if o == nil || IsNil(o.FeaturedSlot) {
		var ret SkyBlockMuseumMemberItemFeaturedSlot
		return ret
	}
	return *o.FeaturedSlot
}

// GetFeaturedSlotOk returns a tuple with the FeaturedSlot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMemberItem) GetFeaturedSlotOk() (*SkyBlockMuseumMemberItemFeaturedSlot, bool) {
	if o == nil || IsNil(o.FeaturedSlot) {
		return nil, false
	}
	return o.FeaturedSlot, true
}

// HasFeaturedSlot returns a boolean if a field has been set.
func (o *SkyBlockMuseumMemberItem) HasFeaturedSlot() bool {
	if o != nil && !IsNil(o.FeaturedSlot) {
		return true
	}

	return false
}

// SetFeaturedSlot gets a reference to the given SkyBlockMuseumMemberItemFeaturedSlot and assigns it to the FeaturedSlot field.
func (o *SkyBlockMuseumMemberItem) SetFeaturedSlot(v SkyBlockMuseumMemberItemFeaturedSlot) {
	o.FeaturedSlot = &v
}

// GetItems returns the Items field value
func (o *SkyBlockMuseumMemberItem) GetItems() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumMemberItem) GetItemsOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *SkyBlockMuseumMemberItem) SetItems(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.Items = v
}

func (o SkyBlockMuseumMemberItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockMuseumMemberItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Borrowing) {
		toSerialize["borrowing"] = o.Borrowing
	}
	toSerialize["donated_time"] = o.DonatedTime
	if !IsNil(o.FeaturedSlot) {
		toSerialize["featured_slot"] = o.FeaturedSlot
	}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

func (o *SkyBlockMuseumMemberItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"donated_time",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockMuseumMemberItem := _SkyBlockMuseumMemberItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockMuseumMemberItem)

	if err != nil {
		return err
	}

	*o = SkyBlockMuseumMemberItem(varSkyBlockMuseumMemberItem)

	return err
}

type NullableSkyBlockMuseumMemberItem struct {
	value *SkyBlockMuseumMemberItem
	isSet bool
}

func (v NullableSkyBlockMuseumMemberItem) Get() *SkyBlockMuseumMemberItem {
	return v.value
}

func (v *NullableSkyBlockMuseumMemberItem) Set(val *SkyBlockMuseumMemberItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockMuseumMemberItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockMuseumMemberItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockMuseumMemberItem(val *SkyBlockMuseumMemberItem) *NullableSkyBlockMuseumMemberItem {
	return &NullableSkyBlockMuseumMemberItem{value: val, isSet: true}
}

func (v NullableSkyBlockMuseumMemberItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockMuseumMemberItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
