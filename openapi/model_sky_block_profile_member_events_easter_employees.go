/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberEventsEasterEmployees type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberEventsEasterEmployees{}

// SkyBlockProfileMemberEventsEasterEmployees struct for SkyBlockProfileMemberEventsEasterEmployees
type SkyBlockProfileMemberEventsEasterEmployees struct {
	RabbitBro     *int64 `json:"rabbit_bro,omitempty"`
	RabbitCousin  *int64 `json:"rabbit_cousin,omitempty"`
	RabbitDog     *int64 `json:"rabbit_dog,omitempty"`
	RabbitFather  *int64 `json:"rabbit_father,omitempty"`
	RabbitGrandma *int64 `json:"rabbit_grandma,omitempty"`
	RabbitSis     *int64 `json:"rabbit_sis,omitempty"`
	RabbitUncle   *int64 `json:"rabbit_uncle,omitempty"`
}

// NewSkyBlockProfileMemberEventsEasterEmployees instantiates a new SkyBlockProfileMemberEventsEasterEmployees object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberEventsEasterEmployees() *SkyBlockProfileMemberEventsEasterEmployees {
	this := SkyBlockProfileMemberEventsEasterEmployees{}
	return &this
}

// NewSkyBlockProfileMemberEventsEasterEmployeesWithDefaults instantiates a new SkyBlockProfileMemberEventsEasterEmployees object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberEventsEasterEmployeesWithDefaults() *SkyBlockProfileMemberEventsEasterEmployees {
	this := SkyBlockProfileMemberEventsEasterEmployees{}
	return &this
}

// GetRabbitBro returns the RabbitBro field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitBro() int64 {
	if o == nil || IsNil(o.RabbitBro) {
		var ret int64
		return ret
	}
	return *o.RabbitBro
}

// GetRabbitBroOk returns a tuple with the RabbitBro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitBroOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitBro) {
		return nil, false
	}
	return o.RabbitBro, true
}

// HasRabbitBro returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitBro() bool {
	if o != nil && !IsNil(o.RabbitBro) {
		return true
	}

	return false
}

// SetRabbitBro gets a reference to the given int64 and assigns it to the RabbitBro field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitBro(v int64) {
	o.RabbitBro = &v
}

// GetRabbitCousin returns the RabbitCousin field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitCousin() int64 {
	if o == nil || IsNil(o.RabbitCousin) {
		var ret int64
		return ret
	}
	return *o.RabbitCousin
}

// GetRabbitCousinOk returns a tuple with the RabbitCousin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitCousinOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitCousin) {
		return nil, false
	}
	return o.RabbitCousin, true
}

// HasRabbitCousin returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitCousin() bool {
	if o != nil && !IsNil(o.RabbitCousin) {
		return true
	}

	return false
}

// SetRabbitCousin gets a reference to the given int64 and assigns it to the RabbitCousin field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitCousin(v int64) {
	o.RabbitCousin = &v
}

// GetRabbitDog returns the RabbitDog field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitDog() int64 {
	if o == nil || IsNil(o.RabbitDog) {
		var ret int64
		return ret
	}
	return *o.RabbitDog
}

// GetRabbitDogOk returns a tuple with the RabbitDog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitDogOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitDog) {
		return nil, false
	}
	return o.RabbitDog, true
}

// HasRabbitDog returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitDog() bool {
	if o != nil && !IsNil(o.RabbitDog) {
		return true
	}

	return false
}

// SetRabbitDog gets a reference to the given int64 and assigns it to the RabbitDog field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitDog(v int64) {
	o.RabbitDog = &v
}

// GetRabbitFather returns the RabbitFather field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitFather() int64 {
	if o == nil || IsNil(o.RabbitFather) {
		var ret int64
		return ret
	}
	return *o.RabbitFather
}

// GetRabbitFatherOk returns a tuple with the RabbitFather field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitFatherOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitFather) {
		return nil, false
	}
	return o.RabbitFather, true
}

// HasRabbitFather returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitFather() bool {
	if o != nil && !IsNil(o.RabbitFather) {
		return true
	}

	return false
}

// SetRabbitFather gets a reference to the given int64 and assigns it to the RabbitFather field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitFather(v int64) {
	o.RabbitFather = &v
}

// GetRabbitGrandma returns the RabbitGrandma field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitGrandma() int64 {
	if o == nil || IsNil(o.RabbitGrandma) {
		var ret int64
		return ret
	}
	return *o.RabbitGrandma
}

// GetRabbitGrandmaOk returns a tuple with the RabbitGrandma field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitGrandmaOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitGrandma) {
		return nil, false
	}
	return o.RabbitGrandma, true
}

// HasRabbitGrandma returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitGrandma() bool {
	if o != nil && !IsNil(o.RabbitGrandma) {
		return true
	}

	return false
}

// SetRabbitGrandma gets a reference to the given int64 and assigns it to the RabbitGrandma field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitGrandma(v int64) {
	o.RabbitGrandma = &v
}

// GetRabbitSis returns the RabbitSis field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitSis() int64 {
	if o == nil || IsNil(o.RabbitSis) {
		var ret int64
		return ret
	}
	return *o.RabbitSis
}

// GetRabbitSisOk returns a tuple with the RabbitSis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitSisOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitSis) {
		return nil, false
	}
	return o.RabbitSis, true
}

// HasRabbitSis returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitSis() bool {
	if o != nil && !IsNil(o.RabbitSis) {
		return true
	}

	return false
}

// SetRabbitSis gets a reference to the given int64 and assigns it to the RabbitSis field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitSis(v int64) {
	o.RabbitSis = &v
}

// GetRabbitUncle returns the RabbitUncle field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitUncle() int64 {
	if o == nil || IsNil(o.RabbitUncle) {
		var ret int64
		return ret
	}
	return *o.RabbitUncle
}

// GetRabbitUncleOk returns a tuple with the RabbitUncle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) GetRabbitUncleOk() (*int64, bool) {
	if o == nil || IsNil(o.RabbitUncle) {
		return nil, false
	}
	return o.RabbitUncle, true
}

// HasRabbitUncle returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberEventsEasterEmployees) HasRabbitUncle() bool {
	if o != nil && !IsNil(o.RabbitUncle) {
		return true
	}

	return false
}

// SetRabbitUncle gets a reference to the given int64 and assigns it to the RabbitUncle field.
func (o *SkyBlockProfileMemberEventsEasterEmployees) SetRabbitUncle(v int64) {
	o.RabbitUncle = &v
}

func (o SkyBlockProfileMemberEventsEasterEmployees) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberEventsEasterEmployees) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RabbitBro) {
		toSerialize["rabbit_bro"] = o.RabbitBro
	}
	if !IsNil(o.RabbitCousin) {
		toSerialize["rabbit_cousin"] = o.RabbitCousin
	}
	if !IsNil(o.RabbitDog) {
		toSerialize["rabbit_dog"] = o.RabbitDog
	}
	if !IsNil(o.RabbitFather) {
		toSerialize["rabbit_father"] = o.RabbitFather
	}
	if !IsNil(o.RabbitGrandma) {
		toSerialize["rabbit_grandma"] = o.RabbitGrandma
	}
	if !IsNil(o.RabbitSis) {
		toSerialize["rabbit_sis"] = o.RabbitSis
	}
	if !IsNil(o.RabbitUncle) {
		toSerialize["rabbit_uncle"] = o.RabbitUncle
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberEventsEasterEmployees struct {
	value *SkyBlockProfileMemberEventsEasterEmployees
	isSet bool
}

func (v NullableSkyBlockProfileMemberEventsEasterEmployees) Get() *SkyBlockProfileMemberEventsEasterEmployees {
	return v.value
}

func (v *NullableSkyBlockProfileMemberEventsEasterEmployees) Set(val *SkyBlockProfileMemberEventsEasterEmployees) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberEventsEasterEmployees) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberEventsEasterEmployees) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberEventsEasterEmployees(val *SkyBlockProfileMemberEventsEasterEmployees) *NullableSkyBlockProfileMemberEventsEasterEmployees {
	return &NullableSkyBlockProfileMemberEventsEasterEmployees{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberEventsEasterEmployees) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberEventsEasterEmployees) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
