/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone the model 'SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone'
type SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone string

// List of SkyBlockProfileMemberNetherIslandPlayerDataAbiphone_selected_ringtone
const (
	TARREGA SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone = "TARREGA"
)

// All allowed values of SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone enum
var AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtoneEnumValues = []SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone{
	"TARREGA",
}

func (v *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone(value)
	for _, existing := range AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtoneEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone", value)
}

// NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtoneFromValue returns a pointer to a valid SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtoneFromValue(v string) (*SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone, error) {
	ev := SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone: valid values are %v", v, AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtoneEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtoneEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberNetherIslandPlayerDataAbiphone_selected_ringtone value
func (v SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) Ptr() *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone {
	return &v
}

type NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone struct {
	value *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) Get() *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) Set(val *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone(val *SkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataAbiphoneSelectedRingtone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
