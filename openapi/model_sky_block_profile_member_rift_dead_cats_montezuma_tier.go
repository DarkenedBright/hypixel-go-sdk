/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberRiftDeadCatsMontezumaTier the model 'SkyBlockProfileMemberRiftDeadCatsMontezumaTier'
type SkyBlockProfileMemberRiftDeadCatsMontezumaTier string

// List of SkyBlockProfileMemberRiftDeadCatsMontezuma_tier
const (
	SKYBLOCKPROFILEMEMBERRIFTDEADCATSMONTEZUMATIER_EPIC SkyBlockProfileMemberRiftDeadCatsMontezumaTier = "EPIC"
	SKYBLOCKPROFILEMEMBERRIFTDEADCATSMONTEZUMATIER_RARE SkyBlockProfileMemberRiftDeadCatsMontezumaTier = "RARE"
)

// All allowed values of SkyBlockProfileMemberRiftDeadCatsMontezumaTier enum
var AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTierEnumValues = []SkyBlockProfileMemberRiftDeadCatsMontezumaTier{
	"EPIC",
	"RARE",
}

func (v *SkyBlockProfileMemberRiftDeadCatsMontezumaTier) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberRiftDeadCatsMontezumaTier(value)
	for _, existing := range AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTierEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberRiftDeadCatsMontezumaTier", value)
}

// NewSkyBlockProfileMemberRiftDeadCatsMontezumaTierFromValue returns a pointer to a valid SkyBlockProfileMemberRiftDeadCatsMontezumaTier
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberRiftDeadCatsMontezumaTierFromValue(v string) (*SkyBlockProfileMemberRiftDeadCatsMontezumaTier, error) {
	ev := SkyBlockProfileMemberRiftDeadCatsMontezumaTier(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberRiftDeadCatsMontezumaTier: valid values are %v", v, AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTierEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberRiftDeadCatsMontezumaTier) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTierEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberRiftDeadCatsMontezuma_tier value
func (v SkyBlockProfileMemberRiftDeadCatsMontezumaTier) Ptr() *SkyBlockProfileMemberRiftDeadCatsMontezumaTier {
	return &v
}

type NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier struct {
	value *SkyBlockProfileMemberRiftDeadCatsMontezumaTier
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier) Get() *SkyBlockProfileMemberRiftDeadCatsMontezumaTier {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier) Set(val *SkyBlockProfileMemberRiftDeadCatsMontezumaTier) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier(val *SkyBlockProfileMemberRiftDeadCatsMontezumaTier) *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier {
	return &NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
