/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockGardenActiveCommissionsCommissionBonusReward type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockGardenActiveCommissionsCommissionBonusReward{}

// SkyBlockGardenActiveCommissionsCommissionBonusReward struct for SkyBlockGardenActiveCommissionsCommissionBonusReward
type SkyBlockGardenActiveCommissionsCommissionBonusReward struct {
	ItemId SkyBlockGardenActiveCommissionsCommissionBonusRewardItemId `json:"item_id"`
}

type _SkyBlockGardenActiveCommissionsCommissionBonusReward SkyBlockGardenActiveCommissionsCommissionBonusReward

// NewSkyBlockGardenActiveCommissionsCommissionBonusReward instantiates a new SkyBlockGardenActiveCommissionsCommissionBonusReward object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockGardenActiveCommissionsCommissionBonusReward(itemId SkyBlockGardenActiveCommissionsCommissionBonusRewardItemId) *SkyBlockGardenActiveCommissionsCommissionBonusReward {
	this := SkyBlockGardenActiveCommissionsCommissionBonusReward{}
	this.ItemId = itemId
	return &this
}

// NewSkyBlockGardenActiveCommissionsCommissionBonusRewardWithDefaults instantiates a new SkyBlockGardenActiveCommissionsCommissionBonusReward object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockGardenActiveCommissionsCommissionBonusRewardWithDefaults() *SkyBlockGardenActiveCommissionsCommissionBonusReward {
	this := SkyBlockGardenActiveCommissionsCommissionBonusReward{}
	return &this
}

// GetItemId returns the ItemId field value
func (o *SkyBlockGardenActiveCommissionsCommissionBonusReward) GetItemId() SkyBlockGardenActiveCommissionsCommissionBonusRewardItemId {
	if o == nil {
		var ret SkyBlockGardenActiveCommissionsCommissionBonusRewardItemId
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommissionBonusReward) GetItemIdOk() (*SkyBlockGardenActiveCommissionsCommissionBonusRewardItemId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *SkyBlockGardenActiveCommissionsCommissionBonusReward) SetItemId(v SkyBlockGardenActiveCommissionsCommissionBonusRewardItemId) {
	o.ItemId = v
}

func (o SkyBlockGardenActiveCommissionsCommissionBonusReward) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockGardenActiveCommissionsCommissionBonusReward) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["item_id"] = o.ItemId
	return toSerialize, nil
}

func (o *SkyBlockGardenActiveCommissionsCommissionBonusReward) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"item_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockGardenActiveCommissionsCommissionBonusReward := _SkyBlockGardenActiveCommissionsCommissionBonusReward{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockGardenActiveCommissionsCommissionBonusReward)

	if err != nil {
		return err
	}

	*o = SkyBlockGardenActiveCommissionsCommissionBonusReward(varSkyBlockGardenActiveCommissionsCommissionBonusReward)

	return err
}

type NullableSkyBlockGardenActiveCommissionsCommissionBonusReward struct {
	value *SkyBlockGardenActiveCommissionsCommissionBonusReward
	isSet bool
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionBonusReward) Get() *SkyBlockGardenActiveCommissionsCommissionBonusReward {
	return v.value
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionBonusReward) Set(val *SkyBlockGardenActiveCommissionsCommissionBonusReward) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionBonusReward) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionBonusReward) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenActiveCommissionsCommissionBonusReward(val *SkyBlockGardenActiveCommissionsCommissionBonusReward) *NullableSkyBlockGardenActiveCommissionsCommissionBonusReward {
	return &NullableSkyBlockGardenActiveCommissionsCommissionBonusReward{value: val, isSet: true}
}

func (v NullableSkyBlockGardenActiveCommissionsCommissionBonusReward) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenActiveCommissionsCommissionBonusReward) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
