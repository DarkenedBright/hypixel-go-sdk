/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberWinterPlayerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberWinterPlayerData{}

// SkyBlockProfileMemberWinterPlayerData struct for SkyBlockProfileMemberWinterPlayerData
type SkyBlockProfileMemberWinterPlayerData struct {
	RefinedJyrreUses int64 `json:"refined_jyrre_uses"`
}

type _SkyBlockProfileMemberWinterPlayerData SkyBlockProfileMemberWinterPlayerData

// NewSkyBlockProfileMemberWinterPlayerData instantiates a new SkyBlockProfileMemberWinterPlayerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberWinterPlayerData(refinedJyrreUses int64) *SkyBlockProfileMemberWinterPlayerData {
	this := SkyBlockProfileMemberWinterPlayerData{}
	this.RefinedJyrreUses = refinedJyrreUses
	return &this
}

// NewSkyBlockProfileMemberWinterPlayerDataWithDefaults instantiates a new SkyBlockProfileMemberWinterPlayerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberWinterPlayerDataWithDefaults() *SkyBlockProfileMemberWinterPlayerData {
	this := SkyBlockProfileMemberWinterPlayerData{}
	return &this
}

// GetRefinedJyrreUses returns the RefinedJyrreUses field value
func (o *SkyBlockProfileMemberWinterPlayerData) GetRefinedJyrreUses() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RefinedJyrreUses
}

// GetRefinedJyrreUsesOk returns a tuple with the RefinedJyrreUses field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberWinterPlayerData) GetRefinedJyrreUsesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefinedJyrreUses, true
}

// SetRefinedJyrreUses sets field value
func (o *SkyBlockProfileMemberWinterPlayerData) SetRefinedJyrreUses(v int64) {
	o.RefinedJyrreUses = v
}

func (o SkyBlockProfileMemberWinterPlayerData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberWinterPlayerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["refined_jyrre_uses"] = o.RefinedJyrreUses
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberWinterPlayerData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"refined_jyrre_uses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberWinterPlayerData := _SkyBlockProfileMemberWinterPlayerData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberWinterPlayerData)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberWinterPlayerData(varSkyBlockProfileMemberWinterPlayerData)

	return err
}

type NullableSkyBlockProfileMemberWinterPlayerData struct {
	value *SkyBlockProfileMemberWinterPlayerData
	isSet bool
}

func (v NullableSkyBlockProfileMemberWinterPlayerData) Get() *SkyBlockProfileMemberWinterPlayerData {
	return v.value
}

func (v *NullableSkyBlockProfileMemberWinterPlayerData) Set(val *SkyBlockProfileMemberWinterPlayerData) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberWinterPlayerData) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberWinterPlayerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberWinterPlayerData(val *SkyBlockProfileMemberWinterPlayerData) *NullableSkyBlockProfileMemberWinterPlayerData {
	return &NullableSkyBlockProfileMemberWinterPlayerData{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberWinterPlayerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberWinterPlayerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
