/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberObjectivesExploreNetherIsland type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberObjectivesExploreNetherIsland{}

// SkyBlockProfileMemberObjectivesExploreNetherIsland struct for SkyBlockProfileMemberObjectivesExploreNetherIsland
type SkyBlockProfileMemberObjectivesExploreNetherIsland struct {
	CompletedAt int64                                                      `json:"completed_at"`
	Faction     SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction `json:"faction"`
	Progress    int64                                                      `json:"progress"`
	Status      *SkyBlockProfileMemberObjectivesCatchLaseasFishStatus      `json:"status,omitempty"`
}

type _SkyBlockProfileMemberObjectivesExploreNetherIsland SkyBlockProfileMemberObjectivesExploreNetherIsland

// NewSkyBlockProfileMemberObjectivesExploreNetherIsland instantiates a new SkyBlockProfileMemberObjectivesExploreNetherIsland object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberObjectivesExploreNetherIsland(completedAt int64, faction SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction, progress int64) *SkyBlockProfileMemberObjectivesExploreNetherIsland {
	this := SkyBlockProfileMemberObjectivesExploreNetherIsland{}
	this.CompletedAt = completedAt
	this.Faction = faction
	this.Progress = progress
	return &this
}

// NewSkyBlockProfileMemberObjectivesExploreNetherIslandWithDefaults instantiates a new SkyBlockProfileMemberObjectivesExploreNetherIsland object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberObjectivesExploreNetherIslandWithDefaults() *SkyBlockProfileMemberObjectivesExploreNetherIsland {
	this := SkyBlockProfileMemberObjectivesExploreNetherIsland{}
	return &this
}

// GetCompletedAt returns the CompletedAt field value
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetCompletedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetCompletedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletedAt, true
}

// SetCompletedAt sets field value
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) SetCompletedAt(v int64) {
	o.CompletedAt = v
}

// GetFaction returns the Faction field value
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetFaction() SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction {
	if o == nil {
		var ret SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction
		return ret
	}

	return o.Faction
}

// GetFactionOk returns a tuple with the Faction field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetFactionOk() (*SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Faction, true
}

// SetFaction sets field value
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) SetFaction(v SkyBlockProfileMemberNetherIslandPlayerDataSelectedFaction) {
	o.Faction = v
}

// GetProgress returns the Progress field value
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetProgress() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetProgressOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) SetProgress(v int64) {
	o.Progress = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetStatus() SkyBlockProfileMemberObjectivesCatchLaseasFishStatus {
	if o == nil || IsNil(o.Status) {
		var ret SkyBlockProfileMemberObjectivesCatchLaseasFishStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) GetStatusOk() (*SkyBlockProfileMemberObjectivesCatchLaseasFishStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SkyBlockProfileMemberObjectivesCatchLaseasFishStatus and assigns it to the Status field.
func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) SetStatus(v SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) {
	o.Status = &v
}

func (o SkyBlockProfileMemberObjectivesExploreNetherIsland) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberObjectivesExploreNetherIsland) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["completed_at"] = o.CompletedAt
	toSerialize["faction"] = o.Faction
	toSerialize["progress"] = o.Progress
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberObjectivesExploreNetherIsland) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"completed_at",
		"faction",
		"progress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberObjectivesExploreNetherIsland := _SkyBlockProfileMemberObjectivesExploreNetherIsland{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberObjectivesExploreNetherIsland)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberObjectivesExploreNetherIsland(varSkyBlockProfileMemberObjectivesExploreNetherIsland)

	return err
}

type NullableSkyBlockProfileMemberObjectivesExploreNetherIsland struct {
	value *SkyBlockProfileMemberObjectivesExploreNetherIsland
	isSet bool
}

func (v NullableSkyBlockProfileMemberObjectivesExploreNetherIsland) Get() *SkyBlockProfileMemberObjectivesExploreNetherIsland {
	return v.value
}

func (v *NullableSkyBlockProfileMemberObjectivesExploreNetherIsland) Set(val *SkyBlockProfileMemberObjectivesExploreNetherIsland) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberObjectivesExploreNetherIsland) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberObjectivesExploreNetherIsland) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberObjectivesExploreNetherIsland(val *SkyBlockProfileMemberObjectivesExploreNetherIsland) *NullableSkyBlockProfileMemberObjectivesExploreNetherIsland {
	return &NullableSkyBlockProfileMemberObjectivesExploreNetherIsland{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberObjectivesExploreNetherIsland) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberObjectivesExploreNetherIsland) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
