/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockAuctionsEnded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockAuctionsEnded{}

// SkyBlockAuctionsEnded struct for SkyBlockAuctionsEnded
type SkyBlockAuctionsEnded struct {
	Auctions    []SkyBlockAuctionsEndedAuction `json:"auctions"`
	LastUpdated int64                          `json:"lastUpdated"`
	Success     bool                           `json:"success"`
}

type _SkyBlockAuctionsEnded SkyBlockAuctionsEnded

// NewSkyBlockAuctionsEnded instantiates a new SkyBlockAuctionsEnded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockAuctionsEnded(auctions []SkyBlockAuctionsEndedAuction, lastUpdated int64, success bool) *SkyBlockAuctionsEnded {
	this := SkyBlockAuctionsEnded{}
	this.Auctions = auctions
	this.LastUpdated = lastUpdated
	this.Success = success
	return &this
}

// NewSkyBlockAuctionsEndedWithDefaults instantiates a new SkyBlockAuctionsEnded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockAuctionsEndedWithDefaults() *SkyBlockAuctionsEnded {
	this := SkyBlockAuctionsEnded{}
	return &this
}

// GetAuctions returns the Auctions field value
func (o *SkyBlockAuctionsEnded) GetAuctions() []SkyBlockAuctionsEndedAuction {
	if o == nil {
		var ret []SkyBlockAuctionsEndedAuction
		return ret
	}

	return o.Auctions
}

// GetAuctionsOk returns a tuple with the Auctions field value
// and a boolean to check if the value has been set.
func (o *SkyBlockAuctionsEnded) GetAuctionsOk() ([]SkyBlockAuctionsEndedAuction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Auctions, true
}

// SetAuctions sets field value
func (o *SkyBlockAuctionsEnded) SetAuctions(v []SkyBlockAuctionsEndedAuction) {
	o.Auctions = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *SkyBlockAuctionsEnded) GetLastUpdated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *SkyBlockAuctionsEnded) GetLastUpdatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *SkyBlockAuctionsEnded) SetLastUpdated(v int64) {
	o.LastUpdated = v
}

// GetSuccess returns the Success field value
func (o *SkyBlockAuctionsEnded) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *SkyBlockAuctionsEnded) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *SkyBlockAuctionsEnded) SetSuccess(v bool) {
	o.Success = v
}

func (o SkyBlockAuctionsEnded) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockAuctionsEnded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auctions"] = o.Auctions
	toSerialize["lastUpdated"] = o.LastUpdated
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

func (o *SkyBlockAuctionsEnded) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auctions",
		"lastUpdated",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockAuctionsEnded := _SkyBlockAuctionsEnded{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockAuctionsEnded)

	if err != nil {
		return err
	}

	*o = SkyBlockAuctionsEnded(varSkyBlockAuctionsEnded)

	return err
}

type NullableSkyBlockAuctionsEnded struct {
	value *SkyBlockAuctionsEnded
	isSet bool
}

func (v NullableSkyBlockAuctionsEnded) Get() *SkyBlockAuctionsEnded {
	return v.value
}

func (v *NullableSkyBlockAuctionsEnded) Set(val *SkyBlockAuctionsEnded) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockAuctionsEnded) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockAuctionsEnded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockAuctionsEnded(val *SkyBlockAuctionsEnded) *NullableSkyBlockAuctionsEnded {
	return &NullableSkyBlockAuctionsEnded{value: val, isSet: true}
}

func (v NullableSkyBlockAuctionsEnded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockAuctionsEnded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
