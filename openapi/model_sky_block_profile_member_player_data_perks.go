/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberPlayerDataPerks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerDataPerks{}

// SkyBlockProfileMemberPlayerDataPerks struct for SkyBlockProfileMemberPlayerDataPerks
type SkyBlockProfileMemberPlayerDataPerks struct {
	Bane                  *int64 `json:"bane,omitempty"`
	BlessingOfTime        *int64 `json:"blessing_of_time,omitempty"`
	CatacombsBossLuck     *int64 `json:"catacombs_boss_luck,omitempty"`
	CatacombsCritDamage   *int64 `json:"catacombs_crit_damage,omitempty"`
	CatacombsDefense      *int64 `json:"catacombs_defense,omitempty"`
	CatacombsHealth       *int64 `json:"catacombs_health,omitempty"`
	CatacombsIntelligence *int64 `json:"catacombs_intelligence,omitempty"`
	CatacombsLooting      *int64 `json:"catacombs_looting,omitempty"`
	CatacombsStrength     *int64 `json:"catacombs_strength,omitempty"`
	ColdEfficiency        *int64 `json:"cold_efficiency,omitempty"`
	CombatWisdomInEnd     *int64 `json:"combat_wisdom_in_end,omitempty"`
	CooledForges          *int64 `json:"cooled_forges,omitempty"`
	CrimsonTraining       *int64 `json:"crimson_training,omitempty"`
	DiamondInTheRough     *int64 `json:"diamond_in_the_rough,omitempty"`
	DragonReforgesBuff    *int64 `json:"dragon_reforges_buff,omitempty"`
	DrakePiper            *int64 `json:"drake_piper,omitempty"`
	DwarvenTraining       *int64 `json:"dwarven_training,omitempty"`
	EagerMiner            *int64 `json:"eager_miner,omitempty"`
	EdragCd               *int64 `json:"edrag_cd,omitempty"`
	EmpoweredAgility      *int64 `json:"empowered_agility,omitempty"`
	FeroVsDragons         *int64 `json:"fero_vs_dragons,omitempty"`
	FlatDamageVsEnder     *int64 `json:"flat_damage_vs_ender,omitempty"`
	ForbiddenBlessing     *int64 `json:"forbidden_blessing,omitempty"`
	FreshToolsKuudra      *int64 `json:"fresh_tools_kuudra,omitempty"`
	FrozenSkin            *int64 `json:"frozen_skin,omitempty"`
	FungusFortuna         *int64 `json:"fungus_fortuna,omitempty"`
	HarenaFortuna         *int64 `json:"harena_fortuna,omitempty"`
	HeadstartKuudra       *int64 `json:"headstart_kuudra,omitempty"`
	HeartOfGold           *int64 `json:"heart_of_gold,omitempty"`
	HighRoller            *int64 `json:"high_roller,omitempty"`
	IncZealotsOdds        *int64 `json:"inc_zealots_odds,omitempty"`
	IncreasedSupChances   *int64 `json:"increased_sup_chances,omitempty"`
	ManaAfterEnderKill    *int64 `json:"mana_after_ender_kill,omitempty"`
	MasterKuudra          *int64 `json:"master_kuudra,omitempty"`
	MidasLure             *int64 `json:"midas_lure,omitempty"`
	PermanentDefense      *int64 `json:"permanent_defense,omitempty"`
	PermanentHealth       *int64 `json:"permanent_health,omitempty"`
	PermanentIntelligence *int64 `json:"permanent_intelligence,omitempty"`
	PermanentSpeed        *int64 `json:"permanent_speed,omitempty"`
	PermanentStrength     *int64 `json:"permanent_strength,omitempty"`
	RadiantFisher         *int64 `json:"radiant_fisher,omitempty"`
	ReturnToSender        *int64 `json:"return_to_sender,omitempty"`
	ReviveStone           *int64 `json:"revive_stone,omitempty"`
	RhinestoneInfusion    *int64 `json:"rhinestone_infusion,omitempty"`
	SeasonOfJoy           *int64 `json:"season_of_joy,omitempty"`
	SpiderTraining        *int64 `json:"spider_training,omitempty"`
	StrongarmKuudra       *int64 `json:"strongarm_kuudra,omitempty"`
	Toxophilite           *int64 `json:"toxophilite,omitempty"`
	TreasuresOfTheEarth   *int64 `json:"treasures_of_the_earth,omitempty"`
	Unbreaking            *int64 `json:"unbreaking,omitempty"`
	UnbridledRage         *int64 `json:"unbridled_rage,omitempty"`
	UnderPressure         *int64 `json:"under_pressure,omitempty"`
	VerminControl         *int64 `json:"vermin_control,omitempty"`
	WitherPiper           *int64 `json:"wither_piper,omitempty"`
}

// NewSkyBlockProfileMemberPlayerDataPerks instantiates a new SkyBlockProfileMemberPlayerDataPerks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerDataPerks() *SkyBlockProfileMemberPlayerDataPerks {
	this := SkyBlockProfileMemberPlayerDataPerks{}
	return &this
}

// NewSkyBlockProfileMemberPlayerDataPerksWithDefaults instantiates a new SkyBlockProfileMemberPlayerDataPerks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerDataPerksWithDefaults() *SkyBlockProfileMemberPlayerDataPerks {
	this := SkyBlockProfileMemberPlayerDataPerks{}
	return &this
}

// GetBane returns the Bane field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetBane() int64 {
	if o == nil || IsNil(o.Bane) {
		var ret int64
		return ret
	}
	return *o.Bane
}

// GetBaneOk returns a tuple with the Bane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetBaneOk() (*int64, bool) {
	if o == nil || IsNil(o.Bane) {
		return nil, false
	}
	return o.Bane, true
}

// HasBane returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasBane() bool {
	if o != nil && !IsNil(o.Bane) {
		return true
	}

	return false
}

// SetBane gets a reference to the given int64 and assigns it to the Bane field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetBane(v int64) {
	o.Bane = &v
}

// GetBlessingOfTime returns the BlessingOfTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetBlessingOfTime() int64 {
	if o == nil || IsNil(o.BlessingOfTime) {
		var ret int64
		return ret
	}
	return *o.BlessingOfTime
}

// GetBlessingOfTimeOk returns a tuple with the BlessingOfTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetBlessingOfTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.BlessingOfTime) {
		return nil, false
	}
	return o.BlessingOfTime, true
}

// HasBlessingOfTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasBlessingOfTime() bool {
	if o != nil && !IsNil(o.BlessingOfTime) {
		return true
	}

	return false
}

// SetBlessingOfTime gets a reference to the given int64 and assigns it to the BlessingOfTime field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetBlessingOfTime(v int64) {
	o.BlessingOfTime = &v
}

// GetCatacombsBossLuck returns the CatacombsBossLuck field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsBossLuck() int64 {
	if o == nil || IsNil(o.CatacombsBossLuck) {
		var ret int64
		return ret
	}
	return *o.CatacombsBossLuck
}

// GetCatacombsBossLuckOk returns a tuple with the CatacombsBossLuck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsBossLuckOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsBossLuck) {
		return nil, false
	}
	return o.CatacombsBossLuck, true
}

// HasCatacombsBossLuck returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsBossLuck() bool {
	if o != nil && !IsNil(o.CatacombsBossLuck) {
		return true
	}

	return false
}

// SetCatacombsBossLuck gets a reference to the given int64 and assigns it to the CatacombsBossLuck field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsBossLuck(v int64) {
	o.CatacombsBossLuck = &v
}

// GetCatacombsCritDamage returns the CatacombsCritDamage field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsCritDamage() int64 {
	if o == nil || IsNil(o.CatacombsCritDamage) {
		var ret int64
		return ret
	}
	return *o.CatacombsCritDamage
}

// GetCatacombsCritDamageOk returns a tuple with the CatacombsCritDamage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsCritDamageOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsCritDamage) {
		return nil, false
	}
	return o.CatacombsCritDamage, true
}

// HasCatacombsCritDamage returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsCritDamage() bool {
	if o != nil && !IsNil(o.CatacombsCritDamage) {
		return true
	}

	return false
}

// SetCatacombsCritDamage gets a reference to the given int64 and assigns it to the CatacombsCritDamage field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsCritDamage(v int64) {
	o.CatacombsCritDamage = &v
}

// GetCatacombsDefense returns the CatacombsDefense field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsDefense() int64 {
	if o == nil || IsNil(o.CatacombsDefense) {
		var ret int64
		return ret
	}
	return *o.CatacombsDefense
}

// GetCatacombsDefenseOk returns a tuple with the CatacombsDefense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsDefenseOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsDefense) {
		return nil, false
	}
	return o.CatacombsDefense, true
}

// HasCatacombsDefense returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsDefense() bool {
	if o != nil && !IsNil(o.CatacombsDefense) {
		return true
	}

	return false
}

// SetCatacombsDefense gets a reference to the given int64 and assigns it to the CatacombsDefense field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsDefense(v int64) {
	o.CatacombsDefense = &v
}

// GetCatacombsHealth returns the CatacombsHealth field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsHealth() int64 {
	if o == nil || IsNil(o.CatacombsHealth) {
		var ret int64
		return ret
	}
	return *o.CatacombsHealth
}

// GetCatacombsHealthOk returns a tuple with the CatacombsHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsHealthOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsHealth) {
		return nil, false
	}
	return o.CatacombsHealth, true
}

// HasCatacombsHealth returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsHealth() bool {
	if o != nil && !IsNil(o.CatacombsHealth) {
		return true
	}

	return false
}

// SetCatacombsHealth gets a reference to the given int64 and assigns it to the CatacombsHealth field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsHealth(v int64) {
	o.CatacombsHealth = &v
}

// GetCatacombsIntelligence returns the CatacombsIntelligence field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsIntelligence() int64 {
	if o == nil || IsNil(o.CatacombsIntelligence) {
		var ret int64
		return ret
	}
	return *o.CatacombsIntelligence
}

// GetCatacombsIntelligenceOk returns a tuple with the CatacombsIntelligence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsIntelligenceOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsIntelligence) {
		return nil, false
	}
	return o.CatacombsIntelligence, true
}

// HasCatacombsIntelligence returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsIntelligence() bool {
	if o != nil && !IsNil(o.CatacombsIntelligence) {
		return true
	}

	return false
}

// SetCatacombsIntelligence gets a reference to the given int64 and assigns it to the CatacombsIntelligence field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsIntelligence(v int64) {
	o.CatacombsIntelligence = &v
}

// GetCatacombsLooting returns the CatacombsLooting field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsLooting() int64 {
	if o == nil || IsNil(o.CatacombsLooting) {
		var ret int64
		return ret
	}
	return *o.CatacombsLooting
}

// GetCatacombsLootingOk returns a tuple with the CatacombsLooting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsLootingOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsLooting) {
		return nil, false
	}
	return o.CatacombsLooting, true
}

// HasCatacombsLooting returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsLooting() bool {
	if o != nil && !IsNil(o.CatacombsLooting) {
		return true
	}

	return false
}

// SetCatacombsLooting gets a reference to the given int64 and assigns it to the CatacombsLooting field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsLooting(v int64) {
	o.CatacombsLooting = &v
}

// GetCatacombsStrength returns the CatacombsStrength field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsStrength() int64 {
	if o == nil || IsNil(o.CatacombsStrength) {
		var ret int64
		return ret
	}
	return *o.CatacombsStrength
}

// GetCatacombsStrengthOk returns a tuple with the CatacombsStrength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCatacombsStrengthOk() (*int64, bool) {
	if o == nil || IsNil(o.CatacombsStrength) {
		return nil, false
	}
	return o.CatacombsStrength, true
}

// HasCatacombsStrength returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCatacombsStrength() bool {
	if o != nil && !IsNil(o.CatacombsStrength) {
		return true
	}

	return false
}

// SetCatacombsStrength gets a reference to the given int64 and assigns it to the CatacombsStrength field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCatacombsStrength(v int64) {
	o.CatacombsStrength = &v
}

// GetColdEfficiency returns the ColdEfficiency field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetColdEfficiency() int64 {
	if o == nil || IsNil(o.ColdEfficiency) {
		var ret int64
		return ret
	}
	return *o.ColdEfficiency
}

// GetColdEfficiencyOk returns a tuple with the ColdEfficiency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetColdEfficiencyOk() (*int64, bool) {
	if o == nil || IsNil(o.ColdEfficiency) {
		return nil, false
	}
	return o.ColdEfficiency, true
}

// HasColdEfficiency returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasColdEfficiency() bool {
	if o != nil && !IsNil(o.ColdEfficiency) {
		return true
	}

	return false
}

// SetColdEfficiency gets a reference to the given int64 and assigns it to the ColdEfficiency field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetColdEfficiency(v int64) {
	o.ColdEfficiency = &v
}

// GetCombatWisdomInEnd returns the CombatWisdomInEnd field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCombatWisdomInEnd() int64 {
	if o == nil || IsNil(o.CombatWisdomInEnd) {
		var ret int64
		return ret
	}
	return *o.CombatWisdomInEnd
}

// GetCombatWisdomInEndOk returns a tuple with the CombatWisdomInEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCombatWisdomInEndOk() (*int64, bool) {
	if o == nil || IsNil(o.CombatWisdomInEnd) {
		return nil, false
	}
	return o.CombatWisdomInEnd, true
}

// HasCombatWisdomInEnd returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCombatWisdomInEnd() bool {
	if o != nil && !IsNil(o.CombatWisdomInEnd) {
		return true
	}

	return false
}

// SetCombatWisdomInEnd gets a reference to the given int64 and assigns it to the CombatWisdomInEnd field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCombatWisdomInEnd(v int64) {
	o.CombatWisdomInEnd = &v
}

// GetCooledForges returns the CooledForges field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCooledForges() int64 {
	if o == nil || IsNil(o.CooledForges) {
		var ret int64
		return ret
	}
	return *o.CooledForges
}

// GetCooledForgesOk returns a tuple with the CooledForges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCooledForgesOk() (*int64, bool) {
	if o == nil || IsNil(o.CooledForges) {
		return nil, false
	}
	return o.CooledForges, true
}

// HasCooledForges returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCooledForges() bool {
	if o != nil && !IsNil(o.CooledForges) {
		return true
	}

	return false
}

// SetCooledForges gets a reference to the given int64 and assigns it to the CooledForges field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCooledForges(v int64) {
	o.CooledForges = &v
}

// GetCrimsonTraining returns the CrimsonTraining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCrimsonTraining() int64 {
	if o == nil || IsNil(o.CrimsonTraining) {
		var ret int64
		return ret
	}
	return *o.CrimsonTraining
}

// GetCrimsonTrainingOk returns a tuple with the CrimsonTraining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetCrimsonTrainingOk() (*int64, bool) {
	if o == nil || IsNil(o.CrimsonTraining) {
		return nil, false
	}
	return o.CrimsonTraining, true
}

// HasCrimsonTraining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasCrimsonTraining() bool {
	if o != nil && !IsNil(o.CrimsonTraining) {
		return true
	}

	return false
}

// SetCrimsonTraining gets a reference to the given int64 and assigns it to the CrimsonTraining field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetCrimsonTraining(v int64) {
	o.CrimsonTraining = &v
}

// GetDiamondInTheRough returns the DiamondInTheRough field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDiamondInTheRough() int64 {
	if o == nil || IsNil(o.DiamondInTheRough) {
		var ret int64
		return ret
	}
	return *o.DiamondInTheRough
}

// GetDiamondInTheRoughOk returns a tuple with the DiamondInTheRough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDiamondInTheRoughOk() (*int64, bool) {
	if o == nil || IsNil(o.DiamondInTheRough) {
		return nil, false
	}
	return o.DiamondInTheRough, true
}

// HasDiamondInTheRough returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasDiamondInTheRough() bool {
	if o != nil && !IsNil(o.DiamondInTheRough) {
		return true
	}

	return false
}

// SetDiamondInTheRough gets a reference to the given int64 and assigns it to the DiamondInTheRough field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetDiamondInTheRough(v int64) {
	o.DiamondInTheRough = &v
}

// GetDragonReforgesBuff returns the DragonReforgesBuff field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDragonReforgesBuff() int64 {
	if o == nil || IsNil(o.DragonReforgesBuff) {
		var ret int64
		return ret
	}
	return *o.DragonReforgesBuff
}

// GetDragonReforgesBuffOk returns a tuple with the DragonReforgesBuff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDragonReforgesBuffOk() (*int64, bool) {
	if o == nil || IsNil(o.DragonReforgesBuff) {
		return nil, false
	}
	return o.DragonReforgesBuff, true
}

// HasDragonReforgesBuff returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasDragonReforgesBuff() bool {
	if o != nil && !IsNil(o.DragonReforgesBuff) {
		return true
	}

	return false
}

// SetDragonReforgesBuff gets a reference to the given int64 and assigns it to the DragonReforgesBuff field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetDragonReforgesBuff(v int64) {
	o.DragonReforgesBuff = &v
}

// GetDrakePiper returns the DrakePiper field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDrakePiper() int64 {
	if o == nil || IsNil(o.DrakePiper) {
		var ret int64
		return ret
	}
	return *o.DrakePiper
}

// GetDrakePiperOk returns a tuple with the DrakePiper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDrakePiperOk() (*int64, bool) {
	if o == nil || IsNil(o.DrakePiper) {
		return nil, false
	}
	return o.DrakePiper, true
}

// HasDrakePiper returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasDrakePiper() bool {
	if o != nil && !IsNil(o.DrakePiper) {
		return true
	}

	return false
}

// SetDrakePiper gets a reference to the given int64 and assigns it to the DrakePiper field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetDrakePiper(v int64) {
	o.DrakePiper = &v
}

// GetDwarvenTraining returns the DwarvenTraining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDwarvenTraining() int64 {
	if o == nil || IsNil(o.DwarvenTraining) {
		var ret int64
		return ret
	}
	return *o.DwarvenTraining
}

// GetDwarvenTrainingOk returns a tuple with the DwarvenTraining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetDwarvenTrainingOk() (*int64, bool) {
	if o == nil || IsNil(o.DwarvenTraining) {
		return nil, false
	}
	return o.DwarvenTraining, true
}

// HasDwarvenTraining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasDwarvenTraining() bool {
	if o != nil && !IsNil(o.DwarvenTraining) {
		return true
	}

	return false
}

// SetDwarvenTraining gets a reference to the given int64 and assigns it to the DwarvenTraining field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetDwarvenTraining(v int64) {
	o.DwarvenTraining = &v
}

// GetEagerMiner returns the EagerMiner field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetEagerMiner() int64 {
	if o == nil || IsNil(o.EagerMiner) {
		var ret int64
		return ret
	}
	return *o.EagerMiner
}

// GetEagerMinerOk returns a tuple with the EagerMiner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetEagerMinerOk() (*int64, bool) {
	if o == nil || IsNil(o.EagerMiner) {
		return nil, false
	}
	return o.EagerMiner, true
}

// HasEagerMiner returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasEagerMiner() bool {
	if o != nil && !IsNil(o.EagerMiner) {
		return true
	}

	return false
}

// SetEagerMiner gets a reference to the given int64 and assigns it to the EagerMiner field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetEagerMiner(v int64) {
	o.EagerMiner = &v
}

// GetEdragCd returns the EdragCd field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetEdragCd() int64 {
	if o == nil || IsNil(o.EdragCd) {
		var ret int64
		return ret
	}
	return *o.EdragCd
}

// GetEdragCdOk returns a tuple with the EdragCd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetEdragCdOk() (*int64, bool) {
	if o == nil || IsNil(o.EdragCd) {
		return nil, false
	}
	return o.EdragCd, true
}

// HasEdragCd returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasEdragCd() bool {
	if o != nil && !IsNil(o.EdragCd) {
		return true
	}

	return false
}

// SetEdragCd gets a reference to the given int64 and assigns it to the EdragCd field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetEdragCd(v int64) {
	o.EdragCd = &v
}

// GetEmpoweredAgility returns the EmpoweredAgility field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetEmpoweredAgility() int64 {
	if o == nil || IsNil(o.EmpoweredAgility) {
		var ret int64
		return ret
	}
	return *o.EmpoweredAgility
}

// GetEmpoweredAgilityOk returns a tuple with the EmpoweredAgility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetEmpoweredAgilityOk() (*int64, bool) {
	if o == nil || IsNil(o.EmpoweredAgility) {
		return nil, false
	}
	return o.EmpoweredAgility, true
}

// HasEmpoweredAgility returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasEmpoweredAgility() bool {
	if o != nil && !IsNil(o.EmpoweredAgility) {
		return true
	}

	return false
}

// SetEmpoweredAgility gets a reference to the given int64 and assigns it to the EmpoweredAgility field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetEmpoweredAgility(v int64) {
	o.EmpoweredAgility = &v
}

// GetFeroVsDragons returns the FeroVsDragons field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFeroVsDragons() int64 {
	if o == nil || IsNil(o.FeroVsDragons) {
		var ret int64
		return ret
	}
	return *o.FeroVsDragons
}

// GetFeroVsDragonsOk returns a tuple with the FeroVsDragons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFeroVsDragonsOk() (*int64, bool) {
	if o == nil || IsNil(o.FeroVsDragons) {
		return nil, false
	}
	return o.FeroVsDragons, true
}

// HasFeroVsDragons returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasFeroVsDragons() bool {
	if o != nil && !IsNil(o.FeroVsDragons) {
		return true
	}

	return false
}

// SetFeroVsDragons gets a reference to the given int64 and assigns it to the FeroVsDragons field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetFeroVsDragons(v int64) {
	o.FeroVsDragons = &v
}

// GetFlatDamageVsEnder returns the FlatDamageVsEnder field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFlatDamageVsEnder() int64 {
	if o == nil || IsNil(o.FlatDamageVsEnder) {
		var ret int64
		return ret
	}
	return *o.FlatDamageVsEnder
}

// GetFlatDamageVsEnderOk returns a tuple with the FlatDamageVsEnder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFlatDamageVsEnderOk() (*int64, bool) {
	if o == nil || IsNil(o.FlatDamageVsEnder) {
		return nil, false
	}
	return o.FlatDamageVsEnder, true
}

// HasFlatDamageVsEnder returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasFlatDamageVsEnder() bool {
	if o != nil && !IsNil(o.FlatDamageVsEnder) {
		return true
	}

	return false
}

// SetFlatDamageVsEnder gets a reference to the given int64 and assigns it to the FlatDamageVsEnder field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetFlatDamageVsEnder(v int64) {
	o.FlatDamageVsEnder = &v
}

// GetForbiddenBlessing returns the ForbiddenBlessing field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetForbiddenBlessing() int64 {
	if o == nil || IsNil(o.ForbiddenBlessing) {
		var ret int64
		return ret
	}
	return *o.ForbiddenBlessing
}

// GetForbiddenBlessingOk returns a tuple with the ForbiddenBlessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetForbiddenBlessingOk() (*int64, bool) {
	if o == nil || IsNil(o.ForbiddenBlessing) {
		return nil, false
	}
	return o.ForbiddenBlessing, true
}

// HasForbiddenBlessing returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasForbiddenBlessing() bool {
	if o != nil && !IsNil(o.ForbiddenBlessing) {
		return true
	}

	return false
}

// SetForbiddenBlessing gets a reference to the given int64 and assigns it to the ForbiddenBlessing field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetForbiddenBlessing(v int64) {
	o.ForbiddenBlessing = &v
}

// GetFreshToolsKuudra returns the FreshToolsKuudra field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFreshToolsKuudra() int64 {
	if o == nil || IsNil(o.FreshToolsKuudra) {
		var ret int64
		return ret
	}
	return *o.FreshToolsKuudra
}

// GetFreshToolsKuudraOk returns a tuple with the FreshToolsKuudra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFreshToolsKuudraOk() (*int64, bool) {
	if o == nil || IsNil(o.FreshToolsKuudra) {
		return nil, false
	}
	return o.FreshToolsKuudra, true
}

// HasFreshToolsKuudra returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasFreshToolsKuudra() bool {
	if o != nil && !IsNil(o.FreshToolsKuudra) {
		return true
	}

	return false
}

// SetFreshToolsKuudra gets a reference to the given int64 and assigns it to the FreshToolsKuudra field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetFreshToolsKuudra(v int64) {
	o.FreshToolsKuudra = &v
}

// GetFrozenSkin returns the FrozenSkin field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFrozenSkin() int64 {
	if o == nil || IsNil(o.FrozenSkin) {
		var ret int64
		return ret
	}
	return *o.FrozenSkin
}

// GetFrozenSkinOk returns a tuple with the FrozenSkin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFrozenSkinOk() (*int64, bool) {
	if o == nil || IsNil(o.FrozenSkin) {
		return nil, false
	}
	return o.FrozenSkin, true
}

// HasFrozenSkin returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasFrozenSkin() bool {
	if o != nil && !IsNil(o.FrozenSkin) {
		return true
	}

	return false
}

// SetFrozenSkin gets a reference to the given int64 and assigns it to the FrozenSkin field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetFrozenSkin(v int64) {
	o.FrozenSkin = &v
}

// GetFungusFortuna returns the FungusFortuna field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFungusFortuna() int64 {
	if o == nil || IsNil(o.FungusFortuna) {
		var ret int64
		return ret
	}
	return *o.FungusFortuna
}

// GetFungusFortunaOk returns a tuple with the FungusFortuna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetFungusFortunaOk() (*int64, bool) {
	if o == nil || IsNil(o.FungusFortuna) {
		return nil, false
	}
	return o.FungusFortuna, true
}

// HasFungusFortuna returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasFungusFortuna() bool {
	if o != nil && !IsNil(o.FungusFortuna) {
		return true
	}

	return false
}

// SetFungusFortuna gets a reference to the given int64 and assigns it to the FungusFortuna field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetFungusFortuna(v int64) {
	o.FungusFortuna = &v
}

// GetHarenaFortuna returns the HarenaFortuna field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHarenaFortuna() int64 {
	if o == nil || IsNil(o.HarenaFortuna) {
		var ret int64
		return ret
	}
	return *o.HarenaFortuna
}

// GetHarenaFortunaOk returns a tuple with the HarenaFortuna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHarenaFortunaOk() (*int64, bool) {
	if o == nil || IsNil(o.HarenaFortuna) {
		return nil, false
	}
	return o.HarenaFortuna, true
}

// HasHarenaFortuna returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasHarenaFortuna() bool {
	if o != nil && !IsNil(o.HarenaFortuna) {
		return true
	}

	return false
}

// SetHarenaFortuna gets a reference to the given int64 and assigns it to the HarenaFortuna field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetHarenaFortuna(v int64) {
	o.HarenaFortuna = &v
}

// GetHeadstartKuudra returns the HeadstartKuudra field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHeadstartKuudra() int64 {
	if o == nil || IsNil(o.HeadstartKuudra) {
		var ret int64
		return ret
	}
	return *o.HeadstartKuudra
}

// GetHeadstartKuudraOk returns a tuple with the HeadstartKuudra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHeadstartKuudraOk() (*int64, bool) {
	if o == nil || IsNil(o.HeadstartKuudra) {
		return nil, false
	}
	return o.HeadstartKuudra, true
}

// HasHeadstartKuudra returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasHeadstartKuudra() bool {
	if o != nil && !IsNil(o.HeadstartKuudra) {
		return true
	}

	return false
}

// SetHeadstartKuudra gets a reference to the given int64 and assigns it to the HeadstartKuudra field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetHeadstartKuudra(v int64) {
	o.HeadstartKuudra = &v
}

// GetHeartOfGold returns the HeartOfGold field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHeartOfGold() int64 {
	if o == nil || IsNil(o.HeartOfGold) {
		var ret int64
		return ret
	}
	return *o.HeartOfGold
}

// GetHeartOfGoldOk returns a tuple with the HeartOfGold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHeartOfGoldOk() (*int64, bool) {
	if o == nil || IsNil(o.HeartOfGold) {
		return nil, false
	}
	return o.HeartOfGold, true
}

// HasHeartOfGold returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasHeartOfGold() bool {
	if o != nil && !IsNil(o.HeartOfGold) {
		return true
	}

	return false
}

// SetHeartOfGold gets a reference to the given int64 and assigns it to the HeartOfGold field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetHeartOfGold(v int64) {
	o.HeartOfGold = &v
}

// GetHighRoller returns the HighRoller field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHighRoller() int64 {
	if o == nil || IsNil(o.HighRoller) {
		var ret int64
		return ret
	}
	return *o.HighRoller
}

// GetHighRollerOk returns a tuple with the HighRoller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetHighRollerOk() (*int64, bool) {
	if o == nil || IsNil(o.HighRoller) {
		return nil, false
	}
	return o.HighRoller, true
}

// HasHighRoller returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasHighRoller() bool {
	if o != nil && !IsNil(o.HighRoller) {
		return true
	}

	return false
}

// SetHighRoller gets a reference to the given int64 and assigns it to the HighRoller field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetHighRoller(v int64) {
	o.HighRoller = &v
}

// GetIncZealotsOdds returns the IncZealotsOdds field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetIncZealotsOdds() int64 {
	if o == nil || IsNil(o.IncZealotsOdds) {
		var ret int64
		return ret
	}
	return *o.IncZealotsOdds
}

// GetIncZealotsOddsOk returns a tuple with the IncZealotsOdds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetIncZealotsOddsOk() (*int64, bool) {
	if o == nil || IsNil(o.IncZealotsOdds) {
		return nil, false
	}
	return o.IncZealotsOdds, true
}

// HasIncZealotsOdds returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasIncZealotsOdds() bool {
	if o != nil && !IsNil(o.IncZealotsOdds) {
		return true
	}

	return false
}

// SetIncZealotsOdds gets a reference to the given int64 and assigns it to the IncZealotsOdds field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetIncZealotsOdds(v int64) {
	o.IncZealotsOdds = &v
}

// GetIncreasedSupChances returns the IncreasedSupChances field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetIncreasedSupChances() int64 {
	if o == nil || IsNil(o.IncreasedSupChances) {
		var ret int64
		return ret
	}
	return *o.IncreasedSupChances
}

// GetIncreasedSupChancesOk returns a tuple with the IncreasedSupChances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetIncreasedSupChancesOk() (*int64, bool) {
	if o == nil || IsNil(o.IncreasedSupChances) {
		return nil, false
	}
	return o.IncreasedSupChances, true
}

// HasIncreasedSupChances returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasIncreasedSupChances() bool {
	if o != nil && !IsNil(o.IncreasedSupChances) {
		return true
	}

	return false
}

// SetIncreasedSupChances gets a reference to the given int64 and assigns it to the IncreasedSupChances field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetIncreasedSupChances(v int64) {
	o.IncreasedSupChances = &v
}

// GetManaAfterEnderKill returns the ManaAfterEnderKill field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetManaAfterEnderKill() int64 {
	if o == nil || IsNil(o.ManaAfterEnderKill) {
		var ret int64
		return ret
	}
	return *o.ManaAfterEnderKill
}

// GetManaAfterEnderKillOk returns a tuple with the ManaAfterEnderKill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetManaAfterEnderKillOk() (*int64, bool) {
	if o == nil || IsNil(o.ManaAfterEnderKill) {
		return nil, false
	}
	return o.ManaAfterEnderKill, true
}

// HasManaAfterEnderKill returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasManaAfterEnderKill() bool {
	if o != nil && !IsNil(o.ManaAfterEnderKill) {
		return true
	}

	return false
}

// SetManaAfterEnderKill gets a reference to the given int64 and assigns it to the ManaAfterEnderKill field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetManaAfterEnderKill(v int64) {
	o.ManaAfterEnderKill = &v
}

// GetMasterKuudra returns the MasterKuudra field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetMasterKuudra() int64 {
	if o == nil || IsNil(o.MasterKuudra) {
		var ret int64
		return ret
	}
	return *o.MasterKuudra
}

// GetMasterKuudraOk returns a tuple with the MasterKuudra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetMasterKuudraOk() (*int64, bool) {
	if o == nil || IsNil(o.MasterKuudra) {
		return nil, false
	}
	return o.MasterKuudra, true
}

// HasMasterKuudra returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasMasterKuudra() bool {
	if o != nil && !IsNil(o.MasterKuudra) {
		return true
	}

	return false
}

// SetMasterKuudra gets a reference to the given int64 and assigns it to the MasterKuudra field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetMasterKuudra(v int64) {
	o.MasterKuudra = &v
}

// GetMidasLure returns the MidasLure field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetMidasLure() int64 {
	if o == nil || IsNil(o.MidasLure) {
		var ret int64
		return ret
	}
	return *o.MidasLure
}

// GetMidasLureOk returns a tuple with the MidasLure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetMidasLureOk() (*int64, bool) {
	if o == nil || IsNil(o.MidasLure) {
		return nil, false
	}
	return o.MidasLure, true
}

// HasMidasLure returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasMidasLure() bool {
	if o != nil && !IsNil(o.MidasLure) {
		return true
	}

	return false
}

// SetMidasLure gets a reference to the given int64 and assigns it to the MidasLure field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetMidasLure(v int64) {
	o.MidasLure = &v
}

// GetPermanentDefense returns the PermanentDefense field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentDefense() int64 {
	if o == nil || IsNil(o.PermanentDefense) {
		var ret int64
		return ret
	}
	return *o.PermanentDefense
}

// GetPermanentDefenseOk returns a tuple with the PermanentDefense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentDefenseOk() (*int64, bool) {
	if o == nil || IsNil(o.PermanentDefense) {
		return nil, false
	}
	return o.PermanentDefense, true
}

// HasPermanentDefense returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasPermanentDefense() bool {
	if o != nil && !IsNil(o.PermanentDefense) {
		return true
	}

	return false
}

// SetPermanentDefense gets a reference to the given int64 and assigns it to the PermanentDefense field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetPermanentDefense(v int64) {
	o.PermanentDefense = &v
}

// GetPermanentHealth returns the PermanentHealth field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentHealth() int64 {
	if o == nil || IsNil(o.PermanentHealth) {
		var ret int64
		return ret
	}
	return *o.PermanentHealth
}

// GetPermanentHealthOk returns a tuple with the PermanentHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentHealthOk() (*int64, bool) {
	if o == nil || IsNil(o.PermanentHealth) {
		return nil, false
	}
	return o.PermanentHealth, true
}

// HasPermanentHealth returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasPermanentHealth() bool {
	if o != nil && !IsNil(o.PermanentHealth) {
		return true
	}

	return false
}

// SetPermanentHealth gets a reference to the given int64 and assigns it to the PermanentHealth field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetPermanentHealth(v int64) {
	o.PermanentHealth = &v
}

// GetPermanentIntelligence returns the PermanentIntelligence field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentIntelligence() int64 {
	if o == nil || IsNil(o.PermanentIntelligence) {
		var ret int64
		return ret
	}
	return *o.PermanentIntelligence
}

// GetPermanentIntelligenceOk returns a tuple with the PermanentIntelligence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentIntelligenceOk() (*int64, bool) {
	if o == nil || IsNil(o.PermanentIntelligence) {
		return nil, false
	}
	return o.PermanentIntelligence, true
}

// HasPermanentIntelligence returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasPermanentIntelligence() bool {
	if o != nil && !IsNil(o.PermanentIntelligence) {
		return true
	}

	return false
}

// SetPermanentIntelligence gets a reference to the given int64 and assigns it to the PermanentIntelligence field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetPermanentIntelligence(v int64) {
	o.PermanentIntelligence = &v
}

// GetPermanentSpeed returns the PermanentSpeed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentSpeed() int64 {
	if o == nil || IsNil(o.PermanentSpeed) {
		var ret int64
		return ret
	}
	return *o.PermanentSpeed
}

// GetPermanentSpeedOk returns a tuple with the PermanentSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.PermanentSpeed) {
		return nil, false
	}
	return o.PermanentSpeed, true
}

// HasPermanentSpeed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasPermanentSpeed() bool {
	if o != nil && !IsNil(o.PermanentSpeed) {
		return true
	}

	return false
}

// SetPermanentSpeed gets a reference to the given int64 and assigns it to the PermanentSpeed field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetPermanentSpeed(v int64) {
	o.PermanentSpeed = &v
}

// GetPermanentStrength returns the PermanentStrength field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentStrength() int64 {
	if o == nil || IsNil(o.PermanentStrength) {
		var ret int64
		return ret
	}
	return *o.PermanentStrength
}

// GetPermanentStrengthOk returns a tuple with the PermanentStrength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetPermanentStrengthOk() (*int64, bool) {
	if o == nil || IsNil(o.PermanentStrength) {
		return nil, false
	}
	return o.PermanentStrength, true
}

// HasPermanentStrength returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasPermanentStrength() bool {
	if o != nil && !IsNil(o.PermanentStrength) {
		return true
	}

	return false
}

// SetPermanentStrength gets a reference to the given int64 and assigns it to the PermanentStrength field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetPermanentStrength(v int64) {
	o.PermanentStrength = &v
}

// GetRadiantFisher returns the RadiantFisher field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetRadiantFisher() int64 {
	if o == nil || IsNil(o.RadiantFisher) {
		var ret int64
		return ret
	}
	return *o.RadiantFisher
}

// GetRadiantFisherOk returns a tuple with the RadiantFisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetRadiantFisherOk() (*int64, bool) {
	if o == nil || IsNil(o.RadiantFisher) {
		return nil, false
	}
	return o.RadiantFisher, true
}

// HasRadiantFisher returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasRadiantFisher() bool {
	if o != nil && !IsNil(o.RadiantFisher) {
		return true
	}

	return false
}

// SetRadiantFisher gets a reference to the given int64 and assigns it to the RadiantFisher field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetRadiantFisher(v int64) {
	o.RadiantFisher = &v
}

// GetReturnToSender returns the ReturnToSender field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetReturnToSender() int64 {
	if o == nil || IsNil(o.ReturnToSender) {
		var ret int64
		return ret
	}
	return *o.ReturnToSender
}

// GetReturnToSenderOk returns a tuple with the ReturnToSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetReturnToSenderOk() (*int64, bool) {
	if o == nil || IsNil(o.ReturnToSender) {
		return nil, false
	}
	return o.ReturnToSender, true
}

// HasReturnToSender returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasReturnToSender() bool {
	if o != nil && !IsNil(o.ReturnToSender) {
		return true
	}

	return false
}

// SetReturnToSender gets a reference to the given int64 and assigns it to the ReturnToSender field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetReturnToSender(v int64) {
	o.ReturnToSender = &v
}

// GetReviveStone returns the ReviveStone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetReviveStone() int64 {
	if o == nil || IsNil(o.ReviveStone) {
		var ret int64
		return ret
	}
	return *o.ReviveStone
}

// GetReviveStoneOk returns a tuple with the ReviveStone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetReviveStoneOk() (*int64, bool) {
	if o == nil || IsNil(o.ReviveStone) {
		return nil, false
	}
	return o.ReviveStone, true
}

// HasReviveStone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasReviveStone() bool {
	if o != nil && !IsNil(o.ReviveStone) {
		return true
	}

	return false
}

// SetReviveStone gets a reference to the given int64 and assigns it to the ReviveStone field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetReviveStone(v int64) {
	o.ReviveStone = &v
}

// GetRhinestoneInfusion returns the RhinestoneInfusion field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetRhinestoneInfusion() int64 {
	if o == nil || IsNil(o.RhinestoneInfusion) {
		var ret int64
		return ret
	}
	return *o.RhinestoneInfusion
}

// GetRhinestoneInfusionOk returns a tuple with the RhinestoneInfusion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetRhinestoneInfusionOk() (*int64, bool) {
	if o == nil || IsNil(o.RhinestoneInfusion) {
		return nil, false
	}
	return o.RhinestoneInfusion, true
}

// HasRhinestoneInfusion returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasRhinestoneInfusion() bool {
	if o != nil && !IsNil(o.RhinestoneInfusion) {
		return true
	}

	return false
}

// SetRhinestoneInfusion gets a reference to the given int64 and assigns it to the RhinestoneInfusion field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetRhinestoneInfusion(v int64) {
	o.RhinestoneInfusion = &v
}

// GetSeasonOfJoy returns the SeasonOfJoy field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetSeasonOfJoy() int64 {
	if o == nil || IsNil(o.SeasonOfJoy) {
		var ret int64
		return ret
	}
	return *o.SeasonOfJoy
}

// GetSeasonOfJoyOk returns a tuple with the SeasonOfJoy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetSeasonOfJoyOk() (*int64, bool) {
	if o == nil || IsNil(o.SeasonOfJoy) {
		return nil, false
	}
	return o.SeasonOfJoy, true
}

// HasSeasonOfJoy returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasSeasonOfJoy() bool {
	if o != nil && !IsNil(o.SeasonOfJoy) {
		return true
	}

	return false
}

// SetSeasonOfJoy gets a reference to the given int64 and assigns it to the SeasonOfJoy field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetSeasonOfJoy(v int64) {
	o.SeasonOfJoy = &v
}

// GetSpiderTraining returns the SpiderTraining field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetSpiderTraining() int64 {
	if o == nil || IsNil(o.SpiderTraining) {
		var ret int64
		return ret
	}
	return *o.SpiderTraining
}

// GetSpiderTrainingOk returns a tuple with the SpiderTraining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetSpiderTrainingOk() (*int64, bool) {
	if o == nil || IsNil(o.SpiderTraining) {
		return nil, false
	}
	return o.SpiderTraining, true
}

// HasSpiderTraining returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasSpiderTraining() bool {
	if o != nil && !IsNil(o.SpiderTraining) {
		return true
	}

	return false
}

// SetSpiderTraining gets a reference to the given int64 and assigns it to the SpiderTraining field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetSpiderTraining(v int64) {
	o.SpiderTraining = &v
}

// GetStrongarmKuudra returns the StrongarmKuudra field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetStrongarmKuudra() int64 {
	if o == nil || IsNil(o.StrongarmKuudra) {
		var ret int64
		return ret
	}
	return *o.StrongarmKuudra
}

// GetStrongarmKuudraOk returns a tuple with the StrongarmKuudra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetStrongarmKuudraOk() (*int64, bool) {
	if o == nil || IsNil(o.StrongarmKuudra) {
		return nil, false
	}
	return o.StrongarmKuudra, true
}

// HasStrongarmKuudra returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasStrongarmKuudra() bool {
	if o != nil && !IsNil(o.StrongarmKuudra) {
		return true
	}

	return false
}

// SetStrongarmKuudra gets a reference to the given int64 and assigns it to the StrongarmKuudra field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetStrongarmKuudra(v int64) {
	o.StrongarmKuudra = &v
}

// GetToxophilite returns the Toxophilite field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetToxophilite() int64 {
	if o == nil || IsNil(o.Toxophilite) {
		var ret int64
		return ret
	}
	return *o.Toxophilite
}

// GetToxophiliteOk returns a tuple with the Toxophilite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetToxophiliteOk() (*int64, bool) {
	if o == nil || IsNil(o.Toxophilite) {
		return nil, false
	}
	return o.Toxophilite, true
}

// HasToxophilite returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasToxophilite() bool {
	if o != nil && !IsNil(o.Toxophilite) {
		return true
	}

	return false
}

// SetToxophilite gets a reference to the given int64 and assigns it to the Toxophilite field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetToxophilite(v int64) {
	o.Toxophilite = &v
}

// GetTreasuresOfTheEarth returns the TreasuresOfTheEarth field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetTreasuresOfTheEarth() int64 {
	if o == nil || IsNil(o.TreasuresOfTheEarth) {
		var ret int64
		return ret
	}
	return *o.TreasuresOfTheEarth
}

// GetTreasuresOfTheEarthOk returns a tuple with the TreasuresOfTheEarth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetTreasuresOfTheEarthOk() (*int64, bool) {
	if o == nil || IsNil(o.TreasuresOfTheEarth) {
		return nil, false
	}
	return o.TreasuresOfTheEarth, true
}

// HasTreasuresOfTheEarth returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasTreasuresOfTheEarth() bool {
	if o != nil && !IsNil(o.TreasuresOfTheEarth) {
		return true
	}

	return false
}

// SetTreasuresOfTheEarth gets a reference to the given int64 and assigns it to the TreasuresOfTheEarth field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetTreasuresOfTheEarth(v int64) {
	o.TreasuresOfTheEarth = &v
}

// GetUnbreaking returns the Unbreaking field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetUnbreaking() int64 {
	if o == nil || IsNil(o.Unbreaking) {
		var ret int64
		return ret
	}
	return *o.Unbreaking
}

// GetUnbreakingOk returns a tuple with the Unbreaking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetUnbreakingOk() (*int64, bool) {
	if o == nil || IsNil(o.Unbreaking) {
		return nil, false
	}
	return o.Unbreaking, true
}

// HasUnbreaking returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasUnbreaking() bool {
	if o != nil && !IsNil(o.Unbreaking) {
		return true
	}

	return false
}

// SetUnbreaking gets a reference to the given int64 and assigns it to the Unbreaking field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetUnbreaking(v int64) {
	o.Unbreaking = &v
}

// GetUnbridledRage returns the UnbridledRage field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetUnbridledRage() int64 {
	if o == nil || IsNil(o.UnbridledRage) {
		var ret int64
		return ret
	}
	return *o.UnbridledRage
}

// GetUnbridledRageOk returns a tuple with the UnbridledRage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetUnbridledRageOk() (*int64, bool) {
	if o == nil || IsNil(o.UnbridledRage) {
		return nil, false
	}
	return o.UnbridledRage, true
}

// HasUnbridledRage returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasUnbridledRage() bool {
	if o != nil && !IsNil(o.UnbridledRage) {
		return true
	}

	return false
}

// SetUnbridledRage gets a reference to the given int64 and assigns it to the UnbridledRage field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetUnbridledRage(v int64) {
	o.UnbridledRage = &v
}

// GetUnderPressure returns the UnderPressure field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetUnderPressure() int64 {
	if o == nil || IsNil(o.UnderPressure) {
		var ret int64
		return ret
	}
	return *o.UnderPressure
}

// GetUnderPressureOk returns a tuple with the UnderPressure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetUnderPressureOk() (*int64, bool) {
	if o == nil || IsNil(o.UnderPressure) {
		return nil, false
	}
	return o.UnderPressure, true
}

// HasUnderPressure returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasUnderPressure() bool {
	if o != nil && !IsNil(o.UnderPressure) {
		return true
	}

	return false
}

// SetUnderPressure gets a reference to the given int64 and assigns it to the UnderPressure field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetUnderPressure(v int64) {
	o.UnderPressure = &v
}

// GetVerminControl returns the VerminControl field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetVerminControl() int64 {
	if o == nil || IsNil(o.VerminControl) {
		var ret int64
		return ret
	}
	return *o.VerminControl
}

// GetVerminControlOk returns a tuple with the VerminControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetVerminControlOk() (*int64, bool) {
	if o == nil || IsNil(o.VerminControl) {
		return nil, false
	}
	return o.VerminControl, true
}

// HasVerminControl returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasVerminControl() bool {
	if o != nil && !IsNil(o.VerminControl) {
		return true
	}

	return false
}

// SetVerminControl gets a reference to the given int64 and assigns it to the VerminControl field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetVerminControl(v int64) {
	o.VerminControl = &v
}

// GetWitherPiper returns the WitherPiper field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetWitherPiper() int64 {
	if o == nil || IsNil(o.WitherPiper) {
		var ret int64
		return ret
	}
	return *o.WitherPiper
}

// GetWitherPiperOk returns a tuple with the WitherPiper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) GetWitherPiperOk() (*int64, bool) {
	if o == nil || IsNil(o.WitherPiper) {
		return nil, false
	}
	return o.WitherPiper, true
}

// HasWitherPiper returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataPerks) HasWitherPiper() bool {
	if o != nil && !IsNil(o.WitherPiper) {
		return true
	}

	return false
}

// SetWitherPiper gets a reference to the given int64 and assigns it to the WitherPiper field.
func (o *SkyBlockProfileMemberPlayerDataPerks) SetWitherPiper(v int64) {
	o.WitherPiper = &v
}

func (o SkyBlockProfileMemberPlayerDataPerks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerDataPerks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bane) {
		toSerialize["bane"] = o.Bane
	}
	if !IsNil(o.BlessingOfTime) {
		toSerialize["blessing_of_time"] = o.BlessingOfTime
	}
	if !IsNil(o.CatacombsBossLuck) {
		toSerialize["catacombs_boss_luck"] = o.CatacombsBossLuck
	}
	if !IsNil(o.CatacombsCritDamage) {
		toSerialize["catacombs_crit_damage"] = o.CatacombsCritDamage
	}
	if !IsNil(o.CatacombsDefense) {
		toSerialize["catacombs_defense"] = o.CatacombsDefense
	}
	if !IsNil(o.CatacombsHealth) {
		toSerialize["catacombs_health"] = o.CatacombsHealth
	}
	if !IsNil(o.CatacombsIntelligence) {
		toSerialize["catacombs_intelligence"] = o.CatacombsIntelligence
	}
	if !IsNil(o.CatacombsLooting) {
		toSerialize["catacombs_looting"] = o.CatacombsLooting
	}
	if !IsNil(o.CatacombsStrength) {
		toSerialize["catacombs_strength"] = o.CatacombsStrength
	}
	if !IsNil(o.ColdEfficiency) {
		toSerialize["cold_efficiency"] = o.ColdEfficiency
	}
	if !IsNil(o.CombatWisdomInEnd) {
		toSerialize["combat_wisdom_in_end"] = o.CombatWisdomInEnd
	}
	if !IsNil(o.CooledForges) {
		toSerialize["cooled_forges"] = o.CooledForges
	}
	if !IsNil(o.CrimsonTraining) {
		toSerialize["crimson_training"] = o.CrimsonTraining
	}
	if !IsNil(o.DiamondInTheRough) {
		toSerialize["diamond_in_the_rough"] = o.DiamondInTheRough
	}
	if !IsNil(o.DragonReforgesBuff) {
		toSerialize["dragon_reforges_buff"] = o.DragonReforgesBuff
	}
	if !IsNil(o.DrakePiper) {
		toSerialize["drake_piper"] = o.DrakePiper
	}
	if !IsNil(o.DwarvenTraining) {
		toSerialize["dwarven_training"] = o.DwarvenTraining
	}
	if !IsNil(o.EagerMiner) {
		toSerialize["eager_miner"] = o.EagerMiner
	}
	if !IsNil(o.EdragCd) {
		toSerialize["edrag_cd"] = o.EdragCd
	}
	if !IsNil(o.EmpoweredAgility) {
		toSerialize["empowered_agility"] = o.EmpoweredAgility
	}
	if !IsNil(o.FeroVsDragons) {
		toSerialize["fero_vs_dragons"] = o.FeroVsDragons
	}
	if !IsNil(o.FlatDamageVsEnder) {
		toSerialize["flat_damage_vs_ender"] = o.FlatDamageVsEnder
	}
	if !IsNil(o.ForbiddenBlessing) {
		toSerialize["forbidden_blessing"] = o.ForbiddenBlessing
	}
	if !IsNil(o.FreshToolsKuudra) {
		toSerialize["fresh_tools_kuudra"] = o.FreshToolsKuudra
	}
	if !IsNil(o.FrozenSkin) {
		toSerialize["frozen_skin"] = o.FrozenSkin
	}
	if !IsNil(o.FungusFortuna) {
		toSerialize["fungus_fortuna"] = o.FungusFortuna
	}
	if !IsNil(o.HarenaFortuna) {
		toSerialize["harena_fortuna"] = o.HarenaFortuna
	}
	if !IsNil(o.HeadstartKuudra) {
		toSerialize["headstart_kuudra"] = o.HeadstartKuudra
	}
	if !IsNil(o.HeartOfGold) {
		toSerialize["heart_of_gold"] = o.HeartOfGold
	}
	if !IsNil(o.HighRoller) {
		toSerialize["high_roller"] = o.HighRoller
	}
	if !IsNil(o.IncZealotsOdds) {
		toSerialize["inc_zealots_odds"] = o.IncZealotsOdds
	}
	if !IsNil(o.IncreasedSupChances) {
		toSerialize["increased_sup_chances"] = o.IncreasedSupChances
	}
	if !IsNil(o.ManaAfterEnderKill) {
		toSerialize["mana_after_ender_kill"] = o.ManaAfterEnderKill
	}
	if !IsNil(o.MasterKuudra) {
		toSerialize["master_kuudra"] = o.MasterKuudra
	}
	if !IsNil(o.MidasLure) {
		toSerialize["midas_lure"] = o.MidasLure
	}
	if !IsNil(o.PermanentDefense) {
		toSerialize["permanent_defense"] = o.PermanentDefense
	}
	if !IsNil(o.PermanentHealth) {
		toSerialize["permanent_health"] = o.PermanentHealth
	}
	if !IsNil(o.PermanentIntelligence) {
		toSerialize["permanent_intelligence"] = o.PermanentIntelligence
	}
	if !IsNil(o.PermanentSpeed) {
		toSerialize["permanent_speed"] = o.PermanentSpeed
	}
	if !IsNil(o.PermanentStrength) {
		toSerialize["permanent_strength"] = o.PermanentStrength
	}
	if !IsNil(o.RadiantFisher) {
		toSerialize["radiant_fisher"] = o.RadiantFisher
	}
	if !IsNil(o.ReturnToSender) {
		toSerialize["return_to_sender"] = o.ReturnToSender
	}
	if !IsNil(o.ReviveStone) {
		toSerialize["revive_stone"] = o.ReviveStone
	}
	if !IsNil(o.RhinestoneInfusion) {
		toSerialize["rhinestone_infusion"] = o.RhinestoneInfusion
	}
	if !IsNil(o.SeasonOfJoy) {
		toSerialize["season_of_joy"] = o.SeasonOfJoy
	}
	if !IsNil(o.SpiderTraining) {
		toSerialize["spider_training"] = o.SpiderTraining
	}
	if !IsNil(o.StrongarmKuudra) {
		toSerialize["strongarm_kuudra"] = o.StrongarmKuudra
	}
	if !IsNil(o.Toxophilite) {
		toSerialize["toxophilite"] = o.Toxophilite
	}
	if !IsNil(o.TreasuresOfTheEarth) {
		toSerialize["treasures_of_the_earth"] = o.TreasuresOfTheEarth
	}
	if !IsNil(o.Unbreaking) {
		toSerialize["unbreaking"] = o.Unbreaking
	}
	if !IsNil(o.UnbridledRage) {
		toSerialize["unbridled_rage"] = o.UnbridledRage
	}
	if !IsNil(o.UnderPressure) {
		toSerialize["under_pressure"] = o.UnderPressure
	}
	if !IsNil(o.VerminControl) {
		toSerialize["vermin_control"] = o.VerminControl
	}
	if !IsNil(o.WitherPiper) {
		toSerialize["wither_piper"] = o.WitherPiper
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberPlayerDataPerks struct {
	value *SkyBlockProfileMemberPlayerDataPerks
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerDataPerks) Get() *SkyBlockProfileMemberPlayerDataPerks {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerDataPerks) Set(val *SkyBlockProfileMemberPlayerDataPerks) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerDataPerks) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerDataPerks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerDataPerks(val *SkyBlockProfileMemberPlayerDataPerks) *NullableSkyBlockProfileMemberPlayerDataPerks {
	return &NullableSkyBlockProfileMemberPlayerDataPerks{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerDataPerks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerDataPerks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
