/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileCommunityUpgrades type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileCommunityUpgrades{}

// SkyBlockProfileCommunityUpgrades struct for SkyBlockProfileCommunityUpgrades
type SkyBlockProfileCommunityUpgrades struct {
	CurrentlyUpgrading *SkyBlockProfileCommunityUpgradesCurrentlyUpgrading `json:"currently_upgrading,omitempty"`
	UpgradeStates      []SkyBlockProfileCommunityUpgradesUpgradeState      `json:"upgrade_states,omitempty"`
}

// NewSkyBlockProfileCommunityUpgrades instantiates a new SkyBlockProfileCommunityUpgrades object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileCommunityUpgrades() *SkyBlockProfileCommunityUpgrades {
	this := SkyBlockProfileCommunityUpgrades{}
	return &this
}

// NewSkyBlockProfileCommunityUpgradesWithDefaults instantiates a new SkyBlockProfileCommunityUpgrades object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileCommunityUpgradesWithDefaults() *SkyBlockProfileCommunityUpgrades {
	this := SkyBlockProfileCommunityUpgrades{}
	return &this
}

// GetCurrentlyUpgrading returns the CurrentlyUpgrading field value if set, zero value otherwise.
func (o *SkyBlockProfileCommunityUpgrades) GetCurrentlyUpgrading() SkyBlockProfileCommunityUpgradesCurrentlyUpgrading {
	if o == nil || IsNil(o.CurrentlyUpgrading) {
		var ret SkyBlockProfileCommunityUpgradesCurrentlyUpgrading
		return ret
	}
	return *o.CurrentlyUpgrading
}

// GetCurrentlyUpgradingOk returns a tuple with the CurrentlyUpgrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgrades) GetCurrentlyUpgradingOk() (*SkyBlockProfileCommunityUpgradesCurrentlyUpgrading, bool) {
	if o == nil || IsNil(o.CurrentlyUpgrading) {
		return nil, false
	}
	return o.CurrentlyUpgrading, true
}

// HasCurrentlyUpgrading returns a boolean if a field has been set.
func (o *SkyBlockProfileCommunityUpgrades) HasCurrentlyUpgrading() bool {
	if o != nil && !IsNil(o.CurrentlyUpgrading) {
		return true
	}

	return false
}

// SetCurrentlyUpgrading gets a reference to the given SkyBlockProfileCommunityUpgradesCurrentlyUpgrading and assigns it to the CurrentlyUpgrading field.
func (o *SkyBlockProfileCommunityUpgrades) SetCurrentlyUpgrading(v SkyBlockProfileCommunityUpgradesCurrentlyUpgrading) {
	o.CurrentlyUpgrading = &v
}

// GetUpgradeStates returns the UpgradeStates field value if set, zero value otherwise.
func (o *SkyBlockProfileCommunityUpgrades) GetUpgradeStates() []SkyBlockProfileCommunityUpgradesUpgradeState {
	if o == nil || IsNil(o.UpgradeStates) {
		var ret []SkyBlockProfileCommunityUpgradesUpgradeState
		return ret
	}
	return o.UpgradeStates
}

// GetUpgradeStatesOk returns a tuple with the UpgradeStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileCommunityUpgrades) GetUpgradeStatesOk() ([]SkyBlockProfileCommunityUpgradesUpgradeState, bool) {
	if o == nil || IsNil(o.UpgradeStates) {
		return nil, false
	}
	return o.UpgradeStates, true
}

// HasUpgradeStates returns a boolean if a field has been set.
func (o *SkyBlockProfileCommunityUpgrades) HasUpgradeStates() bool {
	if o != nil && !IsNil(o.UpgradeStates) {
		return true
	}

	return false
}

// SetUpgradeStates gets a reference to the given []SkyBlockProfileCommunityUpgradesUpgradeState and assigns it to the UpgradeStates field.
func (o *SkyBlockProfileCommunityUpgrades) SetUpgradeStates(v []SkyBlockProfileCommunityUpgradesUpgradeState) {
	o.UpgradeStates = v
}

func (o SkyBlockProfileCommunityUpgrades) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileCommunityUpgrades) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentlyUpgrading) {
		toSerialize["currently_upgrading"] = o.CurrentlyUpgrading
	}
	if !IsNil(o.UpgradeStates) {
		toSerialize["upgrade_states"] = o.UpgradeStates
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileCommunityUpgrades struct {
	value *SkyBlockProfileCommunityUpgrades
	isSet bool
}

func (v NullableSkyBlockProfileCommunityUpgrades) Get() *SkyBlockProfileCommunityUpgrades {
	return v.value
}

func (v *NullableSkyBlockProfileCommunityUpgrades) Set(val *SkyBlockProfileCommunityUpgrades) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileCommunityUpgrades) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileCommunityUpgrades) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileCommunityUpgrades(val *SkyBlockProfileCommunityUpgrades) *NullableSkyBlockProfileCommunityUpgrades {
	return &NullableSkyBlockProfileCommunityUpgrades{value: val, isSet: true}
}

func (v NullableSkyBlockProfileCommunityUpgrades) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileCommunityUpgrades) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
