/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberExperimentationPairings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberExperimentationPairings{}

// SkyBlockProfileMemberExperimentationPairings struct for SkyBlockProfileMemberExperimentationPairings
type SkyBlockProfileMemberExperimentationPairings struct {
	BestScore0  *int64 `json:"best_score_0,omitempty"`
	BestScore1  *int64 `json:"best_score_1,omitempty"`
	BestScore2  *int64 `json:"best_score_2,omitempty"`
	BestScore3  *int64 `json:"best_score_3,omitempty"`
	BestScore4  *int64 `json:"best_score_4,omitempty"`
	BestScore5  *int64 `json:"best_score_5,omitempty"`
	BonusClicks *int64 `json:"bonus_clicks,omitempty"`
	Claimed     *bool  `json:"claimed,omitempty"`
	Claims0     *int64 `json:"claims_0,omitempty"`
	Claims1     *int64 `json:"claims_1,omitempty"`
	Claims2     *int64 `json:"claims_2,omitempty"`
	Claims3     *int64 `json:"claims_3,omitempty"`
	Claims4     *int64 `json:"claims_4,omitempty"`
	Claims5     *int64 `json:"claims_5,omitempty"`
	LastAttempt *int64 `json:"last_attempt,omitempty"`
	LastClaimed *int64 `json:"last_claimed,omitempty"`
}

// NewSkyBlockProfileMemberExperimentationPairings instantiates a new SkyBlockProfileMemberExperimentationPairings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberExperimentationPairings() *SkyBlockProfileMemberExperimentationPairings {
	this := SkyBlockProfileMemberExperimentationPairings{}
	return &this
}

// NewSkyBlockProfileMemberExperimentationPairingsWithDefaults instantiates a new SkyBlockProfileMemberExperimentationPairings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberExperimentationPairingsWithDefaults() *SkyBlockProfileMemberExperimentationPairings {
	this := SkyBlockProfileMemberExperimentationPairings{}
	return &this
}

// GetBestScore0 returns the BestScore0 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore0() int64 {
	if o == nil || IsNil(o.BestScore0) {
		var ret int64
		return ret
	}
	return *o.BestScore0
}

// GetBestScore0Ok returns a tuple with the BestScore0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore0Ok() (*int64, bool) {
	if o == nil || IsNil(o.BestScore0) {
		return nil, false
	}
	return o.BestScore0, true
}

// HasBestScore0 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBestScore0() bool {
	if o != nil && !IsNil(o.BestScore0) {
		return true
	}

	return false
}

// SetBestScore0 gets a reference to the given int64 and assigns it to the BestScore0 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBestScore0(v int64) {
	o.BestScore0 = &v
}

// GetBestScore1 returns the BestScore1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore1() int64 {
	if o == nil || IsNil(o.BestScore1) {
		var ret int64
		return ret
	}
	return *o.BestScore1
}

// GetBestScore1Ok returns a tuple with the BestScore1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore1Ok() (*int64, bool) {
	if o == nil || IsNil(o.BestScore1) {
		return nil, false
	}
	return o.BestScore1, true
}

// HasBestScore1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBestScore1() bool {
	if o != nil && !IsNil(o.BestScore1) {
		return true
	}

	return false
}

// SetBestScore1 gets a reference to the given int64 and assigns it to the BestScore1 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBestScore1(v int64) {
	o.BestScore1 = &v
}

// GetBestScore2 returns the BestScore2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore2() int64 {
	if o == nil || IsNil(o.BestScore2) {
		var ret int64
		return ret
	}
	return *o.BestScore2
}

// GetBestScore2Ok returns a tuple with the BestScore2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore2Ok() (*int64, bool) {
	if o == nil || IsNil(o.BestScore2) {
		return nil, false
	}
	return o.BestScore2, true
}

// HasBestScore2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBestScore2() bool {
	if o != nil && !IsNil(o.BestScore2) {
		return true
	}

	return false
}

// SetBestScore2 gets a reference to the given int64 and assigns it to the BestScore2 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBestScore2(v int64) {
	o.BestScore2 = &v
}

// GetBestScore3 returns the BestScore3 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore3() int64 {
	if o == nil || IsNil(o.BestScore3) {
		var ret int64
		return ret
	}
	return *o.BestScore3
}

// GetBestScore3Ok returns a tuple with the BestScore3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore3Ok() (*int64, bool) {
	if o == nil || IsNil(o.BestScore3) {
		return nil, false
	}
	return o.BestScore3, true
}

// HasBestScore3 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBestScore3() bool {
	if o != nil && !IsNil(o.BestScore3) {
		return true
	}

	return false
}

// SetBestScore3 gets a reference to the given int64 and assigns it to the BestScore3 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBestScore3(v int64) {
	o.BestScore3 = &v
}

// GetBestScore4 returns the BestScore4 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore4() int64 {
	if o == nil || IsNil(o.BestScore4) {
		var ret int64
		return ret
	}
	return *o.BestScore4
}

// GetBestScore4Ok returns a tuple with the BestScore4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore4Ok() (*int64, bool) {
	if o == nil || IsNil(o.BestScore4) {
		return nil, false
	}
	return o.BestScore4, true
}

// HasBestScore4 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBestScore4() bool {
	if o != nil && !IsNil(o.BestScore4) {
		return true
	}

	return false
}

// SetBestScore4 gets a reference to the given int64 and assigns it to the BestScore4 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBestScore4(v int64) {
	o.BestScore4 = &v
}

// GetBestScore5 returns the BestScore5 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore5() int64 {
	if o == nil || IsNil(o.BestScore5) {
		var ret int64
		return ret
	}
	return *o.BestScore5
}

// GetBestScore5Ok returns a tuple with the BestScore5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBestScore5Ok() (*int64, bool) {
	if o == nil || IsNil(o.BestScore5) {
		return nil, false
	}
	return o.BestScore5, true
}

// HasBestScore5 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBestScore5() bool {
	if o != nil && !IsNil(o.BestScore5) {
		return true
	}

	return false
}

// SetBestScore5 gets a reference to the given int64 and assigns it to the BestScore5 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBestScore5(v int64) {
	o.BestScore5 = &v
}

// GetBonusClicks returns the BonusClicks field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBonusClicks() int64 {
	if o == nil || IsNil(o.BonusClicks) {
		var ret int64
		return ret
	}
	return *o.BonusClicks
}

// GetBonusClicksOk returns a tuple with the BonusClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetBonusClicksOk() (*int64, bool) {
	if o == nil || IsNil(o.BonusClicks) {
		return nil, false
	}
	return o.BonusClicks, true
}

// HasBonusClicks returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasBonusClicks() bool {
	if o != nil && !IsNil(o.BonusClicks) {
		return true
	}

	return false
}

// SetBonusClicks gets a reference to the given int64 and assigns it to the BonusClicks field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetBonusClicks(v int64) {
	o.BonusClicks = &v
}

// GetClaimed returns the Claimed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaimed() bool {
	if o == nil || IsNil(o.Claimed) {
		var ret bool
		return ret
	}
	return *o.Claimed
}

// GetClaimedOk returns a tuple with the Claimed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaimedOk() (*bool, bool) {
	if o == nil || IsNil(o.Claimed) {
		return nil, false
	}
	return o.Claimed, true
}

// HasClaimed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaimed() bool {
	if o != nil && !IsNil(o.Claimed) {
		return true
	}

	return false
}

// SetClaimed gets a reference to the given bool and assigns it to the Claimed field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaimed(v bool) {
	o.Claimed = &v
}

// GetClaims0 returns the Claims0 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims0() int64 {
	if o == nil || IsNil(o.Claims0) {
		var ret int64
		return ret
	}
	return *o.Claims0
}

// GetClaims0Ok returns a tuple with the Claims0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims0Ok() (*int64, bool) {
	if o == nil || IsNil(o.Claims0) {
		return nil, false
	}
	return o.Claims0, true
}

// HasClaims0 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaims0() bool {
	if o != nil && !IsNil(o.Claims0) {
		return true
	}

	return false
}

// SetClaims0 gets a reference to the given int64 and assigns it to the Claims0 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaims0(v int64) {
	o.Claims0 = &v
}

// GetClaims1 returns the Claims1 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims1() int64 {
	if o == nil || IsNil(o.Claims1) {
		var ret int64
		return ret
	}
	return *o.Claims1
}

// GetClaims1Ok returns a tuple with the Claims1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims1Ok() (*int64, bool) {
	if o == nil || IsNil(o.Claims1) {
		return nil, false
	}
	return o.Claims1, true
}

// HasClaims1 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaims1() bool {
	if o != nil && !IsNil(o.Claims1) {
		return true
	}

	return false
}

// SetClaims1 gets a reference to the given int64 and assigns it to the Claims1 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaims1(v int64) {
	o.Claims1 = &v
}

// GetClaims2 returns the Claims2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims2() int64 {
	if o == nil || IsNil(o.Claims2) {
		var ret int64
		return ret
	}
	return *o.Claims2
}

// GetClaims2Ok returns a tuple with the Claims2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims2Ok() (*int64, bool) {
	if o == nil || IsNil(o.Claims2) {
		return nil, false
	}
	return o.Claims2, true
}

// HasClaims2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaims2() bool {
	if o != nil && !IsNil(o.Claims2) {
		return true
	}

	return false
}

// SetClaims2 gets a reference to the given int64 and assigns it to the Claims2 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaims2(v int64) {
	o.Claims2 = &v
}

// GetClaims3 returns the Claims3 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims3() int64 {
	if o == nil || IsNil(o.Claims3) {
		var ret int64
		return ret
	}
	return *o.Claims3
}

// GetClaims3Ok returns a tuple with the Claims3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims3Ok() (*int64, bool) {
	if o == nil || IsNil(o.Claims3) {
		return nil, false
	}
	return o.Claims3, true
}

// HasClaims3 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaims3() bool {
	if o != nil && !IsNil(o.Claims3) {
		return true
	}

	return false
}

// SetClaims3 gets a reference to the given int64 and assigns it to the Claims3 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaims3(v int64) {
	o.Claims3 = &v
}

// GetClaims4 returns the Claims4 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims4() int64 {
	if o == nil || IsNil(o.Claims4) {
		var ret int64
		return ret
	}
	return *o.Claims4
}

// GetClaims4Ok returns a tuple with the Claims4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims4Ok() (*int64, bool) {
	if o == nil || IsNil(o.Claims4) {
		return nil, false
	}
	return o.Claims4, true
}

// HasClaims4 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaims4() bool {
	if o != nil && !IsNil(o.Claims4) {
		return true
	}

	return false
}

// SetClaims4 gets a reference to the given int64 and assigns it to the Claims4 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaims4(v int64) {
	o.Claims4 = &v
}

// GetClaims5 returns the Claims5 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims5() int64 {
	if o == nil || IsNil(o.Claims5) {
		var ret int64
		return ret
	}
	return *o.Claims5
}

// GetClaims5Ok returns a tuple with the Claims5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetClaims5Ok() (*int64, bool) {
	if o == nil || IsNil(o.Claims5) {
		return nil, false
	}
	return o.Claims5, true
}

// HasClaims5 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasClaims5() bool {
	if o != nil && !IsNil(o.Claims5) {
		return true
	}

	return false
}

// SetClaims5 gets a reference to the given int64 and assigns it to the Claims5 field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetClaims5(v int64) {
	o.Claims5 = &v
}

// GetLastAttempt returns the LastAttempt field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetLastAttempt() int64 {
	if o == nil || IsNil(o.LastAttempt) {
		var ret int64
		return ret
	}
	return *o.LastAttempt
}

// GetLastAttemptOk returns a tuple with the LastAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetLastAttemptOk() (*int64, bool) {
	if o == nil || IsNil(o.LastAttempt) {
		return nil, false
	}
	return o.LastAttempt, true
}

// HasLastAttempt returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasLastAttempt() bool {
	if o != nil && !IsNil(o.LastAttempt) {
		return true
	}

	return false
}

// SetLastAttempt gets a reference to the given int64 and assigns it to the LastAttempt field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetLastAttempt(v int64) {
	o.LastAttempt = &v
}

// GetLastClaimed returns the LastClaimed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberExperimentationPairings) GetLastClaimed() int64 {
	if o == nil || IsNil(o.LastClaimed) {
		var ret int64
		return ret
	}
	return *o.LastClaimed
}

// GetLastClaimedOk returns a tuple with the LastClaimed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) GetLastClaimedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastClaimed) {
		return nil, false
	}
	return o.LastClaimed, true
}

// HasLastClaimed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberExperimentationPairings) HasLastClaimed() bool {
	if o != nil && !IsNil(o.LastClaimed) {
		return true
	}

	return false
}

// SetLastClaimed gets a reference to the given int64 and assigns it to the LastClaimed field.
func (o *SkyBlockProfileMemberExperimentationPairings) SetLastClaimed(v int64) {
	o.LastClaimed = &v
}

func (o SkyBlockProfileMemberExperimentationPairings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberExperimentationPairings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BestScore0) {
		toSerialize["best_score_0"] = o.BestScore0
	}
	if !IsNil(o.BestScore1) {
		toSerialize["best_score_1"] = o.BestScore1
	}
	if !IsNil(o.BestScore2) {
		toSerialize["best_score_2"] = o.BestScore2
	}
	if !IsNil(o.BestScore3) {
		toSerialize["best_score_3"] = o.BestScore3
	}
	if !IsNil(o.BestScore4) {
		toSerialize["best_score_4"] = o.BestScore4
	}
	if !IsNil(o.BestScore5) {
		toSerialize["best_score_5"] = o.BestScore5
	}
	if !IsNil(o.BonusClicks) {
		toSerialize["bonus_clicks"] = o.BonusClicks
	}
	if !IsNil(o.Claimed) {
		toSerialize["claimed"] = o.Claimed
	}
	if !IsNil(o.Claims0) {
		toSerialize["claims_0"] = o.Claims0
	}
	if !IsNil(o.Claims1) {
		toSerialize["claims_1"] = o.Claims1
	}
	if !IsNil(o.Claims2) {
		toSerialize["claims_2"] = o.Claims2
	}
	if !IsNil(o.Claims3) {
		toSerialize["claims_3"] = o.Claims3
	}
	if !IsNil(o.Claims4) {
		toSerialize["claims_4"] = o.Claims4
	}
	if !IsNil(o.Claims5) {
		toSerialize["claims_5"] = o.Claims5
	}
	if !IsNil(o.LastAttempt) {
		toSerialize["last_attempt"] = o.LastAttempt
	}
	if !IsNil(o.LastClaimed) {
		toSerialize["last_claimed"] = o.LastClaimed
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberExperimentationPairings struct {
	value *SkyBlockProfileMemberExperimentationPairings
	isSet bool
}

func (v NullableSkyBlockProfileMemberExperimentationPairings) Get() *SkyBlockProfileMemberExperimentationPairings {
	return v.value
}

func (v *NullableSkyBlockProfileMemberExperimentationPairings) Set(val *SkyBlockProfileMemberExperimentationPairings) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberExperimentationPairings) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberExperimentationPairings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberExperimentationPairings(val *SkyBlockProfileMemberExperimentationPairings) *NullableSkyBlockProfileMemberExperimentationPairings {
	return &NullableSkyBlockProfileMemberExperimentationPairings{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberExperimentationPairings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberExperimentationPairings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
