/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockBazaar type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockBazaar{}

// SkyBlockBazaar struct for SkyBlockBazaar
type SkyBlockBazaar struct {
	LastUpdated int64                  `json:"lastUpdated"`
	Products    SkyBlockBazaarProducts `json:"products"`
	Success     bool                   `json:"success"`
}

type _SkyBlockBazaar SkyBlockBazaar

// NewSkyBlockBazaar instantiates a new SkyBlockBazaar object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockBazaar(lastUpdated int64, products SkyBlockBazaarProducts, success bool) *SkyBlockBazaar {
	this := SkyBlockBazaar{}
	this.LastUpdated = lastUpdated
	this.Products = products
	this.Success = success
	return &this
}

// NewSkyBlockBazaarWithDefaults instantiates a new SkyBlockBazaar object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockBazaarWithDefaults() *SkyBlockBazaar {
	this := SkyBlockBazaar{}
	return &this
}

// GetLastUpdated returns the LastUpdated field value
func (o *SkyBlockBazaar) GetLastUpdated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaar) GetLastUpdatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *SkyBlockBazaar) SetLastUpdated(v int64) {
	o.LastUpdated = v
}

// GetProducts returns the Products field value
func (o *SkyBlockBazaar) GetProducts() SkyBlockBazaarProducts {
	if o == nil {
		var ret SkyBlockBazaarProducts
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaar) GetProductsOk() (*SkyBlockBazaarProducts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Products, true
}

// SetProducts sets field value
func (o *SkyBlockBazaar) SetProducts(v SkyBlockBazaarProducts) {
	o.Products = v
}

// GetSuccess returns the Success field value
func (o *SkyBlockBazaar) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *SkyBlockBazaar) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *SkyBlockBazaar) SetSuccess(v bool) {
	o.Success = v
}

func (o SkyBlockBazaar) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockBazaar) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lastUpdated"] = o.LastUpdated
	toSerialize["products"] = o.Products
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

func (o *SkyBlockBazaar) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lastUpdated",
		"products",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockBazaar := _SkyBlockBazaar{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockBazaar)

	if err != nil {
		return err
	}

	*o = SkyBlockBazaar(varSkyBlockBazaar)

	return err
}

type NullableSkyBlockBazaar struct {
	value *SkyBlockBazaar
	isSet bool
}

func (v NullableSkyBlockBazaar) Get() *SkyBlockBazaar {
	return v.value
}

func (v *NullableSkyBlockBazaar) Set(val *SkyBlockBazaar) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockBazaar) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockBazaar) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockBazaar(val *SkyBlockBazaar) *NullableSkyBlockBazaar {
	return &NullableSkyBlockBazaar{value: val, isSet: true}
}

func (v NullableSkyBlockBazaar) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockBazaar) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
