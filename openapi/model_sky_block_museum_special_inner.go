/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockMuseumSpecialInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockMuseumSpecialInner{}

// SkyBlockMuseumSpecialInner struct for SkyBlockMuseumSpecialInner
type SkyBlockMuseumSpecialInner struct {
	DonatedTime *int64                 `json:"donated_time,omitempty"`
	Items       map[string]interface{} `json:"items,omitempty"`
}

// NewSkyBlockMuseumSpecialInner instantiates a new SkyBlockMuseumSpecialInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockMuseumSpecialInner() *SkyBlockMuseumSpecialInner {
	this := SkyBlockMuseumSpecialInner{}
	return &this
}

// NewSkyBlockMuseumSpecialInnerWithDefaults instantiates a new SkyBlockMuseumSpecialInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockMuseumSpecialInnerWithDefaults() *SkyBlockMuseumSpecialInner {
	this := SkyBlockMuseumSpecialInner{}
	return &this
}

// GetDonatedTime returns the DonatedTime field value if set, zero value otherwise.
func (o *SkyBlockMuseumSpecialInner) GetDonatedTime() int64 {
	if o == nil || IsNil(o.DonatedTime) {
		var ret int64
		return ret
	}
	return *o.DonatedTime
}

// GetDonatedTimeOk returns a tuple with the DonatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumSpecialInner) GetDonatedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.DonatedTime) {
		return nil, false
	}
	return o.DonatedTime, true
}

// HasDonatedTime returns a boolean if a field has been set.
func (o *SkyBlockMuseumSpecialInner) HasDonatedTime() bool {
	if o != nil && !IsNil(o.DonatedTime) {
		return true
	}

	return false
}

// SetDonatedTime gets a reference to the given int64 and assigns it to the DonatedTime field.
func (o *SkyBlockMuseumSpecialInner) SetDonatedTime(v int64) {
	o.DonatedTime = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SkyBlockMuseumSpecialInner) GetItems() map[string]interface{} {
	if o == nil || IsNil(o.Items) {
		var ret map[string]interface{}
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockMuseumSpecialInner) GetItemsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Items) {
		return map[string]interface{}{}, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SkyBlockMuseumSpecialInner) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given map[string]interface{} and assigns it to the Items field.
func (o *SkyBlockMuseumSpecialInner) SetItems(v map[string]interface{}) {
	o.Items = v
}

func (o SkyBlockMuseumSpecialInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockMuseumSpecialInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DonatedTime) {
		toSerialize["donated_time"] = o.DonatedTime
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableSkyBlockMuseumSpecialInner struct {
	value *SkyBlockMuseumSpecialInner
	isSet bool
}

func (v NullableSkyBlockMuseumSpecialInner) Get() *SkyBlockMuseumSpecialInner {
	return v.value
}

func (v *NullableSkyBlockMuseumSpecialInner) Set(val *SkyBlockMuseumSpecialInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockMuseumSpecialInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockMuseumSpecialInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockMuseumSpecialInner(val *SkyBlockMuseumSpecialInner) *NullableSkyBlockMuseumSpecialInner {
	return &NullableSkyBlockMuseumSpecialInner{value: val, isSet: true}
}

func (v NullableSkyBlockMuseumSpecialInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockMuseumSpecialInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
