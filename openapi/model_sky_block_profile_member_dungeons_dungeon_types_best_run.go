/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberDungeonsDungeonTypesBestRun type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberDungeonsDungeonTypesBestRun{}

// SkyBlockProfileMemberDungeonsDungeonTypesBestRun struct for SkyBlockProfileMemberDungeonsDungeonTypesBestRun
type SkyBlockProfileMemberDungeonsDungeonTypesBestRun struct {
	AllyHealing      *float64                                          `json:"ally_healing,omitempty"`
	DamageDealt      float64                                           `json:"damage_dealt"`
	DamageMitigated  *float64                                          `json:"damage_mitigated,omitempty"`
	Deaths           int64                                             `json:"deaths"`
	DungeonClass     SkyBlockProfileMemberDungeonsSelectedDungeonClass `json:"dungeon_class"`
	ElapsedTime      int64                                             `json:"elapsed_time"`
	MobsKilled       int64                                             `json:"mobs_killed"`
	ScoreBonus       int64                                             `json:"score_bonus"`
	ScoreExploration int64                                             `json:"score_exploration"`
	ScoreSkill       int64                                             `json:"score_skill"`
	ScoreSpeed       int64                                             `json:"score_speed"`
	SecretsFound     int64                                             `json:"secrets_found"`
	Teammates        []string                                          `json:"teammates"`
	Timestamp        int64                                             `json:"timestamp"`
}

type _SkyBlockProfileMemberDungeonsDungeonTypesBestRun SkyBlockProfileMemberDungeonsDungeonTypesBestRun

// NewSkyBlockProfileMemberDungeonsDungeonTypesBestRun instantiates a new SkyBlockProfileMemberDungeonsDungeonTypesBestRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberDungeonsDungeonTypesBestRun(damageDealt float64, deaths int64, dungeonClass SkyBlockProfileMemberDungeonsSelectedDungeonClass, elapsedTime int64, mobsKilled int64, scoreBonus int64, scoreExploration int64, scoreSkill int64, scoreSpeed int64, secretsFound int64, teammates []string, timestamp int64) *SkyBlockProfileMemberDungeonsDungeonTypesBestRun {
	this := SkyBlockProfileMemberDungeonsDungeonTypesBestRun{}
	this.DamageDealt = damageDealt
	this.Deaths = deaths
	this.DungeonClass = dungeonClass
	this.ElapsedTime = elapsedTime
	this.MobsKilled = mobsKilled
	this.ScoreBonus = scoreBonus
	this.ScoreExploration = scoreExploration
	this.ScoreSkill = scoreSkill
	this.ScoreSpeed = scoreSpeed
	this.SecretsFound = secretsFound
	this.Teammates = teammates
	this.Timestamp = timestamp
	return &this
}

// NewSkyBlockProfileMemberDungeonsDungeonTypesBestRunWithDefaults instantiates a new SkyBlockProfileMemberDungeonsDungeonTypesBestRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberDungeonsDungeonTypesBestRunWithDefaults() *SkyBlockProfileMemberDungeonsDungeonTypesBestRun {
	this := SkyBlockProfileMemberDungeonsDungeonTypesBestRun{}
	return &this
}

// GetAllyHealing returns the AllyHealing field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetAllyHealing() float64 {
	if o == nil || IsNil(o.AllyHealing) {
		var ret float64
		return ret
	}
	return *o.AllyHealing
}

// GetAllyHealingOk returns a tuple with the AllyHealing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetAllyHealingOk() (*float64, bool) {
	if o == nil || IsNil(o.AllyHealing) {
		return nil, false
	}
	return o.AllyHealing, true
}

// HasAllyHealing returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) HasAllyHealing() bool {
	if o != nil && !IsNil(o.AllyHealing) {
		return true
	}

	return false
}

// SetAllyHealing gets a reference to the given float64 and assigns it to the AllyHealing field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetAllyHealing(v float64) {
	o.AllyHealing = &v
}

// GetDamageDealt returns the DamageDealt field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDamageDealt() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.DamageDealt
}

// GetDamageDealtOk returns a tuple with the DamageDealt field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDamageDealtOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DamageDealt, true
}

// SetDamageDealt sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetDamageDealt(v float64) {
	o.DamageDealt = v
}

// GetDamageMitigated returns the DamageMitigated field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDamageMitigated() float64 {
	if o == nil || IsNil(o.DamageMitigated) {
		var ret float64
		return ret
	}
	return *o.DamageMitigated
}

// GetDamageMitigatedOk returns a tuple with the DamageMitigated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDamageMitigatedOk() (*float64, bool) {
	if o == nil || IsNil(o.DamageMitigated) {
		return nil, false
	}
	return o.DamageMitigated, true
}

// HasDamageMitigated returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) HasDamageMitigated() bool {
	if o != nil && !IsNil(o.DamageMitigated) {
		return true
	}

	return false
}

// SetDamageMitigated gets a reference to the given float64 and assigns it to the DamageMitigated field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetDamageMitigated(v float64) {
	o.DamageMitigated = &v
}

// GetDeaths returns the Deaths field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDeaths() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Deaths
}

// GetDeathsOk returns a tuple with the Deaths field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDeathsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deaths, true
}

// SetDeaths sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetDeaths(v int64) {
	o.Deaths = v
}

// GetDungeonClass returns the DungeonClass field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDungeonClass() SkyBlockProfileMemberDungeonsSelectedDungeonClass {
	if o == nil {
		var ret SkyBlockProfileMemberDungeonsSelectedDungeonClass
		return ret
	}

	return o.DungeonClass
}

// GetDungeonClassOk returns a tuple with the DungeonClass field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetDungeonClassOk() (*SkyBlockProfileMemberDungeonsSelectedDungeonClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DungeonClass, true
}

// SetDungeonClass sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetDungeonClass(v SkyBlockProfileMemberDungeonsSelectedDungeonClass) {
	o.DungeonClass = v
}

// GetElapsedTime returns the ElapsedTime field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetElapsedTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ElapsedTime
}

// GetElapsedTimeOk returns a tuple with the ElapsedTime field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetElapsedTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElapsedTime, true
}

// SetElapsedTime sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetElapsedTime(v int64) {
	o.ElapsedTime = v
}

// GetMobsKilled returns the MobsKilled field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetMobsKilled() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MobsKilled
}

// GetMobsKilledOk returns a tuple with the MobsKilled field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetMobsKilledOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MobsKilled, true
}

// SetMobsKilled sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetMobsKilled(v int64) {
	o.MobsKilled = v
}

// GetScoreBonus returns the ScoreBonus field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreBonus() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ScoreBonus
}

// GetScoreBonusOk returns a tuple with the ScoreBonus field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreBonusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoreBonus, true
}

// SetScoreBonus sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetScoreBonus(v int64) {
	o.ScoreBonus = v
}

// GetScoreExploration returns the ScoreExploration field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreExploration() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ScoreExploration
}

// GetScoreExplorationOk returns a tuple with the ScoreExploration field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreExplorationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoreExploration, true
}

// SetScoreExploration sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetScoreExploration(v int64) {
	o.ScoreExploration = v
}

// GetScoreSkill returns the ScoreSkill field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreSkill() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ScoreSkill
}

// GetScoreSkillOk returns a tuple with the ScoreSkill field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreSkillOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoreSkill, true
}

// SetScoreSkill sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetScoreSkill(v int64) {
	o.ScoreSkill = v
}

// GetScoreSpeed returns the ScoreSpeed field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreSpeed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ScoreSpeed
}

// GetScoreSpeedOk returns a tuple with the ScoreSpeed field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetScoreSpeedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoreSpeed, true
}

// SetScoreSpeed sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetScoreSpeed(v int64) {
	o.ScoreSpeed = v
}

// GetSecretsFound returns the SecretsFound field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetSecretsFound() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SecretsFound
}

// GetSecretsFoundOk returns a tuple with the SecretsFound field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetSecretsFoundOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretsFound, true
}

// SetSecretsFound sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetSecretsFound(v int64) {
	o.SecretsFound = v
}

// GetTeammates returns the Teammates field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetTeammates() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Teammates
}

// GetTeammatesOk returns a tuple with the Teammates field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetTeammatesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Teammates, true
}

// SetTeammates sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetTeammates(v []string) {
	o.Teammates = v
}

// GetTimestamp returns the Timestamp field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) SetTimestamp(v int64) {
	o.Timestamp = v
}

func (o SkyBlockProfileMemberDungeonsDungeonTypesBestRun) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberDungeonsDungeonTypesBestRun) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllyHealing) {
		toSerialize["ally_healing"] = o.AllyHealing
	}
	toSerialize["damage_dealt"] = o.DamageDealt
	if !IsNil(o.DamageMitigated) {
		toSerialize["damage_mitigated"] = o.DamageMitigated
	}
	toSerialize["deaths"] = o.Deaths
	toSerialize["dungeon_class"] = o.DungeonClass
	toSerialize["elapsed_time"] = o.ElapsedTime
	toSerialize["mobs_killed"] = o.MobsKilled
	toSerialize["score_bonus"] = o.ScoreBonus
	toSerialize["score_exploration"] = o.ScoreExploration
	toSerialize["score_skill"] = o.ScoreSkill
	toSerialize["score_speed"] = o.ScoreSpeed
	toSerialize["secrets_found"] = o.SecretsFound
	toSerialize["teammates"] = o.Teammates
	toSerialize["timestamp"] = o.Timestamp
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"damage_dealt",
		"deaths",
		"dungeon_class",
		"elapsed_time",
		"mobs_killed",
		"score_bonus",
		"score_exploration",
		"score_skill",
		"score_speed",
		"secrets_found",
		"teammates",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberDungeonsDungeonTypesBestRun := _SkyBlockProfileMemberDungeonsDungeonTypesBestRun{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberDungeonsDungeonTypesBestRun)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberDungeonsDungeonTypesBestRun(varSkyBlockProfileMemberDungeonsDungeonTypesBestRun)

	return err
}

type NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun struct {
	value *SkyBlockProfileMemberDungeonsDungeonTypesBestRun
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun) Get() *SkyBlockProfileMemberDungeonsDungeonTypesBestRun {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun) Set(val *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun(val *SkyBlockProfileMemberDungeonsDungeonTypesBestRun) *NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun {
	return &NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonTypesBestRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
