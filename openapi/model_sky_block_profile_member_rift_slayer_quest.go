/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberRiftSlayerQuest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRiftSlayerQuest{}

// SkyBlockProfileMemberRiftSlayerQuest struct for SkyBlockProfileMemberRiftSlayerQuest
type SkyBlockProfileMemberRiftSlayerQuest struct {
	CombatXp            *int64                                                   `json:"combat_xp,omitempty"`
	CompletionState     int64                                                    `json:"completion_state"`
	LastKilledMobIsland *SkyBlockProfileMemberRiftSlayerQuestLastKilledMobIsland `json:"last_killed_mob_island,omitempty"`
	RecentMobKills      []SkyBlockProfileMemberRiftSlayerQuestRecentMobKill      `json:"recent_mob_kills,omitempty"`
	Solo                bool                                                     `json:"solo"`
	SpawnTimestamp      *int64                                                   `json:"spawn_timestamp,omitempty"`
	StartTimestamp      int64                                                    `json:"start_timestamp"`
	Tier                int64                                                    `json:"tier"`
	Type                SkyBlockProfileMemberRiftSlayerQuestType                 `json:"type"`
	UsedArmor           bool                                                     `json:"used_armor"`
}

type _SkyBlockProfileMemberRiftSlayerQuest SkyBlockProfileMemberRiftSlayerQuest

// NewSkyBlockProfileMemberRiftSlayerQuest instantiates a new SkyBlockProfileMemberRiftSlayerQuest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRiftSlayerQuest(completionState int64, solo bool, startTimestamp int64, tier int64, type_ SkyBlockProfileMemberRiftSlayerQuestType, usedArmor bool) *SkyBlockProfileMemberRiftSlayerQuest {
	this := SkyBlockProfileMemberRiftSlayerQuest{}
	this.CompletionState = completionState
	this.Solo = solo
	this.StartTimestamp = startTimestamp
	this.Tier = tier
	this.Type = type_
	this.UsedArmor = usedArmor
	return &this
}

// NewSkyBlockProfileMemberRiftSlayerQuestWithDefaults instantiates a new SkyBlockProfileMemberRiftSlayerQuest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftSlayerQuestWithDefaults() *SkyBlockProfileMemberRiftSlayerQuest {
	this := SkyBlockProfileMemberRiftSlayerQuest{}
	return &this
}

// GetCombatXp returns the CombatXp field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetCombatXp() int64 {
	if o == nil || IsNil(o.CombatXp) {
		var ret int64
		return ret
	}
	return *o.CombatXp
}

// GetCombatXpOk returns a tuple with the CombatXp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetCombatXpOk() (*int64, bool) {
	if o == nil || IsNil(o.CombatXp) {
		return nil, false
	}
	return o.CombatXp, true
}

// HasCombatXp returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) HasCombatXp() bool {
	if o != nil && !IsNil(o.CombatXp) {
		return true
	}

	return false
}

// SetCombatXp gets a reference to the given int64 and assigns it to the CombatXp field.
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetCombatXp(v int64) {
	o.CombatXp = &v
}

// GetCompletionState returns the CompletionState field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetCompletionState() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CompletionState
}

// GetCompletionStateOk returns a tuple with the CompletionState field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetCompletionStateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletionState, true
}

// SetCompletionState sets field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetCompletionState(v int64) {
	o.CompletionState = v
}

// GetLastKilledMobIsland returns the LastKilledMobIsland field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetLastKilledMobIsland() SkyBlockProfileMemberRiftSlayerQuestLastKilledMobIsland {
	if o == nil || IsNil(o.LastKilledMobIsland) {
		var ret SkyBlockProfileMemberRiftSlayerQuestLastKilledMobIsland
		return ret
	}
	return *o.LastKilledMobIsland
}

// GetLastKilledMobIslandOk returns a tuple with the LastKilledMobIsland field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetLastKilledMobIslandOk() (*SkyBlockProfileMemberRiftSlayerQuestLastKilledMobIsland, bool) {
	if o == nil || IsNil(o.LastKilledMobIsland) {
		return nil, false
	}
	return o.LastKilledMobIsland, true
}

// HasLastKilledMobIsland returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) HasLastKilledMobIsland() bool {
	if o != nil && !IsNil(o.LastKilledMobIsland) {
		return true
	}

	return false
}

// SetLastKilledMobIsland gets a reference to the given SkyBlockProfileMemberRiftSlayerQuestLastKilledMobIsland and assigns it to the LastKilledMobIsland field.
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetLastKilledMobIsland(v SkyBlockProfileMemberRiftSlayerQuestLastKilledMobIsland) {
	o.LastKilledMobIsland = &v
}

// GetRecentMobKills returns the RecentMobKills field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetRecentMobKills() []SkyBlockProfileMemberRiftSlayerQuestRecentMobKill {
	if o == nil || IsNil(o.RecentMobKills) {
		var ret []SkyBlockProfileMemberRiftSlayerQuestRecentMobKill
		return ret
	}
	return o.RecentMobKills
}

// GetRecentMobKillsOk returns a tuple with the RecentMobKills field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetRecentMobKillsOk() ([]SkyBlockProfileMemberRiftSlayerQuestRecentMobKill, bool) {
	if o == nil || IsNil(o.RecentMobKills) {
		return nil, false
	}
	return o.RecentMobKills, true
}

// HasRecentMobKills returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) HasRecentMobKills() bool {
	if o != nil && !IsNil(o.RecentMobKills) {
		return true
	}

	return false
}

// SetRecentMobKills gets a reference to the given []SkyBlockProfileMemberRiftSlayerQuestRecentMobKill and assigns it to the RecentMobKills field.
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetRecentMobKills(v []SkyBlockProfileMemberRiftSlayerQuestRecentMobKill) {
	o.RecentMobKills = v
}

// GetSolo returns the Solo field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetSolo() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Solo
}

// GetSoloOk returns a tuple with the Solo field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetSoloOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Solo, true
}

// SetSolo sets field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetSolo(v bool) {
	o.Solo = v
}

// GetSpawnTimestamp returns the SpawnTimestamp field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetSpawnTimestamp() int64 {
	if o == nil || IsNil(o.SpawnTimestamp) {
		var ret int64
		return ret
	}
	return *o.SpawnTimestamp
}

// GetSpawnTimestampOk returns a tuple with the SpawnTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetSpawnTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.SpawnTimestamp) {
		return nil, false
	}
	return o.SpawnTimestamp, true
}

// HasSpawnTimestamp returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) HasSpawnTimestamp() bool {
	if o != nil && !IsNil(o.SpawnTimestamp) {
		return true
	}

	return false
}

// SetSpawnTimestamp gets a reference to the given int64 and assigns it to the SpawnTimestamp field.
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetSpawnTimestamp(v int64) {
	o.SpawnTimestamp = &v
}

// GetStartTimestamp returns the StartTimestamp field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetStartTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartTimestamp
}

// GetStartTimestampOk returns a tuple with the StartTimestamp field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetStartTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTimestamp, true
}

// SetStartTimestamp sets field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetStartTimestamp(v int64) {
	o.StartTimestamp = v
}

// GetTier returns the Tier field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetTier() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetTierOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetTier(v int64) {
	o.Tier = v
}

// GetType returns the Type field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetType() SkyBlockProfileMemberRiftSlayerQuestType {
	if o == nil {
		var ret SkyBlockProfileMemberRiftSlayerQuestType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetTypeOk() (*SkyBlockProfileMemberRiftSlayerQuestType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetType(v SkyBlockProfileMemberRiftSlayerQuestType) {
	o.Type = v
}

// GetUsedArmor returns the UsedArmor field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetUsedArmor() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UsedArmor
}

// GetUsedArmorOk returns a tuple with the UsedArmor field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftSlayerQuest) GetUsedArmorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsedArmor, true
}

// SetUsedArmor sets field value
func (o *SkyBlockProfileMemberRiftSlayerQuest) SetUsedArmor(v bool) {
	o.UsedArmor = v
}

func (o SkyBlockProfileMemberRiftSlayerQuest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRiftSlayerQuest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CombatXp) {
		toSerialize["combat_xp"] = o.CombatXp
	}
	toSerialize["completion_state"] = o.CompletionState
	if !IsNil(o.LastKilledMobIsland) {
		toSerialize["last_killed_mob_island"] = o.LastKilledMobIsland
	}
	if !IsNil(o.RecentMobKills) {
		toSerialize["recent_mob_kills"] = o.RecentMobKills
	}
	toSerialize["solo"] = o.Solo
	if !IsNil(o.SpawnTimestamp) {
		toSerialize["spawn_timestamp"] = o.SpawnTimestamp
	}
	toSerialize["start_timestamp"] = o.StartTimestamp
	toSerialize["tier"] = o.Tier
	toSerialize["type"] = o.Type
	toSerialize["used_armor"] = o.UsedArmor
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberRiftSlayerQuest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"completion_state",
		"solo",
		"start_timestamp",
		"tier",
		"type",
		"used_armor",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberRiftSlayerQuest := _SkyBlockProfileMemberRiftSlayerQuest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberRiftSlayerQuest)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberRiftSlayerQuest(varSkyBlockProfileMemberRiftSlayerQuest)

	return err
}

type NullableSkyBlockProfileMemberRiftSlayerQuest struct {
	value *SkyBlockProfileMemberRiftSlayerQuest
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftSlayerQuest) Get() *SkyBlockProfileMemberRiftSlayerQuest {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftSlayerQuest) Set(val *SkyBlockProfileMemberRiftSlayerQuest) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftSlayerQuest) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftSlayerQuest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftSlayerQuest(val *SkyBlockProfileMemberRiftSlayerQuest) *NullableSkyBlockProfileMemberRiftSlayerQuest {
	return &NullableSkyBlockProfileMemberRiftSlayerQuest{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftSlayerQuest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftSlayerQuest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
