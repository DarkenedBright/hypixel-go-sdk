/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberRiftDeadCatsMontezumaType the model 'SkyBlockProfileMemberRiftDeadCatsMontezumaType'
type SkyBlockProfileMemberRiftDeadCatsMontezumaType string

// List of SkyBlockProfileMemberRiftDeadCatsMontezuma_type
const (
	SKYBLOCKPROFILEMEMBERRIFTDEADCATSMONTEZUMATYPE_FRACTURED_MONTEZUMA_SOUL SkyBlockProfileMemberRiftDeadCatsMontezumaType = "FRACTURED_MONTEZUMA_SOUL"
)

// All allowed values of SkyBlockProfileMemberRiftDeadCatsMontezumaType enum
var AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTypeEnumValues = []SkyBlockProfileMemberRiftDeadCatsMontezumaType{
	"FRACTURED_MONTEZUMA_SOUL",
}

func (v *SkyBlockProfileMemberRiftDeadCatsMontezumaType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberRiftDeadCatsMontezumaType(value)
	for _, existing := range AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberRiftDeadCatsMontezumaType", value)
}

// NewSkyBlockProfileMemberRiftDeadCatsMontezumaTypeFromValue returns a pointer to a valid SkyBlockProfileMemberRiftDeadCatsMontezumaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberRiftDeadCatsMontezumaTypeFromValue(v string) (*SkyBlockProfileMemberRiftDeadCatsMontezumaType, error) {
	ev := SkyBlockProfileMemberRiftDeadCatsMontezumaType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberRiftDeadCatsMontezumaType: valid values are %v", v, AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberRiftDeadCatsMontezumaType) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberRiftDeadCatsMontezumaTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberRiftDeadCatsMontezuma_type value
func (v SkyBlockProfileMemberRiftDeadCatsMontezumaType) Ptr() *SkyBlockProfileMemberRiftDeadCatsMontezumaType {
	return &v
}

type NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType struct {
	value *SkyBlockProfileMemberRiftDeadCatsMontezumaType
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType) Get() *SkyBlockProfileMemberRiftDeadCatsMontezumaType {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType) Set(val *SkyBlockProfileMemberRiftDeadCatsMontezumaType) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftDeadCatsMontezumaType(val *SkyBlockProfileMemberRiftDeadCatsMontezumaType) *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType {
	return &NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftDeadCatsMontezumaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
