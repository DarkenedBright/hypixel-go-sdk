/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberJacobsContestUniqueBrackets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberJacobsContestUniqueBrackets{}

// SkyBlockProfileMemberJacobsContestUniqueBrackets struct for SkyBlockProfileMemberJacobsContestUniqueBrackets
type SkyBlockProfileMemberJacobsContestUniqueBrackets struct {
	Bronze   []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType `json:"bronze,omitempty"`
	Diamond  []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType `json:"diamond,omitempty"`
	Gold     []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType `json:"gold,omitempty"`
	Platinum []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType `json:"platinum,omitempty"`
	Silver   []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType `json:"silver,omitempty"`
}

// NewSkyBlockProfileMemberJacobsContestUniqueBrackets instantiates a new SkyBlockProfileMemberJacobsContestUniqueBrackets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberJacobsContestUniqueBrackets() *SkyBlockProfileMemberJacobsContestUniqueBrackets {
	this := SkyBlockProfileMemberJacobsContestUniqueBrackets{}
	return &this
}

// NewSkyBlockProfileMemberJacobsContestUniqueBracketsWithDefaults instantiates a new SkyBlockProfileMemberJacobsContestUniqueBrackets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberJacobsContestUniqueBracketsWithDefaults() *SkyBlockProfileMemberJacobsContestUniqueBrackets {
	this := SkyBlockProfileMemberJacobsContestUniqueBrackets{}
	return &this
}

// GetBronze returns the Bronze field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetBronze() []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType {
	if o == nil || IsNil(o.Bronze) {
		var ret []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType
		return ret
	}
	return o.Bronze
}

// GetBronzeOk returns a tuple with the Bronze field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetBronzeOk() ([]SkyBlockProfileMemberJacobsContestUniqueBracketsCropType, bool) {
	if o == nil || IsNil(o.Bronze) {
		return nil, false
	}
	return o.Bronze, true
}

// HasBronze returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) HasBronze() bool {
	if o != nil && !IsNil(o.Bronze) {
		return true
	}

	return false
}

// SetBronze gets a reference to the given []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType and assigns it to the Bronze field.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) SetBronze(v []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType) {
	o.Bronze = v
}

// GetDiamond returns the Diamond field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetDiamond() []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType {
	if o == nil || IsNil(o.Diamond) {
		var ret []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType
		return ret
	}
	return o.Diamond
}

// GetDiamondOk returns a tuple with the Diamond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetDiamondOk() ([]SkyBlockProfileMemberJacobsContestUniqueBracketsCropType, bool) {
	if o == nil || IsNil(o.Diamond) {
		return nil, false
	}
	return o.Diamond, true
}

// HasDiamond returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) HasDiamond() bool {
	if o != nil && !IsNil(o.Diamond) {
		return true
	}

	return false
}

// SetDiamond gets a reference to the given []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType and assigns it to the Diamond field.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) SetDiamond(v []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType) {
	o.Diamond = v
}

// GetGold returns the Gold field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetGold() []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType {
	if o == nil || IsNil(o.Gold) {
		var ret []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType
		return ret
	}
	return o.Gold
}

// GetGoldOk returns a tuple with the Gold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetGoldOk() ([]SkyBlockProfileMemberJacobsContestUniqueBracketsCropType, bool) {
	if o == nil || IsNil(o.Gold) {
		return nil, false
	}
	return o.Gold, true
}

// HasGold returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) HasGold() bool {
	if o != nil && !IsNil(o.Gold) {
		return true
	}

	return false
}

// SetGold gets a reference to the given []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType and assigns it to the Gold field.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) SetGold(v []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType) {
	o.Gold = v
}

// GetPlatinum returns the Platinum field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetPlatinum() []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType {
	if o == nil || IsNil(o.Platinum) {
		var ret []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType
		return ret
	}
	return o.Platinum
}

// GetPlatinumOk returns a tuple with the Platinum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetPlatinumOk() ([]SkyBlockProfileMemberJacobsContestUniqueBracketsCropType, bool) {
	if o == nil || IsNil(o.Platinum) {
		return nil, false
	}
	return o.Platinum, true
}

// HasPlatinum returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) HasPlatinum() bool {
	if o != nil && !IsNil(o.Platinum) {
		return true
	}

	return false
}

// SetPlatinum gets a reference to the given []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType and assigns it to the Platinum field.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) SetPlatinum(v []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType) {
	o.Platinum = v
}

// GetSilver returns the Silver field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetSilver() []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType {
	if o == nil || IsNil(o.Silver) {
		var ret []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType
		return ret
	}
	return o.Silver
}

// GetSilverOk returns a tuple with the Silver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) GetSilverOk() ([]SkyBlockProfileMemberJacobsContestUniqueBracketsCropType, bool) {
	if o == nil || IsNil(o.Silver) {
		return nil, false
	}
	return o.Silver, true
}

// HasSilver returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) HasSilver() bool {
	if o != nil && !IsNil(o.Silver) {
		return true
	}

	return false
}

// SetSilver gets a reference to the given []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType and assigns it to the Silver field.
func (o *SkyBlockProfileMemberJacobsContestUniqueBrackets) SetSilver(v []SkyBlockProfileMemberJacobsContestUniqueBracketsCropType) {
	o.Silver = v
}

func (o SkyBlockProfileMemberJacobsContestUniqueBrackets) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberJacobsContestUniqueBrackets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bronze) {
		toSerialize["bronze"] = o.Bronze
	}
	if !IsNil(o.Diamond) {
		toSerialize["diamond"] = o.Diamond
	}
	if !IsNil(o.Gold) {
		toSerialize["gold"] = o.Gold
	}
	if !IsNil(o.Platinum) {
		toSerialize["platinum"] = o.Platinum
	}
	if !IsNil(o.Silver) {
		toSerialize["silver"] = o.Silver
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberJacobsContestUniqueBrackets struct {
	value *SkyBlockProfileMemberJacobsContestUniqueBrackets
	isSet bool
}

func (v NullableSkyBlockProfileMemberJacobsContestUniqueBrackets) Get() *SkyBlockProfileMemberJacobsContestUniqueBrackets {
	return v.value
}

func (v *NullableSkyBlockProfileMemberJacobsContestUniqueBrackets) Set(val *SkyBlockProfileMemberJacobsContestUniqueBrackets) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberJacobsContestUniqueBrackets) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberJacobsContestUniqueBrackets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberJacobsContestUniqueBrackets(val *SkyBlockProfileMemberJacobsContestUniqueBrackets) *NullableSkyBlockProfileMemberJacobsContestUniqueBrackets {
	return &NullableSkyBlockProfileMemberJacobsContestUniqueBrackets{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberJacobsContestUniqueBrackets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberJacobsContestUniqueBrackets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
