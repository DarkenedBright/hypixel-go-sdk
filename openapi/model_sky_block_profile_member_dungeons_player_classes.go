/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberDungeonsPlayerClasses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberDungeonsPlayerClasses{}

// SkyBlockProfileMemberDungeonsPlayerClasses struct for SkyBlockProfileMemberDungeonsPlayerClasses
type SkyBlockProfileMemberDungeonsPlayerClasses struct {
	Archer  *SkyBlockProfileMemberDungeonsPlayerClassesClass `json:"archer,omitempty"`
	Berserk *SkyBlockProfileMemberDungeonsPlayerClassesClass `json:"berserk,omitempty"`
	Healer  *SkyBlockProfileMemberDungeonsPlayerClassesClass `json:"healer,omitempty"`
	Mage    *SkyBlockProfileMemberDungeonsPlayerClassesClass `json:"mage,omitempty"`
	Tank    *SkyBlockProfileMemberDungeonsPlayerClassesClass `json:"tank,omitempty"`
}

// NewSkyBlockProfileMemberDungeonsPlayerClasses instantiates a new SkyBlockProfileMemberDungeonsPlayerClasses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberDungeonsPlayerClasses() *SkyBlockProfileMemberDungeonsPlayerClasses {
	this := SkyBlockProfileMemberDungeonsPlayerClasses{}
	return &this
}

// NewSkyBlockProfileMemberDungeonsPlayerClassesWithDefaults instantiates a new SkyBlockProfileMemberDungeonsPlayerClasses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberDungeonsPlayerClassesWithDefaults() *SkyBlockProfileMemberDungeonsPlayerClasses {
	this := SkyBlockProfileMemberDungeonsPlayerClasses{}
	return &this
}

// GetArcher returns the Archer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetArcher() SkyBlockProfileMemberDungeonsPlayerClassesClass {
	if o == nil || IsNil(o.Archer) {
		var ret SkyBlockProfileMemberDungeonsPlayerClassesClass
		return ret
	}
	return *o.Archer
}

// GetArcherOk returns a tuple with the Archer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetArcherOk() (*SkyBlockProfileMemberDungeonsPlayerClassesClass, bool) {
	if o == nil || IsNil(o.Archer) {
		return nil, false
	}
	return o.Archer, true
}

// HasArcher returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) HasArcher() bool {
	if o != nil && !IsNil(o.Archer) {
		return true
	}

	return false
}

// SetArcher gets a reference to the given SkyBlockProfileMemberDungeonsPlayerClassesClass and assigns it to the Archer field.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) SetArcher(v SkyBlockProfileMemberDungeonsPlayerClassesClass) {
	o.Archer = &v
}

// GetBerserk returns the Berserk field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetBerserk() SkyBlockProfileMemberDungeonsPlayerClassesClass {
	if o == nil || IsNil(o.Berserk) {
		var ret SkyBlockProfileMemberDungeonsPlayerClassesClass
		return ret
	}
	return *o.Berserk
}

// GetBerserkOk returns a tuple with the Berserk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetBerserkOk() (*SkyBlockProfileMemberDungeonsPlayerClassesClass, bool) {
	if o == nil || IsNil(o.Berserk) {
		return nil, false
	}
	return o.Berserk, true
}

// HasBerserk returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) HasBerserk() bool {
	if o != nil && !IsNil(o.Berserk) {
		return true
	}

	return false
}

// SetBerserk gets a reference to the given SkyBlockProfileMemberDungeonsPlayerClassesClass and assigns it to the Berserk field.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) SetBerserk(v SkyBlockProfileMemberDungeonsPlayerClassesClass) {
	o.Berserk = &v
}

// GetHealer returns the Healer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetHealer() SkyBlockProfileMemberDungeonsPlayerClassesClass {
	if o == nil || IsNil(o.Healer) {
		var ret SkyBlockProfileMemberDungeonsPlayerClassesClass
		return ret
	}
	return *o.Healer
}

// GetHealerOk returns a tuple with the Healer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetHealerOk() (*SkyBlockProfileMemberDungeonsPlayerClassesClass, bool) {
	if o == nil || IsNil(o.Healer) {
		return nil, false
	}
	return o.Healer, true
}

// HasHealer returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) HasHealer() bool {
	if o != nil && !IsNil(o.Healer) {
		return true
	}

	return false
}

// SetHealer gets a reference to the given SkyBlockProfileMemberDungeonsPlayerClassesClass and assigns it to the Healer field.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) SetHealer(v SkyBlockProfileMemberDungeonsPlayerClassesClass) {
	o.Healer = &v
}

// GetMage returns the Mage field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetMage() SkyBlockProfileMemberDungeonsPlayerClassesClass {
	if o == nil || IsNil(o.Mage) {
		var ret SkyBlockProfileMemberDungeonsPlayerClassesClass
		return ret
	}
	return *o.Mage
}

// GetMageOk returns a tuple with the Mage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetMageOk() (*SkyBlockProfileMemberDungeonsPlayerClassesClass, bool) {
	if o == nil || IsNil(o.Mage) {
		return nil, false
	}
	return o.Mage, true
}

// HasMage returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) HasMage() bool {
	if o != nil && !IsNil(o.Mage) {
		return true
	}

	return false
}

// SetMage gets a reference to the given SkyBlockProfileMemberDungeonsPlayerClassesClass and assigns it to the Mage field.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) SetMage(v SkyBlockProfileMemberDungeonsPlayerClassesClass) {
	o.Mage = &v
}

// GetTank returns the Tank field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetTank() SkyBlockProfileMemberDungeonsPlayerClassesClass {
	if o == nil || IsNil(o.Tank) {
		var ret SkyBlockProfileMemberDungeonsPlayerClassesClass
		return ret
	}
	return *o.Tank
}

// GetTankOk returns a tuple with the Tank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) GetTankOk() (*SkyBlockProfileMemberDungeonsPlayerClassesClass, bool) {
	if o == nil || IsNil(o.Tank) {
		return nil, false
	}
	return o.Tank, true
}

// HasTank returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) HasTank() bool {
	if o != nil && !IsNil(o.Tank) {
		return true
	}

	return false
}

// SetTank gets a reference to the given SkyBlockProfileMemberDungeonsPlayerClassesClass and assigns it to the Tank field.
func (o *SkyBlockProfileMemberDungeonsPlayerClasses) SetTank(v SkyBlockProfileMemberDungeonsPlayerClassesClass) {
	o.Tank = &v
}

func (o SkyBlockProfileMemberDungeonsPlayerClasses) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberDungeonsPlayerClasses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Archer) {
		toSerialize["archer"] = o.Archer
	}
	if !IsNil(o.Berserk) {
		toSerialize["berserk"] = o.Berserk
	}
	if !IsNil(o.Healer) {
		toSerialize["healer"] = o.Healer
	}
	if !IsNil(o.Mage) {
		toSerialize["mage"] = o.Mage
	}
	if !IsNil(o.Tank) {
		toSerialize["tank"] = o.Tank
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberDungeonsPlayerClasses struct {
	value *SkyBlockProfileMemberDungeonsPlayerClasses
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsPlayerClasses) Get() *SkyBlockProfileMemberDungeonsPlayerClasses {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsPlayerClasses) Set(val *SkyBlockProfileMemberDungeonsPlayerClasses) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsPlayerClasses) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsPlayerClasses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsPlayerClasses(val *SkyBlockProfileMemberDungeonsPlayerClasses) *NullableSkyBlockProfileMemberDungeonsPlayerClasses {
	return &NullableSkyBlockProfileMemberDungeonsPlayerClasses{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsPlayerClasses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsPlayerClasses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
