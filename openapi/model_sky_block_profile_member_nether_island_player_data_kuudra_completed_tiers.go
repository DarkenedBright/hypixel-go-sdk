/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers{}

// SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers struct for SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers
type SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers struct {
	Burning             *int64 `json:"burning,omitempty"`
	Fiery               *int64 `json:"fiery,omitempty"`
	HighestWaveBurning  *int64 `json:"highest_wave_burning,omitempty"`
	HighestWaveFiery    *int64 `json:"highest_wave_fiery,omitempty"`
	HighestWaveHot      *int64 `json:"highest_wave_hot,omitempty"`
	HighestWaveInfernal *int64 `json:"highest_wave_infernal,omitempty"`
	HighestWaveNone     *int64 `json:"highest_wave_none,omitempty"`
	Hot                 *int64 `json:"hot,omitempty"`
	Infernal            *int64 `json:"infernal,omitempty"`
	None                *int64 `json:"none,omitempty"`
}

// NewSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers instantiates a new SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers() *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers {
	this := SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers{}
	return &this
}

// NewSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiersWithDefaults instantiates a new SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiersWithDefaults() *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers {
	this := SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers{}
	return &this
}

// GetBurning returns the Burning field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetBurning() int64 {
	if o == nil || IsNil(o.Burning) {
		var ret int64
		return ret
	}
	return *o.Burning
}

// GetBurningOk returns a tuple with the Burning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetBurningOk() (*int64, bool) {
	if o == nil || IsNil(o.Burning) {
		return nil, false
	}
	return o.Burning, true
}

// HasBurning returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasBurning() bool {
	if o != nil && !IsNil(o.Burning) {
		return true
	}

	return false
}

// SetBurning gets a reference to the given int64 and assigns it to the Burning field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetBurning(v int64) {
	o.Burning = &v
}

// GetFiery returns the Fiery field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetFiery() int64 {
	if o == nil || IsNil(o.Fiery) {
		var ret int64
		return ret
	}
	return *o.Fiery
}

// GetFieryOk returns a tuple with the Fiery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetFieryOk() (*int64, bool) {
	if o == nil || IsNil(o.Fiery) {
		return nil, false
	}
	return o.Fiery, true
}

// HasFiery returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasFiery() bool {
	if o != nil && !IsNil(o.Fiery) {
		return true
	}

	return false
}

// SetFiery gets a reference to the given int64 and assigns it to the Fiery field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetFiery(v int64) {
	o.Fiery = &v
}

// GetHighestWaveBurning returns the HighestWaveBurning field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveBurning() int64 {
	if o == nil || IsNil(o.HighestWaveBurning) {
		var ret int64
		return ret
	}
	return *o.HighestWaveBurning
}

// GetHighestWaveBurningOk returns a tuple with the HighestWaveBurning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveBurningOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestWaveBurning) {
		return nil, false
	}
	return o.HighestWaveBurning, true
}

// HasHighestWaveBurning returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasHighestWaveBurning() bool {
	if o != nil && !IsNil(o.HighestWaveBurning) {
		return true
	}

	return false
}

// SetHighestWaveBurning gets a reference to the given int64 and assigns it to the HighestWaveBurning field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetHighestWaveBurning(v int64) {
	o.HighestWaveBurning = &v
}

// GetHighestWaveFiery returns the HighestWaveFiery field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveFiery() int64 {
	if o == nil || IsNil(o.HighestWaveFiery) {
		var ret int64
		return ret
	}
	return *o.HighestWaveFiery
}

// GetHighestWaveFieryOk returns a tuple with the HighestWaveFiery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveFieryOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestWaveFiery) {
		return nil, false
	}
	return o.HighestWaveFiery, true
}

// HasHighestWaveFiery returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasHighestWaveFiery() bool {
	if o != nil && !IsNil(o.HighestWaveFiery) {
		return true
	}

	return false
}

// SetHighestWaveFiery gets a reference to the given int64 and assigns it to the HighestWaveFiery field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetHighestWaveFiery(v int64) {
	o.HighestWaveFiery = &v
}

// GetHighestWaveHot returns the HighestWaveHot field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveHot() int64 {
	if o == nil || IsNil(o.HighestWaveHot) {
		var ret int64
		return ret
	}
	return *o.HighestWaveHot
}

// GetHighestWaveHotOk returns a tuple with the HighestWaveHot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveHotOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestWaveHot) {
		return nil, false
	}
	return o.HighestWaveHot, true
}

// HasHighestWaveHot returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasHighestWaveHot() bool {
	if o != nil && !IsNil(o.HighestWaveHot) {
		return true
	}

	return false
}

// SetHighestWaveHot gets a reference to the given int64 and assigns it to the HighestWaveHot field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetHighestWaveHot(v int64) {
	o.HighestWaveHot = &v
}

// GetHighestWaveInfernal returns the HighestWaveInfernal field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveInfernal() int64 {
	if o == nil || IsNil(o.HighestWaveInfernal) {
		var ret int64
		return ret
	}
	return *o.HighestWaveInfernal
}

// GetHighestWaveInfernalOk returns a tuple with the HighestWaveInfernal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveInfernalOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestWaveInfernal) {
		return nil, false
	}
	return o.HighestWaveInfernal, true
}

// HasHighestWaveInfernal returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasHighestWaveInfernal() bool {
	if o != nil && !IsNil(o.HighestWaveInfernal) {
		return true
	}

	return false
}

// SetHighestWaveInfernal gets a reference to the given int64 and assigns it to the HighestWaveInfernal field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetHighestWaveInfernal(v int64) {
	o.HighestWaveInfernal = &v
}

// GetHighestWaveNone returns the HighestWaveNone field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveNone() int64 {
	if o == nil || IsNil(o.HighestWaveNone) {
		var ret int64
		return ret
	}
	return *o.HighestWaveNone
}

// GetHighestWaveNoneOk returns a tuple with the HighestWaveNone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHighestWaveNoneOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestWaveNone) {
		return nil, false
	}
	return o.HighestWaveNone, true
}

// HasHighestWaveNone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasHighestWaveNone() bool {
	if o != nil && !IsNil(o.HighestWaveNone) {
		return true
	}

	return false
}

// SetHighestWaveNone gets a reference to the given int64 and assigns it to the HighestWaveNone field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetHighestWaveNone(v int64) {
	o.HighestWaveNone = &v
}

// GetHot returns the Hot field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHot() int64 {
	if o == nil || IsNil(o.Hot) {
		var ret int64
		return ret
	}
	return *o.Hot
}

// GetHotOk returns a tuple with the Hot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetHotOk() (*int64, bool) {
	if o == nil || IsNil(o.Hot) {
		return nil, false
	}
	return o.Hot, true
}

// HasHot returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasHot() bool {
	if o != nil && !IsNil(o.Hot) {
		return true
	}

	return false
}

// SetHot gets a reference to the given int64 and assigns it to the Hot field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetHot(v int64) {
	o.Hot = &v
}

// GetInfernal returns the Infernal field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetInfernal() int64 {
	if o == nil || IsNil(o.Infernal) {
		var ret int64
		return ret
	}
	return *o.Infernal
}

// GetInfernalOk returns a tuple with the Infernal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetInfernalOk() (*int64, bool) {
	if o == nil || IsNil(o.Infernal) {
		return nil, false
	}
	return o.Infernal, true
}

// HasInfernal returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasInfernal() bool {
	if o != nil && !IsNil(o.Infernal) {
		return true
	}

	return false
}

// SetInfernal gets a reference to the given int64 and assigns it to the Infernal field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetInfernal(v int64) {
	o.Infernal = &v
}

// GetNone returns the None field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetNone() int64 {
	if o == nil || IsNil(o.None) {
		var ret int64
		return ret
	}
	return *o.None
}

// GetNoneOk returns a tuple with the None field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) GetNoneOk() (*int64, bool) {
	if o == nil || IsNil(o.None) {
		return nil, false
	}
	return o.None, true
}

// HasNone returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) HasNone() bool {
	if o != nil && !IsNil(o.None) {
		return true
	}

	return false
}

// SetNone gets a reference to the given int64 and assigns it to the None field.
func (o *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) SetNone(v int64) {
	o.None = &v
}

func (o SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Burning) {
		toSerialize["burning"] = o.Burning
	}
	if !IsNil(o.Fiery) {
		toSerialize["fiery"] = o.Fiery
	}
	if !IsNil(o.HighestWaveBurning) {
		toSerialize["highest_wave_burning"] = o.HighestWaveBurning
	}
	if !IsNil(o.HighestWaveFiery) {
		toSerialize["highest_wave_fiery"] = o.HighestWaveFiery
	}
	if !IsNil(o.HighestWaveHot) {
		toSerialize["highest_wave_hot"] = o.HighestWaveHot
	}
	if !IsNil(o.HighestWaveInfernal) {
		toSerialize["highest_wave_infernal"] = o.HighestWaveInfernal
	}
	if !IsNil(o.HighestWaveNone) {
		toSerialize["highest_wave_none"] = o.HighestWaveNone
	}
	if !IsNil(o.Hot) {
		toSerialize["hot"] = o.Hot
	}
	if !IsNil(o.Infernal) {
		toSerialize["infernal"] = o.Infernal
	}
	if !IsNil(o.None) {
		toSerialize["none"] = o.None
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers struct {
	value *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) Get() *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) Set(val *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers(val *SkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) *NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerDataKuudraCompletedTiers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
