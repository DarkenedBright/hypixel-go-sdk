/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileBankingTransactionAction the model 'SkyBlockProfileBankingTransactionAction'
type SkyBlockProfileBankingTransactionAction string

// List of SkyBlockProfileBankingTransaction_action
const (
	SKYBLOCKPROFILEBANKINGTRANSACTIONACTION_DEPOSIT  SkyBlockProfileBankingTransactionAction = "DEPOSIT"
	SKYBLOCKPROFILEBANKINGTRANSACTIONACTION_WITHDRAW SkyBlockProfileBankingTransactionAction = "WITHDRAW"
)

// All allowed values of SkyBlockProfileBankingTransactionAction enum
var AllowedSkyBlockProfileBankingTransactionActionEnumValues = []SkyBlockProfileBankingTransactionAction{
	"DEPOSIT",
	"WITHDRAW",
}

func (v *SkyBlockProfileBankingTransactionAction) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileBankingTransactionAction(value)
	for _, existing := range AllowedSkyBlockProfileBankingTransactionActionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileBankingTransactionAction", value)
}

// NewSkyBlockProfileBankingTransactionActionFromValue returns a pointer to a valid SkyBlockProfileBankingTransactionAction
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileBankingTransactionActionFromValue(v string) (*SkyBlockProfileBankingTransactionAction, error) {
	ev := SkyBlockProfileBankingTransactionAction(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileBankingTransactionAction: valid values are %v", v, AllowedSkyBlockProfileBankingTransactionActionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileBankingTransactionAction) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileBankingTransactionActionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileBankingTransaction_action value
func (v SkyBlockProfileBankingTransactionAction) Ptr() *SkyBlockProfileBankingTransactionAction {
	return &v
}

type NullableSkyBlockProfileBankingTransactionAction struct {
	value *SkyBlockProfileBankingTransactionAction
	isSet bool
}

func (v NullableSkyBlockProfileBankingTransactionAction) Get() *SkyBlockProfileBankingTransactionAction {
	return v.value
}

func (v *NullableSkyBlockProfileBankingTransactionAction) Set(val *SkyBlockProfileBankingTransactionAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileBankingTransactionAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileBankingTransactionAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileBankingTransactionAction(val *SkyBlockProfileBankingTransactionAction) *NullableSkyBlockProfileBankingTransactionAction {
	return &NullableSkyBlockProfileBankingTransactionAction{value: val, isSet: true}
}

func (v NullableSkyBlockProfileBankingTransactionAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileBankingTransactionAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
