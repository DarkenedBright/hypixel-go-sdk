/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberObjectivesCollectSpider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberObjectivesCollectSpider{}

// SkyBlockProfileMemberObjectivesCollectSpider struct for SkyBlockProfileMemberObjectivesCollectSpider
type SkyBlockProfileMemberObjectivesCollectSpider struct {
	SPIDER_EYE  *bool                                                `json:"SPIDER_EYE,omitempty"`
	STRING      *bool                                                `json:"STRING,omitempty"`
	CompletedAt int64                                                `json:"completed_at"`
	Progress    int64                                                `json:"progress"`
	Status      SkyBlockProfileMemberObjectivesCatchLaseasFishStatus `json:"status"`
}

type _SkyBlockProfileMemberObjectivesCollectSpider SkyBlockProfileMemberObjectivesCollectSpider

// NewSkyBlockProfileMemberObjectivesCollectSpider instantiates a new SkyBlockProfileMemberObjectivesCollectSpider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberObjectivesCollectSpider(completedAt int64, progress int64, status SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) *SkyBlockProfileMemberObjectivesCollectSpider {
	this := SkyBlockProfileMemberObjectivesCollectSpider{}
	this.CompletedAt = completedAt
	this.Progress = progress
	this.Status = status
	return &this
}

// NewSkyBlockProfileMemberObjectivesCollectSpiderWithDefaults instantiates a new SkyBlockProfileMemberObjectivesCollectSpider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberObjectivesCollectSpiderWithDefaults() *SkyBlockProfileMemberObjectivesCollectSpider {
	this := SkyBlockProfileMemberObjectivesCollectSpider{}
	return &this
}

// GetSPIDER_EYE returns the SPIDER_EYE field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetSPIDER_EYE() bool {
	if o == nil || IsNil(o.SPIDER_EYE) {
		var ret bool
		return ret
	}
	return *o.SPIDER_EYE
}

// GetSPIDER_EYEOk returns a tuple with the SPIDER_EYE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetSPIDER_EYEOk() (*bool, bool) {
	if o == nil || IsNil(o.SPIDER_EYE) {
		return nil, false
	}
	return o.SPIDER_EYE, true
}

// HasSPIDER_EYE returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) HasSPIDER_EYE() bool {
	if o != nil && !IsNil(o.SPIDER_EYE) {
		return true
	}

	return false
}

// SetSPIDER_EYE gets a reference to the given bool and assigns it to the SPIDER_EYE field.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) SetSPIDER_EYE(v bool) {
	o.SPIDER_EYE = &v
}

// GetSTRING returns the STRING field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetSTRING() bool {
	if o == nil || IsNil(o.STRING) {
		var ret bool
		return ret
	}
	return *o.STRING
}

// GetSTRINGOk returns a tuple with the STRING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetSTRINGOk() (*bool, bool) {
	if o == nil || IsNil(o.STRING) {
		return nil, false
	}
	return o.STRING, true
}

// HasSTRING returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) HasSTRING() bool {
	if o != nil && !IsNil(o.STRING) {
		return true
	}

	return false
}

// SetSTRING gets a reference to the given bool and assigns it to the STRING field.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) SetSTRING(v bool) {
	o.STRING = &v
}

// GetCompletedAt returns the CompletedAt field value
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetCompletedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetCompletedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletedAt, true
}

// SetCompletedAt sets field value
func (o *SkyBlockProfileMemberObjectivesCollectSpider) SetCompletedAt(v int64) {
	o.CompletedAt = v
}

// GetProgress returns the Progress field value
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetProgress() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetProgressOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *SkyBlockProfileMemberObjectivesCollectSpider) SetProgress(v int64) {
	o.Progress = v
}

// GetStatus returns the Status field value
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetStatus() SkyBlockProfileMemberObjectivesCatchLaseasFishStatus {
	if o == nil {
		var ret SkyBlockProfileMemberObjectivesCatchLaseasFishStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesCollectSpider) GetStatusOk() (*SkyBlockProfileMemberObjectivesCatchLaseasFishStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SkyBlockProfileMemberObjectivesCollectSpider) SetStatus(v SkyBlockProfileMemberObjectivesCatchLaseasFishStatus) {
	o.Status = v
}

func (o SkyBlockProfileMemberObjectivesCollectSpider) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberObjectivesCollectSpider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SPIDER_EYE) {
		toSerialize["SPIDER_EYE"] = o.SPIDER_EYE
	}
	if !IsNil(o.STRING) {
		toSerialize["STRING"] = o.STRING
	}
	toSerialize["completed_at"] = o.CompletedAt
	toSerialize["progress"] = o.Progress
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberObjectivesCollectSpider) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"completed_at",
		"progress",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberObjectivesCollectSpider := _SkyBlockProfileMemberObjectivesCollectSpider{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberObjectivesCollectSpider)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberObjectivesCollectSpider(varSkyBlockProfileMemberObjectivesCollectSpider)

	return err
}

type NullableSkyBlockProfileMemberObjectivesCollectSpider struct {
	value *SkyBlockProfileMemberObjectivesCollectSpider
	isSet bool
}

func (v NullableSkyBlockProfileMemberObjectivesCollectSpider) Get() *SkyBlockProfileMemberObjectivesCollectSpider {
	return v.value
}

func (v *NullableSkyBlockProfileMemberObjectivesCollectSpider) Set(val *SkyBlockProfileMemberObjectivesCollectSpider) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberObjectivesCollectSpider) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberObjectivesCollectSpider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberObjectivesCollectSpider(val *SkyBlockProfileMemberObjectivesCollectSpider) *NullableSkyBlockProfileMemberObjectivesCollectSpider {
	return &NullableSkyBlockProfileMemberObjectivesCollectSpider{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberObjectivesCollectSpider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberObjectivesCollectSpider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
