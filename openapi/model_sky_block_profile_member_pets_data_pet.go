/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberPetsDataPet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPetsDataPet{}

// SkyBlockProfileMemberPetsDataPet struct for SkyBlockProfileMemberPetsDataPet
type SkyBlockProfileMemberPetsDataPet struct {
	Active    bool                                             `json:"active"`
	CandyUsed int64                                            `json:"candyUsed"`
	Exp       float64                                          `json:"exp"`
	Extra     *map[string]int64                                `json:"extra,omitempty"`
	HeldItem  NullableSkyBlockProfileMemberPetsDataPetHeldItem `json:"heldItem"`
	Skin      string                                           `json:"skin"`
	Tier      SkyBlockProfileMemberPetsDataPetTier             `json:"tier"`
	Type      SkyBlockProfileMemberPetsDataPetType             `json:"type"`
	UniqueId  string                                           `json:"uniqueId"`
	Uuid      string                                           `json:"uuid"`
}

type _SkyBlockProfileMemberPetsDataPet SkyBlockProfileMemberPetsDataPet

// NewSkyBlockProfileMemberPetsDataPet instantiates a new SkyBlockProfileMemberPetsDataPet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPetsDataPet(active bool, candyUsed int64, exp float64, heldItem NullableSkyBlockProfileMemberPetsDataPetHeldItem, skin string, tier SkyBlockProfileMemberPetsDataPetTier, type_ SkyBlockProfileMemberPetsDataPetType, uniqueId string, uuid string) *SkyBlockProfileMemberPetsDataPet {
	this := SkyBlockProfileMemberPetsDataPet{}
	this.Active = active
	this.CandyUsed = candyUsed
	this.Exp = exp
	this.HeldItem = heldItem
	this.Skin = skin
	this.Tier = tier
	this.Type = type_
	this.UniqueId = uniqueId
	this.Uuid = uuid
	return &this
}

// NewSkyBlockProfileMemberPetsDataPetWithDefaults instantiates a new SkyBlockProfileMemberPetsDataPet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPetsDataPetWithDefaults() *SkyBlockProfileMemberPetsDataPet {
	this := SkyBlockProfileMemberPetsDataPet{}
	return &this
}

// GetActive returns the Active field value
func (o *SkyBlockProfileMemberPetsDataPet) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetActive(v bool) {
	o.Active = v
}

// GetCandyUsed returns the CandyUsed field value
func (o *SkyBlockProfileMemberPetsDataPet) GetCandyUsed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CandyUsed
}

// GetCandyUsedOk returns a tuple with the CandyUsed field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetCandyUsedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CandyUsed, true
}

// SetCandyUsed sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetCandyUsed(v int64) {
	o.CandyUsed = v
}

// GetExp returns the Exp field value
func (o *SkyBlockProfileMemberPetsDataPet) GetExp() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Exp
}

// GetExpOk returns a tuple with the Exp field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetExpOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exp, true
}

// SetExp sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetExp(v float64) {
	o.Exp = v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPetsDataPet) GetExtra() map[string]int64 {
	if o == nil || IsNil(o.Extra) {
		var ret map[string]int64
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetExtraOk() (*map[string]int64, bool) {
	if o == nil || IsNil(o.Extra) {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPetsDataPet) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]int64 and assigns it to the Extra field.
func (o *SkyBlockProfileMemberPetsDataPet) SetExtra(v map[string]int64) {
	o.Extra = &v
}

// GetHeldItem returns the HeldItem field value
// If the value is explicit nil, the zero value for SkyBlockProfileMemberPetsDataPetHeldItem will be returned
func (o *SkyBlockProfileMemberPetsDataPet) GetHeldItem() SkyBlockProfileMemberPetsDataPetHeldItem {
	if o == nil || o.HeldItem.Get() == nil {
		var ret SkyBlockProfileMemberPetsDataPetHeldItem
		return ret
	}

	return *o.HeldItem.Get()
}

// GetHeldItemOk returns a tuple with the HeldItem field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SkyBlockProfileMemberPetsDataPet) GetHeldItemOk() (*SkyBlockProfileMemberPetsDataPetHeldItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.HeldItem.Get(), o.HeldItem.IsSet()
}

// SetHeldItem sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetHeldItem(v SkyBlockProfileMemberPetsDataPetHeldItem) {
	o.HeldItem.Set(&v)
}

// GetSkin returns the Skin field value
func (o *SkyBlockProfileMemberPetsDataPet) GetSkin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Skin
}

// GetSkinOk returns a tuple with the Skin field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetSkinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Skin, true
}

// SetSkin sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetSkin(v string) {
	o.Skin = v
}

// GetTier returns the Tier field value
func (o *SkyBlockProfileMemberPetsDataPet) GetTier() SkyBlockProfileMemberPetsDataPetTier {
	if o == nil {
		var ret SkyBlockProfileMemberPetsDataPetTier
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetTierOk() (*SkyBlockProfileMemberPetsDataPetTier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetTier(v SkyBlockProfileMemberPetsDataPetTier) {
	o.Tier = v
}

// GetType returns the Type field value
func (o *SkyBlockProfileMemberPetsDataPet) GetType() SkyBlockProfileMemberPetsDataPetType {
	if o == nil {
		var ret SkyBlockProfileMemberPetsDataPetType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetTypeOk() (*SkyBlockProfileMemberPetsDataPetType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetType(v SkyBlockProfileMemberPetsDataPetType) {
	o.Type = v
}

// GetUniqueId returns the UniqueId field value
func (o *SkyBlockProfileMemberPetsDataPet) GetUniqueId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetUniqueIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UniqueId, true
}

// SetUniqueId sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetUniqueId(v string) {
	o.UniqueId = v
}

// GetUuid returns the Uuid field value
func (o *SkyBlockProfileMemberPetsDataPet) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsDataPet) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SkyBlockProfileMemberPetsDataPet) SetUuid(v string) {
	o.Uuid = v
}

func (o SkyBlockProfileMemberPetsDataPet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPetsDataPet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	toSerialize["candyUsed"] = o.CandyUsed
	toSerialize["exp"] = o.Exp
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	toSerialize["heldItem"] = o.HeldItem.Get()
	toSerialize["skin"] = o.Skin
	toSerialize["tier"] = o.Tier
	toSerialize["type"] = o.Type
	toSerialize["uniqueId"] = o.UniqueId
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberPetsDataPet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active",
		"candyUsed",
		"exp",
		"heldItem",
		"skin",
		"tier",
		"type",
		"uniqueId",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberPetsDataPet := _SkyBlockProfileMemberPetsDataPet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberPetsDataPet)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberPetsDataPet(varSkyBlockProfileMemberPetsDataPet)

	return err
}

type NullableSkyBlockProfileMemberPetsDataPet struct {
	value *SkyBlockProfileMemberPetsDataPet
	isSet bool
}

func (v NullableSkyBlockProfileMemberPetsDataPet) Get() *SkyBlockProfileMemberPetsDataPet {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPetsDataPet) Set(val *SkyBlockProfileMemberPetsDataPet) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPetsDataPet) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPetsDataPet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPetsDataPet(val *SkyBlockProfileMemberPetsDataPet) *NullableSkyBlockProfileMemberPetsDataPet {
	return &NullableSkyBlockProfileMemberPetsDataPet{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPetsDataPet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPetsDataPet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
