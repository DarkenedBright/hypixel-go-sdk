/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberPetsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPetsData{}

// SkyBlockProfileMemberPetsData struct for SkyBlockProfileMemberPetsData
type SkyBlockProfileMemberPetsData struct {
	Autopet *SkyBlockProfileMemberPetsDataAutopet `json:"autopet,omitempty"`
	PetCare *SkyBlockProfileMemberPetsDataPetCare `json:"pet_care,omitempty"`
	Pets    []SkyBlockProfileMemberPetsDataPet    `json:"pets"`
}

type _SkyBlockProfileMemberPetsData SkyBlockProfileMemberPetsData

// NewSkyBlockProfileMemberPetsData instantiates a new SkyBlockProfileMemberPetsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPetsData(pets []SkyBlockProfileMemberPetsDataPet) *SkyBlockProfileMemberPetsData {
	this := SkyBlockProfileMemberPetsData{}
	this.Pets = pets
	return &this
}

// NewSkyBlockProfileMemberPetsDataWithDefaults instantiates a new SkyBlockProfileMemberPetsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPetsDataWithDefaults() *SkyBlockProfileMemberPetsData {
	this := SkyBlockProfileMemberPetsData{}
	return &this
}

// GetAutopet returns the Autopet field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPetsData) GetAutopet() SkyBlockProfileMemberPetsDataAutopet {
	if o == nil || IsNil(o.Autopet) {
		var ret SkyBlockProfileMemberPetsDataAutopet
		return ret
	}
	return *o.Autopet
}

// GetAutopetOk returns a tuple with the Autopet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsData) GetAutopetOk() (*SkyBlockProfileMemberPetsDataAutopet, bool) {
	if o == nil || IsNil(o.Autopet) {
		return nil, false
	}
	return o.Autopet, true
}

// HasAutopet returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPetsData) HasAutopet() bool {
	if o != nil && !IsNil(o.Autopet) {
		return true
	}

	return false
}

// SetAutopet gets a reference to the given SkyBlockProfileMemberPetsDataAutopet and assigns it to the Autopet field.
func (o *SkyBlockProfileMemberPetsData) SetAutopet(v SkyBlockProfileMemberPetsDataAutopet) {
	o.Autopet = &v
}

// GetPetCare returns the PetCare field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPetsData) GetPetCare() SkyBlockProfileMemberPetsDataPetCare {
	if o == nil || IsNil(o.PetCare) {
		var ret SkyBlockProfileMemberPetsDataPetCare
		return ret
	}
	return *o.PetCare
}

// GetPetCareOk returns a tuple with the PetCare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsData) GetPetCareOk() (*SkyBlockProfileMemberPetsDataPetCare, bool) {
	if o == nil || IsNil(o.PetCare) {
		return nil, false
	}
	return o.PetCare, true
}

// HasPetCare returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPetsData) HasPetCare() bool {
	if o != nil && !IsNil(o.PetCare) {
		return true
	}

	return false
}

// SetPetCare gets a reference to the given SkyBlockProfileMemberPetsDataPetCare and assigns it to the PetCare field.
func (o *SkyBlockProfileMemberPetsData) SetPetCare(v SkyBlockProfileMemberPetsDataPetCare) {
	o.PetCare = &v
}

// GetPets returns the Pets field value
func (o *SkyBlockProfileMemberPetsData) GetPets() []SkyBlockProfileMemberPetsDataPet {
	if o == nil {
		var ret []SkyBlockProfileMemberPetsDataPet
		return ret
	}

	return o.Pets
}

// GetPetsOk returns a tuple with the Pets field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPetsData) GetPetsOk() ([]SkyBlockProfileMemberPetsDataPet, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pets, true
}

// SetPets sets field value
func (o *SkyBlockProfileMemberPetsData) SetPets(v []SkyBlockProfileMemberPetsDataPet) {
	o.Pets = v
}

func (o SkyBlockProfileMemberPetsData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPetsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autopet) {
		toSerialize["autopet"] = o.Autopet
	}
	if !IsNil(o.PetCare) {
		toSerialize["pet_care"] = o.PetCare
	}
	toSerialize["pets"] = o.Pets
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberPetsData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberPetsData := _SkyBlockProfileMemberPetsData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberPetsData)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberPetsData(varSkyBlockProfileMemberPetsData)

	return err
}

type NullableSkyBlockProfileMemberPetsData struct {
	value *SkyBlockProfileMemberPetsData
	isSet bool
}

func (v NullableSkyBlockProfileMemberPetsData) Get() *SkyBlockProfileMemberPetsData {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPetsData) Set(val *SkyBlockProfileMemberPetsData) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPetsData) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPetsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPetsData(val *SkyBlockProfileMemberPetsData) *NullableSkyBlockProfileMemberPetsData {
	return &NullableSkyBlockProfileMemberPetsData{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPetsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPetsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
