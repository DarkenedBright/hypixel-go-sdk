/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V2SkyblockBingoGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2SkyblockBingoGet200Response{}

// V2SkyblockBingoGet200Response struct for V2SkyblockBingoGet200Response
type V2SkyblockBingoGet200Response struct {
	Events  []V2SkyblockBingoGet200ResponseEventsInner `json:"events,omitempty"`
	Success *bool                                      `json:"success,omitempty"`
}

// NewV2SkyblockBingoGet200Response instantiates a new V2SkyblockBingoGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SkyblockBingoGet200Response() *V2SkyblockBingoGet200Response {
	this := V2SkyblockBingoGet200Response{}
	return &this
}

// NewV2SkyblockBingoGet200ResponseWithDefaults instantiates a new V2SkyblockBingoGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SkyblockBingoGet200ResponseWithDefaults() *V2SkyblockBingoGet200Response {
	this := V2SkyblockBingoGet200Response{}
	return &this
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *V2SkyblockBingoGet200Response) GetEvents() []V2SkyblockBingoGet200ResponseEventsInner {
	if o == nil || IsNil(o.Events) {
		var ret []V2SkyblockBingoGet200ResponseEventsInner
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SkyblockBingoGet200Response) GetEventsOk() ([]V2SkyblockBingoGet200ResponseEventsInner, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *V2SkyblockBingoGet200Response) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []V2SkyblockBingoGet200ResponseEventsInner and assigns it to the Events field.
func (o *V2SkyblockBingoGet200Response) SetEvents(v []V2SkyblockBingoGet200ResponseEventsInner) {
	o.Events = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *V2SkyblockBingoGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SkyblockBingoGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *V2SkyblockBingoGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *V2SkyblockBingoGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o V2SkyblockBingoGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2SkyblockBingoGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableV2SkyblockBingoGet200Response struct {
	value *V2SkyblockBingoGet200Response
	isSet bool
}

func (v NullableV2SkyblockBingoGet200Response) Get() *V2SkyblockBingoGet200Response {
	return v.value
}

func (v *NullableV2SkyblockBingoGet200Response) Set(val *V2SkyblockBingoGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SkyblockBingoGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SkyblockBingoGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SkyblockBingoGet200Response(val *V2SkyblockBingoGet200Response) *NullableV2SkyblockBingoGet200Response {
	return &NullableV2SkyblockBingoGet200Response{value: val, isSet: true}
}

func (v NullableV2SkyblockBingoGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SkyblockBingoGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
