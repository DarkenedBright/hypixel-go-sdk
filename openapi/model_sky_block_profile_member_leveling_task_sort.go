/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberLevelingTaskSort the model 'SkyBlockProfileMemberLevelingTaskSort'
type SkyBlockProfileMemberLevelingTaskSort string

// List of SkyBlockProfileMemberLeveling_task_sort
const (
	SKYBLOCKPROFILEMEMBERLEVELINGTASKSORT_A_TO_Z    SkyBlockProfileMemberLevelingTaskSort = "a_to_z"
	SKYBLOCKPROFILEMEMBERLEVELINGTASKSORT_AVAILABLE SkyBlockProfileMemberLevelingTaskSort = "available"
	SKYBLOCKPROFILEMEMBERLEVELINGTASKSORT_EARNED    SkyBlockProfileMemberLevelingTaskSort = "earned"
	SKYBLOCKPROFILEMEMBERLEVELINGTASKSORT_Z_TO_A    SkyBlockProfileMemberLevelingTaskSort = "z_to_a"
)

// All allowed values of SkyBlockProfileMemberLevelingTaskSort enum
var AllowedSkyBlockProfileMemberLevelingTaskSortEnumValues = []SkyBlockProfileMemberLevelingTaskSort{
	"a_to_z",
	"available",
	"earned",
	"z_to_a",
}

func (v *SkyBlockProfileMemberLevelingTaskSort) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberLevelingTaskSort(value)
	for _, existing := range AllowedSkyBlockProfileMemberLevelingTaskSortEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberLevelingTaskSort", value)
}

// NewSkyBlockProfileMemberLevelingTaskSortFromValue returns a pointer to a valid SkyBlockProfileMemberLevelingTaskSort
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberLevelingTaskSortFromValue(v string) (*SkyBlockProfileMemberLevelingTaskSort, error) {
	ev := SkyBlockProfileMemberLevelingTaskSort(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberLevelingTaskSort: valid values are %v", v, AllowedSkyBlockProfileMemberLevelingTaskSortEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberLevelingTaskSort) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberLevelingTaskSortEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberLeveling_task_sort value
func (v SkyBlockProfileMemberLevelingTaskSort) Ptr() *SkyBlockProfileMemberLevelingTaskSort {
	return &v
}

type NullableSkyBlockProfileMemberLevelingTaskSort struct {
	value *SkyBlockProfileMemberLevelingTaskSort
	isSet bool
}

func (v NullableSkyBlockProfileMemberLevelingTaskSort) Get() *SkyBlockProfileMemberLevelingTaskSort {
	return v.value
}

func (v *NullableSkyBlockProfileMemberLevelingTaskSort) Set(val *SkyBlockProfileMemberLevelingTaskSort) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberLevelingTaskSort) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberLevelingTaskSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberLevelingTaskSort(val *SkyBlockProfileMemberLevelingTaskSort) *NullableSkyBlockProfileMemberLevelingTaskSort {
	return &NullableSkyBlockProfileMemberLevelingTaskSort{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberLevelingTaskSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberLevelingTaskSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
