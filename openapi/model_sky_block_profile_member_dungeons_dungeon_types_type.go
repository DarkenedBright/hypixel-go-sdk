/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberDungeonsDungeonTypesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberDungeonsDungeonTypesType{}

// SkyBlockProfileMemberDungeonsDungeonTypesType struct for SkyBlockProfileMemberDungeonsDungeonTypesType
type SkyBlockProfileMemberDungeonsDungeonTypesType struct {
	BestRuns             *map[string][]SkyBlockProfileMemberDungeonsDungeonTypesBestRuns `json:"best_runs,omitempty"`
	BestScore            *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"best_score,omitempty"`
	Experience           *float64                                                        `json:"experience,omitempty"`
	FastestTime          *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"fastest_time,omitempty"`
	FastestTimeS         *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"fastest_time_s,omitempty"`
	FastestTimeSPlus     *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"fastest_time_s_plus,omitempty"`
	HighestTierCompleted *int64                                                          `json:"highest_tier_completed,omitempty"`
	MilestoneCompletions *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"milestone_completions,omitempty"`
	MobsKilled           *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"mobs_killed,omitempty"`
	MostDamageArcher     *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_damage_archer,omitempty"`
	MostDamageBerserk    *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_damage_berserk,omitempty"`
	MostDamageHealer     *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_damage_healer,omitempty"`
	MostDamageMage       *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_damage_mage,omitempty"`
	MostDamageTank       *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_damage_tank,omitempty"`
	MostHealing          *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_healing,omitempty"`
	MostMobsKilled       *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"most_mobs_killed,omitempty"`
	TierCompletions      *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"tier_completions,omitempty"`
	TimesPlayed          *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"times_played,omitempty"`
	WatcherKills         *SkyBlockProfileMemberDungeonsDungeonTypesTypeData              `json:"watcher_kills,omitempty"`
}

// NewSkyBlockProfileMemberDungeonsDungeonTypesType instantiates a new SkyBlockProfileMemberDungeonsDungeonTypesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberDungeonsDungeonTypesType() *SkyBlockProfileMemberDungeonsDungeonTypesType {
	this := SkyBlockProfileMemberDungeonsDungeonTypesType{}
	return &this
}

// NewSkyBlockProfileMemberDungeonsDungeonTypesTypeWithDefaults instantiates a new SkyBlockProfileMemberDungeonsDungeonTypesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberDungeonsDungeonTypesTypeWithDefaults() *SkyBlockProfileMemberDungeonsDungeonTypesType {
	this := SkyBlockProfileMemberDungeonsDungeonTypesType{}
	return &this
}

// GetBestRuns returns the BestRuns field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetBestRuns() map[string][]SkyBlockProfileMemberDungeonsDungeonTypesBestRuns {
	if o == nil || IsNil(o.BestRuns) {
		var ret map[string][]SkyBlockProfileMemberDungeonsDungeonTypesBestRuns
		return ret
	}
	return *o.BestRuns
}

// GetBestRunsOk returns a tuple with the BestRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetBestRunsOk() (*map[string][]SkyBlockProfileMemberDungeonsDungeonTypesBestRuns, bool) {
	if o == nil || IsNil(o.BestRuns) {
		return nil, false
	}
	return o.BestRuns, true
}

// HasBestRuns returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasBestRuns() bool {
	if o != nil && !IsNil(o.BestRuns) {
		return true
	}

	return false
}

// SetBestRuns gets a reference to the given map[string][]SkyBlockProfileMemberDungeonsDungeonTypesBestRuns and assigns it to the BestRuns field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetBestRuns(v map[string][]SkyBlockProfileMemberDungeonsDungeonTypesBestRuns) {
	o.BestRuns = &v
}

// GetBestScore returns the BestScore field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetBestScore() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.BestScore) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.BestScore
}

// GetBestScoreOk returns a tuple with the BestScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetBestScoreOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.BestScore) {
		return nil, false
	}
	return o.BestScore, true
}

// HasBestScore returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasBestScore() bool {
	if o != nil && !IsNil(o.BestScore) {
		return true
	}

	return false
}

// SetBestScore gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the BestScore field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetBestScore(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.BestScore = &v
}

// GetExperience returns the Experience field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetExperience() float64 {
	if o == nil || IsNil(o.Experience) {
		var ret float64
		return ret
	}
	return *o.Experience
}

// GetExperienceOk returns a tuple with the Experience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetExperienceOk() (*float64, bool) {
	if o == nil || IsNil(o.Experience) {
		return nil, false
	}
	return o.Experience, true
}

// HasExperience returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasExperience() bool {
	if o != nil && !IsNil(o.Experience) {
		return true
	}

	return false
}

// SetExperience gets a reference to the given float64 and assigns it to the Experience field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetExperience(v float64) {
	o.Experience = &v
}

// GetFastestTime returns the FastestTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetFastestTime() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.FastestTime) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.FastestTime
}

// GetFastestTimeOk returns a tuple with the FastestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetFastestTimeOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.FastestTime) {
		return nil, false
	}
	return o.FastestTime, true
}

// HasFastestTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasFastestTime() bool {
	if o != nil && !IsNil(o.FastestTime) {
		return true
	}

	return false
}

// SetFastestTime gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the FastestTime field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetFastestTime(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.FastestTime = &v
}

// GetFastestTimeS returns the FastestTimeS field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetFastestTimeS() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.FastestTimeS) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.FastestTimeS
}

// GetFastestTimeSOk returns a tuple with the FastestTimeS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetFastestTimeSOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.FastestTimeS) {
		return nil, false
	}
	return o.FastestTimeS, true
}

// HasFastestTimeS returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasFastestTimeS() bool {
	if o != nil && !IsNil(o.FastestTimeS) {
		return true
	}

	return false
}

// SetFastestTimeS gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the FastestTimeS field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetFastestTimeS(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.FastestTimeS = &v
}

// GetFastestTimeSPlus returns the FastestTimeSPlus field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetFastestTimeSPlus() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.FastestTimeSPlus) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.FastestTimeSPlus
}

// GetFastestTimeSPlusOk returns a tuple with the FastestTimeSPlus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetFastestTimeSPlusOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.FastestTimeSPlus) {
		return nil, false
	}
	return o.FastestTimeSPlus, true
}

// HasFastestTimeSPlus returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasFastestTimeSPlus() bool {
	if o != nil && !IsNil(o.FastestTimeSPlus) {
		return true
	}

	return false
}

// SetFastestTimeSPlus gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the FastestTimeSPlus field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetFastestTimeSPlus(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.FastestTimeSPlus = &v
}

// GetHighestTierCompleted returns the HighestTierCompleted field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetHighestTierCompleted() int64 {
	if o == nil || IsNil(o.HighestTierCompleted) {
		var ret int64
		return ret
	}
	return *o.HighestTierCompleted
}

// GetHighestTierCompletedOk returns a tuple with the HighestTierCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetHighestTierCompletedOk() (*int64, bool) {
	if o == nil || IsNil(o.HighestTierCompleted) {
		return nil, false
	}
	return o.HighestTierCompleted, true
}

// HasHighestTierCompleted returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasHighestTierCompleted() bool {
	if o != nil && !IsNil(o.HighestTierCompleted) {
		return true
	}

	return false
}

// SetHighestTierCompleted gets a reference to the given int64 and assigns it to the HighestTierCompleted field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetHighestTierCompleted(v int64) {
	o.HighestTierCompleted = &v
}

// GetMilestoneCompletions returns the MilestoneCompletions field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMilestoneCompletions() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MilestoneCompletions) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MilestoneCompletions
}

// GetMilestoneCompletionsOk returns a tuple with the MilestoneCompletions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMilestoneCompletionsOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MilestoneCompletions) {
		return nil, false
	}
	return o.MilestoneCompletions, true
}

// HasMilestoneCompletions returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMilestoneCompletions() bool {
	if o != nil && !IsNil(o.MilestoneCompletions) {
		return true
	}

	return false
}

// SetMilestoneCompletions gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MilestoneCompletions field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMilestoneCompletions(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MilestoneCompletions = &v
}

// GetMobsKilled returns the MobsKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMobsKilled() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MobsKilled) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MobsKilled
}

// GetMobsKilledOk returns a tuple with the MobsKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMobsKilledOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MobsKilled) {
		return nil, false
	}
	return o.MobsKilled, true
}

// HasMobsKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMobsKilled() bool {
	if o != nil && !IsNil(o.MobsKilled) {
		return true
	}

	return false
}

// SetMobsKilled gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MobsKilled field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMobsKilled(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MobsKilled = &v
}

// GetMostDamageArcher returns the MostDamageArcher field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageArcher() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostDamageArcher) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostDamageArcher
}

// GetMostDamageArcherOk returns a tuple with the MostDamageArcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageArcherOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostDamageArcher) {
		return nil, false
	}
	return o.MostDamageArcher, true
}

// HasMostDamageArcher returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostDamageArcher() bool {
	if o != nil && !IsNil(o.MostDamageArcher) {
		return true
	}

	return false
}

// SetMostDamageArcher gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostDamageArcher field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostDamageArcher(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostDamageArcher = &v
}

// GetMostDamageBerserk returns the MostDamageBerserk field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageBerserk() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostDamageBerserk) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostDamageBerserk
}

// GetMostDamageBerserkOk returns a tuple with the MostDamageBerserk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageBerserkOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostDamageBerserk) {
		return nil, false
	}
	return o.MostDamageBerserk, true
}

// HasMostDamageBerserk returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostDamageBerserk() bool {
	if o != nil && !IsNil(o.MostDamageBerserk) {
		return true
	}

	return false
}

// SetMostDamageBerserk gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostDamageBerserk field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostDamageBerserk(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostDamageBerserk = &v
}

// GetMostDamageHealer returns the MostDamageHealer field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageHealer() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostDamageHealer) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostDamageHealer
}

// GetMostDamageHealerOk returns a tuple with the MostDamageHealer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageHealerOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostDamageHealer) {
		return nil, false
	}
	return o.MostDamageHealer, true
}

// HasMostDamageHealer returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostDamageHealer() bool {
	if o != nil && !IsNil(o.MostDamageHealer) {
		return true
	}

	return false
}

// SetMostDamageHealer gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostDamageHealer field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostDamageHealer(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostDamageHealer = &v
}

// GetMostDamageMage returns the MostDamageMage field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageMage() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostDamageMage) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostDamageMage
}

// GetMostDamageMageOk returns a tuple with the MostDamageMage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageMageOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostDamageMage) {
		return nil, false
	}
	return o.MostDamageMage, true
}

// HasMostDamageMage returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostDamageMage() bool {
	if o != nil && !IsNil(o.MostDamageMage) {
		return true
	}

	return false
}

// SetMostDamageMage gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostDamageMage field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostDamageMage(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostDamageMage = &v
}

// GetMostDamageTank returns the MostDamageTank field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageTank() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostDamageTank) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostDamageTank
}

// GetMostDamageTankOk returns a tuple with the MostDamageTank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostDamageTankOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostDamageTank) {
		return nil, false
	}
	return o.MostDamageTank, true
}

// HasMostDamageTank returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostDamageTank() bool {
	if o != nil && !IsNil(o.MostDamageTank) {
		return true
	}

	return false
}

// SetMostDamageTank gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostDamageTank field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostDamageTank(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostDamageTank = &v
}

// GetMostHealing returns the MostHealing field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostHealing() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostHealing) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostHealing
}

// GetMostHealingOk returns a tuple with the MostHealing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostHealingOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostHealing) {
		return nil, false
	}
	return o.MostHealing, true
}

// HasMostHealing returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostHealing() bool {
	if o != nil && !IsNil(o.MostHealing) {
		return true
	}

	return false
}

// SetMostHealing gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostHealing field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostHealing(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostHealing = &v
}

// GetMostMobsKilled returns the MostMobsKilled field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostMobsKilled() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.MostMobsKilled) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.MostMobsKilled
}

// GetMostMobsKilledOk returns a tuple with the MostMobsKilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetMostMobsKilledOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.MostMobsKilled) {
		return nil, false
	}
	return o.MostMobsKilled, true
}

// HasMostMobsKilled returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasMostMobsKilled() bool {
	if o != nil && !IsNil(o.MostMobsKilled) {
		return true
	}

	return false
}

// SetMostMobsKilled gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the MostMobsKilled field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetMostMobsKilled(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.MostMobsKilled = &v
}

// GetTierCompletions returns the TierCompletions field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetTierCompletions() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.TierCompletions) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.TierCompletions
}

// GetTierCompletionsOk returns a tuple with the TierCompletions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetTierCompletionsOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.TierCompletions) {
		return nil, false
	}
	return o.TierCompletions, true
}

// HasTierCompletions returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasTierCompletions() bool {
	if o != nil && !IsNil(o.TierCompletions) {
		return true
	}

	return false
}

// SetTierCompletions gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the TierCompletions field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetTierCompletions(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.TierCompletions = &v
}

// GetTimesPlayed returns the TimesPlayed field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetTimesPlayed() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.TimesPlayed) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.TimesPlayed
}

// GetTimesPlayedOk returns a tuple with the TimesPlayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetTimesPlayedOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.TimesPlayed) {
		return nil, false
	}
	return o.TimesPlayed, true
}

// HasTimesPlayed returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasTimesPlayed() bool {
	if o != nil && !IsNil(o.TimesPlayed) {
		return true
	}

	return false
}

// SetTimesPlayed gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the TimesPlayed field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetTimesPlayed(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.TimesPlayed = &v
}

// GetWatcherKills returns the WatcherKills field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetWatcherKills() SkyBlockProfileMemberDungeonsDungeonTypesTypeData {
	if o == nil || IsNil(o.WatcherKills) {
		var ret SkyBlockProfileMemberDungeonsDungeonTypesTypeData
		return ret
	}
	return *o.WatcherKills
}

// GetWatcherKillsOk returns a tuple with the WatcherKills field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) GetWatcherKillsOk() (*SkyBlockProfileMemberDungeonsDungeonTypesTypeData, bool) {
	if o == nil || IsNil(o.WatcherKills) {
		return nil, false
	}
	return o.WatcherKills, true
}

// HasWatcherKills returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) HasWatcherKills() bool {
	if o != nil && !IsNil(o.WatcherKills) {
		return true
	}

	return false
}

// SetWatcherKills gets a reference to the given SkyBlockProfileMemberDungeonsDungeonTypesTypeData and assigns it to the WatcherKills field.
func (o *SkyBlockProfileMemberDungeonsDungeonTypesType) SetWatcherKills(v SkyBlockProfileMemberDungeonsDungeonTypesTypeData) {
	o.WatcherKills = &v
}

func (o SkyBlockProfileMemberDungeonsDungeonTypesType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberDungeonsDungeonTypesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BestRuns) {
		toSerialize["best_runs"] = o.BestRuns
	}
	if !IsNil(o.BestScore) {
		toSerialize["best_score"] = o.BestScore
	}
	if !IsNil(o.Experience) {
		toSerialize["experience"] = o.Experience
	}
	if !IsNil(o.FastestTime) {
		toSerialize["fastest_time"] = o.FastestTime
	}
	if !IsNil(o.FastestTimeS) {
		toSerialize["fastest_time_s"] = o.FastestTimeS
	}
	if !IsNil(o.FastestTimeSPlus) {
		toSerialize["fastest_time_s_plus"] = o.FastestTimeSPlus
	}
	if !IsNil(o.HighestTierCompleted) {
		toSerialize["highest_tier_completed"] = o.HighestTierCompleted
	}
	if !IsNil(o.MilestoneCompletions) {
		toSerialize["milestone_completions"] = o.MilestoneCompletions
	}
	if !IsNil(o.MobsKilled) {
		toSerialize["mobs_killed"] = o.MobsKilled
	}
	if !IsNil(o.MostDamageArcher) {
		toSerialize["most_damage_archer"] = o.MostDamageArcher
	}
	if !IsNil(o.MostDamageBerserk) {
		toSerialize["most_damage_berserk"] = o.MostDamageBerserk
	}
	if !IsNil(o.MostDamageHealer) {
		toSerialize["most_damage_healer"] = o.MostDamageHealer
	}
	if !IsNil(o.MostDamageMage) {
		toSerialize["most_damage_mage"] = o.MostDamageMage
	}
	if !IsNil(o.MostDamageTank) {
		toSerialize["most_damage_tank"] = o.MostDamageTank
	}
	if !IsNil(o.MostHealing) {
		toSerialize["most_healing"] = o.MostHealing
	}
	if !IsNil(o.MostMobsKilled) {
		toSerialize["most_mobs_killed"] = o.MostMobsKilled
	}
	if !IsNil(o.TierCompletions) {
		toSerialize["tier_completions"] = o.TierCompletions
	}
	if !IsNil(o.TimesPlayed) {
		toSerialize["times_played"] = o.TimesPlayed
	}
	if !IsNil(o.WatcherKills) {
		toSerialize["watcher_kills"] = o.WatcherKills
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberDungeonsDungeonTypesType struct {
	value *SkyBlockProfileMemberDungeonsDungeonTypesType
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonTypesType) Get() *SkyBlockProfileMemberDungeonsDungeonTypesType {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonTypesType) Set(val *SkyBlockProfileMemberDungeonsDungeonTypesType) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonTypesType) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonTypesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsDungeonTypesType(val *SkyBlockProfileMemberDungeonsDungeonTypesType) *NullableSkyBlockProfileMemberDungeonsDungeonTypesType {
	return &NullableSkyBlockProfileMemberDungeonsDungeonTypesType{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonTypesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonTypesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
