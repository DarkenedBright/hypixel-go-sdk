/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberObjectivesDefeatTheMonster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberObjectivesDefeatTheMonster{}

// SkyBlockProfileMemberObjectivesDefeatTheMonster struct for SkyBlockProfileMemberObjectivesDefeatTheMonster
type SkyBlockProfileMemberObjectivesDefeatTheMonster struct {
	CompletedAt int64                                                             `json:"completed_at"`
	Completions *int64                                                            `json:"completions,omitempty"`
	Progress    int64                                                             `json:"progress"`
	Status      SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus `json:"status"`
}

type _SkyBlockProfileMemberObjectivesDefeatTheMonster SkyBlockProfileMemberObjectivesDefeatTheMonster

// NewSkyBlockProfileMemberObjectivesDefeatTheMonster instantiates a new SkyBlockProfileMemberObjectivesDefeatTheMonster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberObjectivesDefeatTheMonster(completedAt int64, progress int64, status SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) *SkyBlockProfileMemberObjectivesDefeatTheMonster {
	this := SkyBlockProfileMemberObjectivesDefeatTheMonster{}
	this.CompletedAt = completedAt
	this.Progress = progress
	this.Status = status
	return &this
}

// NewSkyBlockProfileMemberObjectivesDefeatTheMonsterWithDefaults instantiates a new SkyBlockProfileMemberObjectivesDefeatTheMonster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberObjectivesDefeatTheMonsterWithDefaults() *SkyBlockProfileMemberObjectivesDefeatTheMonster {
	this := SkyBlockProfileMemberObjectivesDefeatTheMonster{}
	return &this
}

// GetCompletedAt returns the CompletedAt field value
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetCompletedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetCompletedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletedAt, true
}

// SetCompletedAt sets field value
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) SetCompletedAt(v int64) {
	o.CompletedAt = v
}

// GetCompletions returns the Completions field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetCompletions() int64 {
	if o == nil || IsNil(o.Completions) {
		var ret int64
		return ret
	}
	return *o.Completions
}

// GetCompletionsOk returns a tuple with the Completions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetCompletionsOk() (*int64, bool) {
	if o == nil || IsNil(o.Completions) {
		return nil, false
	}
	return o.Completions, true
}

// HasCompletions returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) HasCompletions() bool {
	if o != nil && !IsNil(o.Completions) {
		return true
	}

	return false
}

// SetCompletions gets a reference to the given int64 and assigns it to the Completions field.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) SetCompletions(v int64) {
	o.Completions = &v
}

// GetProgress returns the Progress field value
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetProgress() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetProgressOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) SetProgress(v int64) {
	o.Progress = v
}

// GetStatus returns the Status field value
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetStatus() SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus {
	if o == nil {
		var ret SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) GetStatusOk() (*SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) SetStatus(v SkyBlockProfileMemberNetherIslandPlayerQuestsQuestDataQuestStatus) {
	o.Status = v
}

func (o SkyBlockProfileMemberObjectivesDefeatTheMonster) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberObjectivesDefeatTheMonster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["completed_at"] = o.CompletedAt
	if !IsNil(o.Completions) {
		toSerialize["completions"] = o.Completions
	}
	toSerialize["progress"] = o.Progress
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberObjectivesDefeatTheMonster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"completed_at",
		"progress",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberObjectivesDefeatTheMonster := _SkyBlockProfileMemberObjectivesDefeatTheMonster{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberObjectivesDefeatTheMonster)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberObjectivesDefeatTheMonster(varSkyBlockProfileMemberObjectivesDefeatTheMonster)

	return err
}

type NullableSkyBlockProfileMemberObjectivesDefeatTheMonster struct {
	value *SkyBlockProfileMemberObjectivesDefeatTheMonster
	isSet bool
}

func (v NullableSkyBlockProfileMemberObjectivesDefeatTheMonster) Get() *SkyBlockProfileMemberObjectivesDefeatTheMonster {
	return v.value
}

func (v *NullableSkyBlockProfileMemberObjectivesDefeatTheMonster) Set(val *SkyBlockProfileMemberObjectivesDefeatTheMonster) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberObjectivesDefeatTheMonster) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberObjectivesDefeatTheMonster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberObjectivesDefeatTheMonster(val *SkyBlockProfileMemberObjectivesDefeatTheMonster) *NullableSkyBlockProfileMemberObjectivesDefeatTheMonster {
	return &NullableSkyBlockProfileMemberObjectivesDefeatTheMonster{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberObjectivesDefeatTheMonster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberObjectivesDefeatTheMonster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
