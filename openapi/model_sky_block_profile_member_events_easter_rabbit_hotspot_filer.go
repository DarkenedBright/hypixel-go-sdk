/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberEventsEasterRabbitHotspotFiler the model 'SkyBlockProfileMemberEventsEasterRabbitHotspotFiler'
type SkyBlockProfileMemberEventsEasterRabbitHotspotFiler string

// List of SkyBlockProfileMemberEventsEaster_rabbit_hotspot_filer
const (
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_CRIMSON_ISLE    SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "CRIMSON_ISLE"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_CRYSTAL_HOLLOWS SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "CRYSTAL_HOLLOWS"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_DEEP_CAVERNS    SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "DEEP_CAVERNS"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_DWARVEN_MINES   SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "DWARVEN_MINES"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_FARMING         SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "FARMING"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_GOLD_MINE       SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "GOLD_MINE"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_HUB             SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "HUB"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_SPIDERS_DEN     SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "SPIDERS_DEN"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_THE_END         SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "THE_END"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_ALL             SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "all"
	SKYBLOCKPROFILEMEMBEREVENTSEASTERRABBITHOTSPOTFILER_RESIDENTS       SkyBlockProfileMemberEventsEasterRabbitHotspotFiler = "residents"
)

// All allowed values of SkyBlockProfileMemberEventsEasterRabbitHotspotFiler enum
var AllowedSkyBlockProfileMemberEventsEasterRabbitHotspotFilerEnumValues = []SkyBlockProfileMemberEventsEasterRabbitHotspotFiler{
	"CRIMSON_ISLE",
	"CRYSTAL_HOLLOWS",
	"DEEP_CAVERNS",
	"DWARVEN_MINES",
	"FARMING",
	"GOLD_MINE",
	"HUB",
	"SPIDERS_DEN",
	"THE_END",
	"all",
	"residents",
}

func (v *SkyBlockProfileMemberEventsEasterRabbitHotspotFiler) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberEventsEasterRabbitHotspotFiler(value)
	for _, existing := range AllowedSkyBlockProfileMemberEventsEasterRabbitHotspotFilerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberEventsEasterRabbitHotspotFiler", value)
}

// NewSkyBlockProfileMemberEventsEasterRabbitHotspotFilerFromValue returns a pointer to a valid SkyBlockProfileMemberEventsEasterRabbitHotspotFiler
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberEventsEasterRabbitHotspotFilerFromValue(v string) (*SkyBlockProfileMemberEventsEasterRabbitHotspotFiler, error) {
	ev := SkyBlockProfileMemberEventsEasterRabbitHotspotFiler(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberEventsEasterRabbitHotspotFiler: valid values are %v", v, AllowedSkyBlockProfileMemberEventsEasterRabbitHotspotFilerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberEventsEasterRabbitHotspotFiler) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberEventsEasterRabbitHotspotFilerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberEventsEaster_rabbit_hotspot_filer value
func (v SkyBlockProfileMemberEventsEasterRabbitHotspotFiler) Ptr() *SkyBlockProfileMemberEventsEasterRabbitHotspotFiler {
	return &v
}

type NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler struct {
	value *SkyBlockProfileMemberEventsEasterRabbitHotspotFiler
	isSet bool
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler) Get() *SkyBlockProfileMemberEventsEasterRabbitHotspotFiler {
	return v.value
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler) Set(val *SkyBlockProfileMemberEventsEasterRabbitHotspotFiler) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler(val *SkyBlockProfileMemberEventsEasterRabbitHotspotFiler) *NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler {
	return &NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberEventsEasterRabbitHotspotFiler) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
