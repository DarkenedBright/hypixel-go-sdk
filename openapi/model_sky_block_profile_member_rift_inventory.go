/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberRiftInventory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberRiftInventory{}

// SkyBlockProfileMemberRiftInventory struct for SkyBlockProfileMemberRiftInventory
type SkyBlockProfileMemberRiftInventory struct {
	EnderChestContents  *SkyBlockProfileMemberInventoryBase64GzipData `json:"ender_chest_contents,omitempty"`
	EnderChestPageIcons []*string                                     `json:"ender_chest_page_icons,omitempty"`
	EquipmentContents   *SkyBlockProfileMemberInventoryBase64GzipData `json:"equipment_contents,omitempty"`
	InvArmor            *SkyBlockProfileMemberInventoryBase64GzipData `json:"inv_armor,omitempty"`
	InvContents         *SkyBlockProfileMemberInventoryBase64GzipData `json:"inv_contents,omitempty"`
}

// NewSkyBlockProfileMemberRiftInventory instantiates a new SkyBlockProfileMemberRiftInventory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberRiftInventory() *SkyBlockProfileMemberRiftInventory {
	this := SkyBlockProfileMemberRiftInventory{}
	return &this
}

// NewSkyBlockProfileMemberRiftInventoryWithDefaults instantiates a new SkyBlockProfileMemberRiftInventory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberRiftInventoryWithDefaults() *SkyBlockProfileMemberRiftInventory {
	this := SkyBlockProfileMemberRiftInventory{}
	return &this
}

// GetEnderChestContents returns the EnderChestContents field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftInventory) GetEnderChestContents() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.EnderChestContents) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.EnderChestContents
}

// GetEnderChestContentsOk returns a tuple with the EnderChestContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftInventory) GetEnderChestContentsOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.EnderChestContents) {
		return nil, false
	}
	return o.EnderChestContents, true
}

// HasEnderChestContents returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftInventory) HasEnderChestContents() bool {
	if o != nil && !IsNil(o.EnderChestContents) {
		return true
	}

	return false
}

// SetEnderChestContents gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the EnderChestContents field.
func (o *SkyBlockProfileMemberRiftInventory) SetEnderChestContents(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.EnderChestContents = &v
}

// GetEnderChestPageIcons returns the EnderChestPageIcons field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftInventory) GetEnderChestPageIcons() []*string {
	if o == nil || IsNil(o.EnderChestPageIcons) {
		var ret []*string
		return ret
	}
	return o.EnderChestPageIcons
}

// GetEnderChestPageIconsOk returns a tuple with the EnderChestPageIcons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftInventory) GetEnderChestPageIconsOk() ([]*string, bool) {
	if o == nil || IsNil(o.EnderChestPageIcons) {
		return nil, false
	}
	return o.EnderChestPageIcons, true
}

// HasEnderChestPageIcons returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftInventory) HasEnderChestPageIcons() bool {
	if o != nil && !IsNil(o.EnderChestPageIcons) {
		return true
	}

	return false
}

// SetEnderChestPageIcons gets a reference to the given []*string and assigns it to the EnderChestPageIcons field.
func (o *SkyBlockProfileMemberRiftInventory) SetEnderChestPageIcons(v []*string) {
	o.EnderChestPageIcons = v
}

// GetEquipmentContents returns the EquipmentContents field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftInventory) GetEquipmentContents() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.EquipmentContents) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.EquipmentContents
}

// GetEquipmentContentsOk returns a tuple with the EquipmentContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftInventory) GetEquipmentContentsOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.EquipmentContents) {
		return nil, false
	}
	return o.EquipmentContents, true
}

// HasEquipmentContents returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftInventory) HasEquipmentContents() bool {
	if o != nil && !IsNil(o.EquipmentContents) {
		return true
	}

	return false
}

// SetEquipmentContents gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the EquipmentContents field.
func (o *SkyBlockProfileMemberRiftInventory) SetEquipmentContents(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.EquipmentContents = &v
}

// GetInvArmor returns the InvArmor field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftInventory) GetInvArmor() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.InvArmor) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.InvArmor
}

// GetInvArmorOk returns a tuple with the InvArmor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftInventory) GetInvArmorOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.InvArmor) {
		return nil, false
	}
	return o.InvArmor, true
}

// HasInvArmor returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftInventory) HasInvArmor() bool {
	if o != nil && !IsNil(o.InvArmor) {
		return true
	}

	return false
}

// SetInvArmor gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the InvArmor field.
func (o *SkyBlockProfileMemberRiftInventory) SetInvArmor(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.InvArmor = &v
}

// GetInvContents returns the InvContents field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberRiftInventory) GetInvContents() SkyBlockProfileMemberInventoryBase64GzipData {
	if o == nil || IsNil(o.InvContents) {
		var ret SkyBlockProfileMemberInventoryBase64GzipData
		return ret
	}
	return *o.InvContents
}

// GetInvContentsOk returns a tuple with the InvContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberRiftInventory) GetInvContentsOk() (*SkyBlockProfileMemberInventoryBase64GzipData, bool) {
	if o == nil || IsNil(o.InvContents) {
		return nil, false
	}
	return o.InvContents, true
}

// HasInvContents returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberRiftInventory) HasInvContents() bool {
	if o != nil && !IsNil(o.InvContents) {
		return true
	}

	return false
}

// SetInvContents gets a reference to the given SkyBlockProfileMemberInventoryBase64GzipData and assigns it to the InvContents field.
func (o *SkyBlockProfileMemberRiftInventory) SetInvContents(v SkyBlockProfileMemberInventoryBase64GzipData) {
	o.InvContents = &v
}

func (o SkyBlockProfileMemberRiftInventory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberRiftInventory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnderChestContents) {
		toSerialize["ender_chest_contents"] = o.EnderChestContents
	}
	if !IsNil(o.EnderChestPageIcons) {
		toSerialize["ender_chest_page_icons"] = o.EnderChestPageIcons
	}
	if !IsNil(o.EquipmentContents) {
		toSerialize["equipment_contents"] = o.EquipmentContents
	}
	if !IsNil(o.InvArmor) {
		toSerialize["inv_armor"] = o.InvArmor
	}
	if !IsNil(o.InvContents) {
		toSerialize["inv_contents"] = o.InvContents
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberRiftInventory struct {
	value *SkyBlockProfileMemberRiftInventory
	isSet bool
}

func (v NullableSkyBlockProfileMemberRiftInventory) Get() *SkyBlockProfileMemberRiftInventory {
	return v.value
}

func (v *NullableSkyBlockProfileMemberRiftInventory) Set(val *SkyBlockProfileMemberRiftInventory) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberRiftInventory) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberRiftInventory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberRiftInventory(val *SkyBlockProfileMemberRiftInventory) *NullableSkyBlockProfileMemberRiftInventory {
	return &NullableSkyBlockProfileMemberRiftInventory{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberRiftInventory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberRiftInventory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
