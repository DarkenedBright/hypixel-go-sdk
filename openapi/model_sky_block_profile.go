/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfile{}

// SkyBlockProfile struct for SkyBlockProfile
type SkyBlockProfile struct {
	Banking           *SkyBlockProfileBanking           `json:"banking,omitempty"`
	CommunityUpgrades *SkyBlockProfileCommunityUpgrades `json:"community_upgrades,omitempty"`
	CreatedAt         *int64                            `json:"created_at,omitempty"`
	CuteName          SkyBlockProfileCuteName           `json:"cute_name"`
	GameMode          *SkyBlockProfileGameMode          `json:"game_mode,omitempty"`
	Members           map[string]SkyBlockProfileMember  `json:"members"`
	ProfileId         string                            `json:"profile_id"`
	Selected          bool                              `json:"selected"`
}

type _SkyBlockProfile SkyBlockProfile

// NewSkyBlockProfile instantiates a new SkyBlockProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfile(cuteName SkyBlockProfileCuteName, members map[string]SkyBlockProfileMember, profileId string, selected bool) *SkyBlockProfile {
	this := SkyBlockProfile{}
	this.CuteName = cuteName
	this.Members = members
	this.ProfileId = profileId
	this.Selected = selected
	return &this
}

// NewSkyBlockProfileWithDefaults instantiates a new SkyBlockProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileWithDefaults() *SkyBlockProfile {
	this := SkyBlockProfile{}
	return &this
}

// GetBanking returns the Banking field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetBanking() SkyBlockProfileBanking {
	if o == nil || IsNil(o.Banking) {
		var ret SkyBlockProfileBanking
		return ret
	}
	return *o.Banking
}

// GetBankingOk returns a tuple with the Banking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetBankingOk() (*SkyBlockProfileBanking, bool) {
	if o == nil || IsNil(o.Banking) {
		return nil, false
	}
	return o.Banking, true
}

// HasBanking returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasBanking() bool {
	if o != nil && !IsNil(o.Banking) {
		return true
	}

	return false
}

// SetBanking gets a reference to the given SkyBlockProfileBanking and assigns it to the Banking field.
func (o *SkyBlockProfile) SetBanking(v SkyBlockProfileBanking) {
	o.Banking = &v
}

// GetCommunityUpgrades returns the CommunityUpgrades field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetCommunityUpgrades() SkyBlockProfileCommunityUpgrades {
	if o == nil || IsNil(o.CommunityUpgrades) {
		var ret SkyBlockProfileCommunityUpgrades
		return ret
	}
	return *o.CommunityUpgrades
}

// GetCommunityUpgradesOk returns a tuple with the CommunityUpgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetCommunityUpgradesOk() (*SkyBlockProfileCommunityUpgrades, bool) {
	if o == nil || IsNil(o.CommunityUpgrades) {
		return nil, false
	}
	return o.CommunityUpgrades, true
}

// HasCommunityUpgrades returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasCommunityUpgrades() bool {
	if o != nil && !IsNil(o.CommunityUpgrades) {
		return true
	}

	return false
}

// SetCommunityUpgrades gets a reference to the given SkyBlockProfileCommunityUpgrades and assigns it to the CommunityUpgrades field.
func (o *SkyBlockProfile) SetCommunityUpgrades(v SkyBlockProfileCommunityUpgrades) {
	o.CommunityUpgrades = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetCreatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *SkyBlockProfile) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetCuteName returns the CuteName field value
func (o *SkyBlockProfile) GetCuteName() SkyBlockProfileCuteName {
	if o == nil {
		var ret SkyBlockProfileCuteName
		return ret
	}

	return o.CuteName
}

// GetCuteNameOk returns a tuple with the CuteName field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetCuteNameOk() (*SkyBlockProfileCuteName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CuteName, true
}

// SetCuteName sets field value
func (o *SkyBlockProfile) SetCuteName(v SkyBlockProfileCuteName) {
	o.CuteName = v
}

// GetGameMode returns the GameMode field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetGameMode() SkyBlockProfileGameMode {
	if o == nil || IsNil(o.GameMode) {
		var ret SkyBlockProfileGameMode
		return ret
	}
	return *o.GameMode
}

// GetGameModeOk returns a tuple with the GameMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetGameModeOk() (*SkyBlockProfileGameMode, bool) {
	if o == nil || IsNil(o.GameMode) {
		return nil, false
	}
	return o.GameMode, true
}

// HasGameMode returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasGameMode() bool {
	if o != nil && !IsNil(o.GameMode) {
		return true
	}

	return false
}

// SetGameMode gets a reference to the given SkyBlockProfileGameMode and assigns it to the GameMode field.
func (o *SkyBlockProfile) SetGameMode(v SkyBlockProfileGameMode) {
	o.GameMode = &v
}

// GetMembers returns the Members field value
func (o *SkyBlockProfile) GetMembers() map[string]SkyBlockProfileMember {
	if o == nil {
		var ret map[string]SkyBlockProfileMember
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetMembersOk() (*map[string]SkyBlockProfileMember, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Members, true
}

// SetMembers sets field value
func (o *SkyBlockProfile) SetMembers(v map[string]SkyBlockProfileMember) {
	o.Members = v
}

// GetProfileId returns the ProfileId field value
func (o *SkyBlockProfile) GetProfileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *SkyBlockProfile) SetProfileId(v string) {
	o.ProfileId = v
}

// GetSelected returns the Selected field value
func (o *SkyBlockProfile) GetSelected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Selected
}

// GetSelectedOk returns a tuple with the Selected field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetSelectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Selected, true
}

// SetSelected sets field value
func (o *SkyBlockProfile) SetSelected(v bool) {
	o.Selected = v
}

func (o SkyBlockProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Banking) {
		toSerialize["banking"] = o.Banking
	}
	if !IsNil(o.CommunityUpgrades) {
		toSerialize["community_upgrades"] = o.CommunityUpgrades
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	toSerialize["cute_name"] = o.CuteName
	if !IsNil(o.GameMode) {
		toSerialize["game_mode"] = o.GameMode
	}
	toSerialize["members"] = o.Members
	toSerialize["profile_id"] = o.ProfileId
	toSerialize["selected"] = o.Selected
	return toSerialize, nil
}

func (o *SkyBlockProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cute_name",
		"members",
		"profile_id",
		"selected",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfile := _SkyBlockProfile{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfile)

	if err != nil {
		return err
	}

	*o = SkyBlockProfile(varSkyBlockProfile)

	return err
}

type NullableSkyBlockProfile struct {
	value *SkyBlockProfile
	isSet bool
}

func (v NullableSkyBlockProfile) Get() *SkyBlockProfile {
	return v.value
}

func (v *NullableSkyBlockProfile) Set(val *SkyBlockProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfile(val *SkyBlockProfile) *NullableSkyBlockProfile {
	return &NullableSkyBlockProfile{value: val, isSet: true}
}

func (v NullableSkyBlockProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
