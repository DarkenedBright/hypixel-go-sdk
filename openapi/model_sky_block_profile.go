/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfile{}

// SkyBlockProfile struct for SkyBlockProfile
type SkyBlockProfile struct {
	Banking           *SkyBlockProfileBanking           `json:"banking,omitempty"`
	CommunityUpgrades map[string]interface{}            `json:"community_upgrades,omitempty"`
	CuteName          *string                           `json:"cute_name,omitempty"`
	GameMode          *SkyBlockProfileGameMode          `json:"game_mode,omitempty"`
	Members           *map[string]SkyBlockProfileMember `json:"members,omitempty"`
	ProfileId         *string                           `json:"profile_id,omitempty"`
	Selected          *bool                             `json:"selected,omitempty"`
}

// NewSkyBlockProfile instantiates a new SkyBlockProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfile() *SkyBlockProfile {
	this := SkyBlockProfile{}
	return &this
}

// NewSkyBlockProfileWithDefaults instantiates a new SkyBlockProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileWithDefaults() *SkyBlockProfile {
	this := SkyBlockProfile{}
	return &this
}

// GetBanking returns the Banking field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetBanking() SkyBlockProfileBanking {
	if o == nil || IsNil(o.Banking) {
		var ret SkyBlockProfileBanking
		return ret
	}
	return *o.Banking
}

// GetBankingOk returns a tuple with the Banking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetBankingOk() (*SkyBlockProfileBanking, bool) {
	if o == nil || IsNil(o.Banking) {
		return nil, false
	}
	return o.Banking, true
}

// HasBanking returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasBanking() bool {
	if o != nil && !IsNil(o.Banking) {
		return true
	}

	return false
}

// SetBanking gets a reference to the given SkyBlockProfileBanking and assigns it to the Banking field.
func (o *SkyBlockProfile) SetBanking(v SkyBlockProfileBanking) {
	o.Banking = &v
}

// GetCommunityUpgrades returns the CommunityUpgrades field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetCommunityUpgrades() map[string]interface{} {
	if o == nil || IsNil(o.CommunityUpgrades) {
		var ret map[string]interface{}
		return ret
	}
	return o.CommunityUpgrades
}

// GetCommunityUpgradesOk returns a tuple with the CommunityUpgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetCommunityUpgradesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CommunityUpgrades) {
		return map[string]interface{}{}, false
	}
	return o.CommunityUpgrades, true
}

// HasCommunityUpgrades returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasCommunityUpgrades() bool {
	if o != nil && !IsNil(o.CommunityUpgrades) {
		return true
	}

	return false
}

// SetCommunityUpgrades gets a reference to the given map[string]interface{} and assigns it to the CommunityUpgrades field.
func (o *SkyBlockProfile) SetCommunityUpgrades(v map[string]interface{}) {
	o.CommunityUpgrades = v
}

// GetCuteName returns the CuteName field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetCuteName() string {
	if o == nil || IsNil(o.CuteName) {
		var ret string
		return ret
	}
	return *o.CuteName
}

// GetCuteNameOk returns a tuple with the CuteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetCuteNameOk() (*string, bool) {
	if o == nil || IsNil(o.CuteName) {
		return nil, false
	}
	return o.CuteName, true
}

// HasCuteName returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasCuteName() bool {
	if o != nil && !IsNil(o.CuteName) {
		return true
	}

	return false
}

// SetCuteName gets a reference to the given string and assigns it to the CuteName field.
func (o *SkyBlockProfile) SetCuteName(v string) {
	o.CuteName = &v
}

// GetGameMode returns the GameMode field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetGameMode() SkyBlockProfileGameMode {
	if o == nil || IsNil(o.GameMode) {
		var ret SkyBlockProfileGameMode
		return ret
	}
	return *o.GameMode
}

// GetGameModeOk returns a tuple with the GameMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetGameModeOk() (*SkyBlockProfileGameMode, bool) {
	if o == nil || IsNil(o.GameMode) {
		return nil, false
	}
	return o.GameMode, true
}

// HasGameMode returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasGameMode() bool {
	if o != nil && !IsNil(o.GameMode) {
		return true
	}

	return false
}

// SetGameMode gets a reference to the given SkyBlockProfileGameMode and assigns it to the GameMode field.
func (o *SkyBlockProfile) SetGameMode(v SkyBlockProfileGameMode) {
	o.GameMode = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetMembers() map[string]SkyBlockProfileMember {
	if o == nil || IsNil(o.Members) {
		var ret map[string]SkyBlockProfileMember
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetMembersOk() (*map[string]SkyBlockProfileMember, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given map[string]SkyBlockProfileMember and assigns it to the Members field.
func (o *SkyBlockProfile) SetMembers(v map[string]SkyBlockProfileMember) {
	o.Members = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *SkyBlockProfile) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetSelected returns the Selected field value if set, zero value otherwise.
func (o *SkyBlockProfile) GetSelected() bool {
	if o == nil || IsNil(o.Selected) {
		var ret bool
		return ret
	}
	return *o.Selected
}

// GetSelectedOk returns a tuple with the Selected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfile) GetSelectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Selected) {
		return nil, false
	}
	return o.Selected, true
}

// HasSelected returns a boolean if a field has been set.
func (o *SkyBlockProfile) HasSelected() bool {
	if o != nil && !IsNil(o.Selected) {
		return true
	}

	return false
}

// SetSelected gets a reference to the given bool and assigns it to the Selected field.
func (o *SkyBlockProfile) SetSelected(v bool) {
	o.Selected = &v
}

func (o SkyBlockProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Banking) {
		toSerialize["banking"] = o.Banking
	}
	if !IsNil(o.CommunityUpgrades) {
		toSerialize["community_upgrades"] = o.CommunityUpgrades
	}
	if !IsNil(o.CuteName) {
		toSerialize["cute_name"] = o.CuteName
	}
	if !IsNil(o.GameMode) {
		toSerialize["game_mode"] = o.GameMode
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profile_id"] = o.ProfileId
	}
	if !IsNil(o.Selected) {
		toSerialize["selected"] = o.Selected
	}
	return toSerialize, nil
}

type NullableSkyBlockProfile struct {
	value *SkyBlockProfile
	isSet bool
}

func (v NullableSkyBlockProfile) Get() *SkyBlockProfile {
	return v.value
}

func (v *NullableSkyBlockProfile) Set(val *SkyBlockProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfile(val *SkyBlockProfile) *NullableSkyBlockProfile {
	return &NullableSkyBlockProfile{value: val, isSet: true}
}

func (v NullableSkyBlockProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
