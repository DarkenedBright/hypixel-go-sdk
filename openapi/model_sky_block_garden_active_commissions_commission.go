/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockGardenActiveCommissionsCommission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockGardenActiveCommissionsCommission{}

// SkyBlockGardenActiveCommissionsCommission struct for SkyBlockGardenActiveCommissionsCommission
type SkyBlockGardenActiveCommissionsCommission struct {
	BonusRewards []SkyBlockGardenActiveCommissionsCommissionBonusReward `json:"bonus_rewards,omitempty"`
	ExtraRewards []SkyBlockGardenActiveCommissionsCommissionExtraReward `json:"extra_rewards,omitempty"`
	Position     int64                                                  `json:"position"`
	Requirement  []SkyBlockGardenActiveCommissionsCommissionRequirement `json:"requirement"`
	Status       SkyBlockGardenActiveCommissionsCommissionStatus        `json:"status"`
}

type _SkyBlockGardenActiveCommissionsCommission SkyBlockGardenActiveCommissionsCommission

// NewSkyBlockGardenActiveCommissionsCommission instantiates a new SkyBlockGardenActiveCommissionsCommission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockGardenActiveCommissionsCommission(position int64, requirement []SkyBlockGardenActiveCommissionsCommissionRequirement, status SkyBlockGardenActiveCommissionsCommissionStatus) *SkyBlockGardenActiveCommissionsCommission {
	this := SkyBlockGardenActiveCommissionsCommission{}
	this.Position = position
	this.Requirement = requirement
	this.Status = status
	return &this
}

// NewSkyBlockGardenActiveCommissionsCommissionWithDefaults instantiates a new SkyBlockGardenActiveCommissionsCommission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockGardenActiveCommissionsCommissionWithDefaults() *SkyBlockGardenActiveCommissionsCommission {
	this := SkyBlockGardenActiveCommissionsCommission{}
	return &this
}

// GetBonusRewards returns the BonusRewards field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommission) GetBonusRewards() []SkyBlockGardenActiveCommissionsCommissionBonusReward {
	if o == nil || IsNil(o.BonusRewards) {
		var ret []SkyBlockGardenActiveCommissionsCommissionBonusReward
		return ret
	}
	return o.BonusRewards
}

// GetBonusRewardsOk returns a tuple with the BonusRewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) GetBonusRewardsOk() ([]SkyBlockGardenActiveCommissionsCommissionBonusReward, bool) {
	if o == nil || IsNil(o.BonusRewards) {
		return nil, false
	}
	return o.BonusRewards, true
}

// HasBonusRewards returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) HasBonusRewards() bool {
	if o != nil && !IsNil(o.BonusRewards) {
		return true
	}

	return false
}

// SetBonusRewards gets a reference to the given []SkyBlockGardenActiveCommissionsCommissionBonusReward and assigns it to the BonusRewards field.
func (o *SkyBlockGardenActiveCommissionsCommission) SetBonusRewards(v []SkyBlockGardenActiveCommissionsCommissionBonusReward) {
	o.BonusRewards = v
}

// GetExtraRewards returns the ExtraRewards field value if set, zero value otherwise.
func (o *SkyBlockGardenActiveCommissionsCommission) GetExtraRewards() []SkyBlockGardenActiveCommissionsCommissionExtraReward {
	if o == nil || IsNil(o.ExtraRewards) {
		var ret []SkyBlockGardenActiveCommissionsCommissionExtraReward
		return ret
	}
	return o.ExtraRewards
}

// GetExtraRewardsOk returns a tuple with the ExtraRewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) GetExtraRewardsOk() ([]SkyBlockGardenActiveCommissionsCommissionExtraReward, bool) {
	if o == nil || IsNil(o.ExtraRewards) {
		return nil, false
	}
	return o.ExtraRewards, true
}

// HasExtraRewards returns a boolean if a field has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) HasExtraRewards() bool {
	if o != nil && !IsNil(o.ExtraRewards) {
		return true
	}

	return false
}

// SetExtraRewards gets a reference to the given []SkyBlockGardenActiveCommissionsCommissionExtraReward and assigns it to the ExtraRewards field.
func (o *SkyBlockGardenActiveCommissionsCommission) SetExtraRewards(v []SkyBlockGardenActiveCommissionsCommissionExtraReward) {
	o.ExtraRewards = v
}

// GetPosition returns the Position field value
func (o *SkyBlockGardenActiveCommissionsCommission) GetPosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) GetPositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *SkyBlockGardenActiveCommissionsCommission) SetPosition(v int64) {
	o.Position = v
}

// GetRequirement returns the Requirement field value
func (o *SkyBlockGardenActiveCommissionsCommission) GetRequirement() []SkyBlockGardenActiveCommissionsCommissionRequirement {
	if o == nil {
		var ret []SkyBlockGardenActiveCommissionsCommissionRequirement
		return ret
	}

	return o.Requirement
}

// GetRequirementOk returns a tuple with the Requirement field value
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) GetRequirementOk() ([]SkyBlockGardenActiveCommissionsCommissionRequirement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requirement, true
}

// SetRequirement sets field value
func (o *SkyBlockGardenActiveCommissionsCommission) SetRequirement(v []SkyBlockGardenActiveCommissionsCommissionRequirement) {
	o.Requirement = v
}

// GetStatus returns the Status field value
func (o *SkyBlockGardenActiveCommissionsCommission) GetStatus() SkyBlockGardenActiveCommissionsCommissionStatus {
	if o == nil {
		var ret SkyBlockGardenActiveCommissionsCommissionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenActiveCommissionsCommission) GetStatusOk() (*SkyBlockGardenActiveCommissionsCommissionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SkyBlockGardenActiveCommissionsCommission) SetStatus(v SkyBlockGardenActiveCommissionsCommissionStatus) {
	o.Status = v
}

func (o SkyBlockGardenActiveCommissionsCommission) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockGardenActiveCommissionsCommission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BonusRewards) {
		toSerialize["bonus_rewards"] = o.BonusRewards
	}
	if !IsNil(o.ExtraRewards) {
		toSerialize["extra_rewards"] = o.ExtraRewards
	}
	toSerialize["position"] = o.Position
	toSerialize["requirement"] = o.Requirement
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *SkyBlockGardenActiveCommissionsCommission) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"position",
		"requirement",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockGardenActiveCommissionsCommission := _SkyBlockGardenActiveCommissionsCommission{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockGardenActiveCommissionsCommission)

	if err != nil {
		return err
	}

	*o = SkyBlockGardenActiveCommissionsCommission(varSkyBlockGardenActiveCommissionsCommission)

	return err
}

type NullableSkyBlockGardenActiveCommissionsCommission struct {
	value *SkyBlockGardenActiveCommissionsCommission
	isSet bool
}

func (v NullableSkyBlockGardenActiveCommissionsCommission) Get() *SkyBlockGardenActiveCommissionsCommission {
	return v.value
}

func (v *NullableSkyBlockGardenActiveCommissionsCommission) Set(val *SkyBlockGardenActiveCommissionsCommission) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenActiveCommissionsCommission) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenActiveCommissionsCommission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenActiveCommissionsCommission(val *SkyBlockGardenActiveCommissionsCommission) *NullableSkyBlockGardenActiveCommissionsCommission {
	return &NullableSkyBlockGardenActiveCommissionsCommission{value: val, isSet: true}
}

func (v NullableSkyBlockGardenActiveCommissionsCommission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenActiveCommissionsCommission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
