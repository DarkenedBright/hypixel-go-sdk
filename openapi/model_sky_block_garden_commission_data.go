/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockGardenCommissionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockGardenCommissionData{}

// SkyBlockGardenCommissionData struct for SkyBlockGardenCommissionData
type SkyBlockGardenCommissionData struct {
	// A map of visitor identifier to completed count
	Completed        map[string]interface{} `json:"completed,omitempty"`
	TotalCompleted   *int64                 `json:"total_completed,omitempty"`
	UniqueNpcsServed *int64                 `json:"unique_npcs_served,omitempty"`
	// A map of visitor identifier to visit count
	Visits map[string]interface{} `json:"visits,omitempty"`
}

// NewSkyBlockGardenCommissionData instantiates a new SkyBlockGardenCommissionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockGardenCommissionData() *SkyBlockGardenCommissionData {
	this := SkyBlockGardenCommissionData{}
	return &this
}

// NewSkyBlockGardenCommissionDataWithDefaults instantiates a new SkyBlockGardenCommissionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockGardenCommissionDataWithDefaults() *SkyBlockGardenCommissionData {
	this := SkyBlockGardenCommissionData{}
	return &this
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *SkyBlockGardenCommissionData) GetCompleted() map[string]interface{} {
	if o == nil || IsNil(o.Completed) {
		var ret map[string]interface{}
		return ret
	}
	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenCommissionData) GetCompletedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Completed) {
		return map[string]interface{}{}, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *SkyBlockGardenCommissionData) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given map[string]interface{} and assigns it to the Completed field.
func (o *SkyBlockGardenCommissionData) SetCompleted(v map[string]interface{}) {
	o.Completed = v
}

// GetTotalCompleted returns the TotalCompleted field value if set, zero value otherwise.
func (o *SkyBlockGardenCommissionData) GetTotalCompleted() int64 {
	if o == nil || IsNil(o.TotalCompleted) {
		var ret int64
		return ret
	}
	return *o.TotalCompleted
}

// GetTotalCompletedOk returns a tuple with the TotalCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenCommissionData) GetTotalCompletedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCompleted) {
		return nil, false
	}
	return o.TotalCompleted, true
}

// HasTotalCompleted returns a boolean if a field has been set.
func (o *SkyBlockGardenCommissionData) HasTotalCompleted() bool {
	if o != nil && !IsNil(o.TotalCompleted) {
		return true
	}

	return false
}

// SetTotalCompleted gets a reference to the given int64 and assigns it to the TotalCompleted field.
func (o *SkyBlockGardenCommissionData) SetTotalCompleted(v int64) {
	o.TotalCompleted = &v
}

// GetUniqueNpcsServed returns the UniqueNpcsServed field value if set, zero value otherwise.
func (o *SkyBlockGardenCommissionData) GetUniqueNpcsServed() int64 {
	if o == nil || IsNil(o.UniqueNpcsServed) {
		var ret int64
		return ret
	}
	return *o.UniqueNpcsServed
}

// GetUniqueNpcsServedOk returns a tuple with the UniqueNpcsServed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenCommissionData) GetUniqueNpcsServedOk() (*int64, bool) {
	if o == nil || IsNil(o.UniqueNpcsServed) {
		return nil, false
	}
	return o.UniqueNpcsServed, true
}

// HasUniqueNpcsServed returns a boolean if a field has been set.
func (o *SkyBlockGardenCommissionData) HasUniqueNpcsServed() bool {
	if o != nil && !IsNil(o.UniqueNpcsServed) {
		return true
	}

	return false
}

// SetUniqueNpcsServed gets a reference to the given int64 and assigns it to the UniqueNpcsServed field.
func (o *SkyBlockGardenCommissionData) SetUniqueNpcsServed(v int64) {
	o.UniqueNpcsServed = &v
}

// GetVisits returns the Visits field value if set, zero value otherwise.
func (o *SkyBlockGardenCommissionData) GetVisits() map[string]interface{} {
	if o == nil || IsNil(o.Visits) {
		var ret map[string]interface{}
		return ret
	}
	return o.Visits
}

// GetVisitsOk returns a tuple with the Visits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockGardenCommissionData) GetVisitsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Visits) {
		return map[string]interface{}{}, false
	}
	return o.Visits, true
}

// HasVisits returns a boolean if a field has been set.
func (o *SkyBlockGardenCommissionData) HasVisits() bool {
	if o != nil && !IsNil(o.Visits) {
		return true
	}

	return false
}

// SetVisits gets a reference to the given map[string]interface{} and assigns it to the Visits field.
func (o *SkyBlockGardenCommissionData) SetVisits(v map[string]interface{}) {
	o.Visits = v
}

func (o SkyBlockGardenCommissionData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockGardenCommissionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.TotalCompleted) {
		toSerialize["total_completed"] = o.TotalCompleted
	}
	if !IsNil(o.UniqueNpcsServed) {
		toSerialize["unique_npcs_served"] = o.UniqueNpcsServed
	}
	if !IsNil(o.Visits) {
		toSerialize["visits"] = o.Visits
	}
	return toSerialize, nil
}

type NullableSkyBlockGardenCommissionData struct {
	value *SkyBlockGardenCommissionData
	isSet bool
}

func (v NullableSkyBlockGardenCommissionData) Get() *SkyBlockGardenCommissionData {
	return v.value
}

func (v *NullableSkyBlockGardenCommissionData) Set(val *SkyBlockGardenCommissionData) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockGardenCommissionData) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockGardenCommissionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockGardenCommissionData(val *SkyBlockGardenCommissionData) *NullableSkyBlockGardenCommissionData {
	return &NullableSkyBlockGardenCommissionData{value: val, isSet: true}
}

func (v NullableSkyBlockGardenCommissionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockGardenCommissionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
