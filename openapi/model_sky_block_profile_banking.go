/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileBanking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileBanking{}

// SkyBlockProfileBanking struct for SkyBlockProfileBanking
type SkyBlockProfileBanking struct {
	Balance      float64                             `json:"balance"`
	Transactions []SkyBlockProfileBankingTransaction `json:"transactions"`
}

type _SkyBlockProfileBanking SkyBlockProfileBanking

// NewSkyBlockProfileBanking instantiates a new SkyBlockProfileBanking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileBanking(balance float64, transactions []SkyBlockProfileBankingTransaction) *SkyBlockProfileBanking {
	this := SkyBlockProfileBanking{}
	this.Balance = balance
	this.Transactions = transactions
	return &this
}

// NewSkyBlockProfileBankingWithDefaults instantiates a new SkyBlockProfileBanking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileBankingWithDefaults() *SkyBlockProfileBanking {
	this := SkyBlockProfileBanking{}
	return &this
}

// GetBalance returns the Balance field value
func (o *SkyBlockProfileBanking) GetBalance() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBanking) GetBalanceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *SkyBlockProfileBanking) SetBalance(v float64) {
	o.Balance = v
}

// GetTransactions returns the Transactions field value
func (o *SkyBlockProfileBanking) GetTransactions() []SkyBlockProfileBankingTransaction {
	if o == nil {
		var ret []SkyBlockProfileBankingTransaction
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBanking) GetTransactionsOk() ([]SkyBlockProfileBankingTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transactions, true
}

// SetTransactions sets field value
func (o *SkyBlockProfileBanking) SetTransactions(v []SkyBlockProfileBankingTransaction) {
	o.Transactions = v
}

func (o SkyBlockProfileBanking) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileBanking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["balance"] = o.Balance
	toSerialize["transactions"] = o.Transactions
	return toSerialize, nil
}

func (o *SkyBlockProfileBanking) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"balance",
		"transactions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileBanking := _SkyBlockProfileBanking{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileBanking)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileBanking(varSkyBlockProfileBanking)

	return err
}

type NullableSkyBlockProfileBanking struct {
	value *SkyBlockProfileBanking
	isSet bool
}

func (v NullableSkyBlockProfileBanking) Get() *SkyBlockProfileBanking {
	return v.value
}

func (v *NullableSkyBlockProfileBanking) Set(val *SkyBlockProfileBanking) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileBanking) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileBanking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileBanking(val *SkyBlockProfileBanking) *NullableSkyBlockProfileBanking {
	return &NullableSkyBlockProfileBanking{value: val, isSet: true}
}

func (v NullableSkyBlockProfileBanking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileBanking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
