/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileBanking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileBanking{}

// SkyBlockProfileBanking Information about the bank account for this profile, only present if the API banking setting is enabled
type SkyBlockProfileBanking struct {
	Balance      *float64                                  `json:"balance,omitempty"`
	Transactions []SkyBlockProfileBankingTransactionsInner `json:"transactions,omitempty"`
}

// NewSkyBlockProfileBanking instantiates a new SkyBlockProfileBanking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileBanking() *SkyBlockProfileBanking {
	this := SkyBlockProfileBanking{}
	return &this
}

// NewSkyBlockProfileBankingWithDefaults instantiates a new SkyBlockProfileBanking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileBankingWithDefaults() *SkyBlockProfileBanking {
	this := SkyBlockProfileBanking{}
	return &this
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *SkyBlockProfileBanking) GetBalance() float64 {
	if o == nil || IsNil(o.Balance) {
		var ret float64
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBanking) GetBalanceOk() (*float64, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *SkyBlockProfileBanking) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float64 and assigns it to the Balance field.
func (o *SkyBlockProfileBanking) SetBalance(v float64) {
	o.Balance = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *SkyBlockProfileBanking) GetTransactions() []SkyBlockProfileBankingTransactionsInner {
	if o == nil || IsNil(o.Transactions) {
		var ret []SkyBlockProfileBankingTransactionsInner
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBanking) GetTransactionsOk() ([]SkyBlockProfileBankingTransactionsInner, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *SkyBlockProfileBanking) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []SkyBlockProfileBankingTransactionsInner and assigns it to the Transactions field.
func (o *SkyBlockProfileBanking) SetTransactions(v []SkyBlockProfileBankingTransactionsInner) {
	o.Transactions = v
}

func (o SkyBlockProfileBanking) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileBanking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileBanking struct {
	value *SkyBlockProfileBanking
	isSet bool
}

func (v NullableSkyBlockProfileBanking) Get() *SkyBlockProfileBanking {
	return v.value
}

func (v *NullableSkyBlockProfileBanking) Set(val *SkyBlockProfileBanking) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileBanking) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileBanking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileBanking(val *SkyBlockProfileBanking) *NullableSkyBlockProfileBanking {
	return &NullableSkyBlockProfileBanking{value: val, isSet: true}
}

func (v NullableSkyBlockProfileBanking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileBanking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
