/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberPlayerStatsRaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerStatsRaces{}

// SkyBlockProfileMemberPlayerStatsRaces struct for SkyBlockProfileMemberPlayerStatsRaces
type SkyBlockProfileMemberPlayerStatsRaces struct {
	ChickenRaceBestTime2 *float64                                         `json:"chicken_race_best_time_2,omitempty"`
	DungeonHub           *SkyBlockProfileMemberPlayerStatsRacesDungeonHub `json:"dungeon_hub,omitempty"`
	EndRaceBestTime      *float64                                         `json:"end_race_best_time,omitempty"`
	ForagingRaceBestTime *float64                                         `json:"foraging_race_best_time,omitempty"`
	RiftRaceBestTime     *float64                                         `json:"rift_race_best_time,omitempty"`
}

// NewSkyBlockProfileMemberPlayerStatsRaces instantiates a new SkyBlockProfileMemberPlayerStatsRaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerStatsRaces() *SkyBlockProfileMemberPlayerStatsRaces {
	this := SkyBlockProfileMemberPlayerStatsRaces{}
	return &this
}

// NewSkyBlockProfileMemberPlayerStatsRacesWithDefaults instantiates a new SkyBlockProfileMemberPlayerStatsRaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerStatsRacesWithDefaults() *SkyBlockProfileMemberPlayerStatsRaces {
	this := SkyBlockProfileMemberPlayerStatsRaces{}
	return &this
}

// GetChickenRaceBestTime2 returns the ChickenRaceBestTime2 field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetChickenRaceBestTime2() float64 {
	if o == nil || IsNil(o.ChickenRaceBestTime2) {
		var ret float64
		return ret
	}
	return *o.ChickenRaceBestTime2
}

// GetChickenRaceBestTime2Ok returns a tuple with the ChickenRaceBestTime2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetChickenRaceBestTime2Ok() (*float64, bool) {
	if o == nil || IsNil(o.ChickenRaceBestTime2) {
		return nil, false
	}
	return o.ChickenRaceBestTime2, true
}

// HasChickenRaceBestTime2 returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) HasChickenRaceBestTime2() bool {
	if o != nil && !IsNil(o.ChickenRaceBestTime2) {
		return true
	}

	return false
}

// SetChickenRaceBestTime2 gets a reference to the given float64 and assigns it to the ChickenRaceBestTime2 field.
func (o *SkyBlockProfileMemberPlayerStatsRaces) SetChickenRaceBestTime2(v float64) {
	o.ChickenRaceBestTime2 = &v
}

// GetDungeonHub returns the DungeonHub field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetDungeonHub() SkyBlockProfileMemberPlayerStatsRacesDungeonHub {
	if o == nil || IsNil(o.DungeonHub) {
		var ret SkyBlockProfileMemberPlayerStatsRacesDungeonHub
		return ret
	}
	return *o.DungeonHub
}

// GetDungeonHubOk returns a tuple with the DungeonHub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetDungeonHubOk() (*SkyBlockProfileMemberPlayerStatsRacesDungeonHub, bool) {
	if o == nil || IsNil(o.DungeonHub) {
		return nil, false
	}
	return o.DungeonHub, true
}

// HasDungeonHub returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) HasDungeonHub() bool {
	if o != nil && !IsNil(o.DungeonHub) {
		return true
	}

	return false
}

// SetDungeonHub gets a reference to the given SkyBlockProfileMemberPlayerStatsRacesDungeonHub and assigns it to the DungeonHub field.
func (o *SkyBlockProfileMemberPlayerStatsRaces) SetDungeonHub(v SkyBlockProfileMemberPlayerStatsRacesDungeonHub) {
	o.DungeonHub = &v
}

// GetEndRaceBestTime returns the EndRaceBestTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetEndRaceBestTime() float64 {
	if o == nil || IsNil(o.EndRaceBestTime) {
		var ret float64
		return ret
	}
	return *o.EndRaceBestTime
}

// GetEndRaceBestTimeOk returns a tuple with the EndRaceBestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetEndRaceBestTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.EndRaceBestTime) {
		return nil, false
	}
	return o.EndRaceBestTime, true
}

// HasEndRaceBestTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) HasEndRaceBestTime() bool {
	if o != nil && !IsNil(o.EndRaceBestTime) {
		return true
	}

	return false
}

// SetEndRaceBestTime gets a reference to the given float64 and assigns it to the EndRaceBestTime field.
func (o *SkyBlockProfileMemberPlayerStatsRaces) SetEndRaceBestTime(v float64) {
	o.EndRaceBestTime = &v
}

// GetForagingRaceBestTime returns the ForagingRaceBestTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetForagingRaceBestTime() float64 {
	if o == nil || IsNil(o.ForagingRaceBestTime) {
		var ret float64
		return ret
	}
	return *o.ForagingRaceBestTime
}

// GetForagingRaceBestTimeOk returns a tuple with the ForagingRaceBestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetForagingRaceBestTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.ForagingRaceBestTime) {
		return nil, false
	}
	return o.ForagingRaceBestTime, true
}

// HasForagingRaceBestTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) HasForagingRaceBestTime() bool {
	if o != nil && !IsNil(o.ForagingRaceBestTime) {
		return true
	}

	return false
}

// SetForagingRaceBestTime gets a reference to the given float64 and assigns it to the ForagingRaceBestTime field.
func (o *SkyBlockProfileMemberPlayerStatsRaces) SetForagingRaceBestTime(v float64) {
	o.ForagingRaceBestTime = &v
}

// GetRiftRaceBestTime returns the RiftRaceBestTime field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetRiftRaceBestTime() float64 {
	if o == nil || IsNil(o.RiftRaceBestTime) {
		var ret float64
		return ret
	}
	return *o.RiftRaceBestTime
}

// GetRiftRaceBestTimeOk returns a tuple with the RiftRaceBestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) GetRiftRaceBestTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.RiftRaceBestTime) {
		return nil, false
	}
	return o.RiftRaceBestTime, true
}

// HasRiftRaceBestTime returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerStatsRaces) HasRiftRaceBestTime() bool {
	if o != nil && !IsNil(o.RiftRaceBestTime) {
		return true
	}

	return false
}

// SetRiftRaceBestTime gets a reference to the given float64 and assigns it to the RiftRaceBestTime field.
func (o *SkyBlockProfileMemberPlayerStatsRaces) SetRiftRaceBestTime(v float64) {
	o.RiftRaceBestTime = &v
}

func (o SkyBlockProfileMemberPlayerStatsRaces) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerStatsRaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChickenRaceBestTime2) {
		toSerialize["chicken_race_best_time_2"] = o.ChickenRaceBestTime2
	}
	if !IsNil(o.DungeonHub) {
		toSerialize["dungeon_hub"] = o.DungeonHub
	}
	if !IsNil(o.EndRaceBestTime) {
		toSerialize["end_race_best_time"] = o.EndRaceBestTime
	}
	if !IsNil(o.ForagingRaceBestTime) {
		toSerialize["foraging_race_best_time"] = o.ForagingRaceBestTime
	}
	if !IsNil(o.RiftRaceBestTime) {
		toSerialize["rift_race_best_time"] = o.RiftRaceBestTime
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberPlayerStatsRaces struct {
	value *SkyBlockProfileMemberPlayerStatsRaces
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerStatsRaces) Get() *SkyBlockProfileMemberPlayerStatsRaces {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerStatsRaces) Set(val *SkyBlockProfileMemberPlayerStatsRaces) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerStatsRaces) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerStatsRaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerStatsRaces(val *SkyBlockProfileMemberPlayerStatsRaces) *NullableSkyBlockProfileMemberPlayerStatsRaces {
	return &NullableSkyBlockProfileMemberPlayerStatsRaces{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerStatsRaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerStatsRaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
