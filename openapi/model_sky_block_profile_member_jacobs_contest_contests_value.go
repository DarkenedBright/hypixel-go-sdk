/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberJacobsContestContestsValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberJacobsContestContestsValue{}

// SkyBlockProfileMemberJacobsContestContestsValue struct for SkyBlockProfileMemberJacobsContestContestsValue
type SkyBlockProfileMemberJacobsContestContestsValue struct {
	ClaimedMedal        *SkyBlockProfileMemberJacobsContestContestsValueClaimedMedal `json:"claimed_medal,omitempty"`
	ClaimedParticipants *int64                                                       `json:"claimed_participants,omitempty"`
	ClaimedPosition     *int64                                                       `json:"claimed_position,omitempty"`
	ClaimedRewards      *bool                                                        `json:"claimed_rewards,omitempty"`
	Collected           int64                                                        `json:"collected"`
}

type _SkyBlockProfileMemberJacobsContestContestsValue SkyBlockProfileMemberJacobsContestContestsValue

// NewSkyBlockProfileMemberJacobsContestContestsValue instantiates a new SkyBlockProfileMemberJacobsContestContestsValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberJacobsContestContestsValue(collected int64) *SkyBlockProfileMemberJacobsContestContestsValue {
	this := SkyBlockProfileMemberJacobsContestContestsValue{}
	this.Collected = collected
	return &this
}

// NewSkyBlockProfileMemberJacobsContestContestsValueWithDefaults instantiates a new SkyBlockProfileMemberJacobsContestContestsValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberJacobsContestContestsValueWithDefaults() *SkyBlockProfileMemberJacobsContestContestsValue {
	this := SkyBlockProfileMemberJacobsContestContestsValue{}
	return &this
}

// GetClaimedMedal returns the ClaimedMedal field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedMedal() SkyBlockProfileMemberJacobsContestContestsValueClaimedMedal {
	if o == nil || IsNil(o.ClaimedMedal) {
		var ret SkyBlockProfileMemberJacobsContestContestsValueClaimedMedal
		return ret
	}
	return *o.ClaimedMedal
}

// GetClaimedMedalOk returns a tuple with the ClaimedMedal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedMedalOk() (*SkyBlockProfileMemberJacobsContestContestsValueClaimedMedal, bool) {
	if o == nil || IsNil(o.ClaimedMedal) {
		return nil, false
	}
	return o.ClaimedMedal, true
}

// HasClaimedMedal returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) HasClaimedMedal() bool {
	if o != nil && !IsNil(o.ClaimedMedal) {
		return true
	}

	return false
}

// SetClaimedMedal gets a reference to the given SkyBlockProfileMemberJacobsContestContestsValueClaimedMedal and assigns it to the ClaimedMedal field.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) SetClaimedMedal(v SkyBlockProfileMemberJacobsContestContestsValueClaimedMedal) {
	o.ClaimedMedal = &v
}

// GetClaimedParticipants returns the ClaimedParticipants field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedParticipants() int64 {
	if o == nil || IsNil(o.ClaimedParticipants) {
		var ret int64
		return ret
	}
	return *o.ClaimedParticipants
}

// GetClaimedParticipantsOk returns a tuple with the ClaimedParticipants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedParticipantsOk() (*int64, bool) {
	if o == nil || IsNil(o.ClaimedParticipants) {
		return nil, false
	}
	return o.ClaimedParticipants, true
}

// HasClaimedParticipants returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) HasClaimedParticipants() bool {
	if o != nil && !IsNil(o.ClaimedParticipants) {
		return true
	}

	return false
}

// SetClaimedParticipants gets a reference to the given int64 and assigns it to the ClaimedParticipants field.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) SetClaimedParticipants(v int64) {
	o.ClaimedParticipants = &v
}

// GetClaimedPosition returns the ClaimedPosition field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedPosition() int64 {
	if o == nil || IsNil(o.ClaimedPosition) {
		var ret int64
		return ret
	}
	return *o.ClaimedPosition
}

// GetClaimedPositionOk returns a tuple with the ClaimedPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedPositionOk() (*int64, bool) {
	if o == nil || IsNil(o.ClaimedPosition) {
		return nil, false
	}
	return o.ClaimedPosition, true
}

// HasClaimedPosition returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) HasClaimedPosition() bool {
	if o != nil && !IsNil(o.ClaimedPosition) {
		return true
	}

	return false
}

// SetClaimedPosition gets a reference to the given int64 and assigns it to the ClaimedPosition field.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) SetClaimedPosition(v int64) {
	o.ClaimedPosition = &v
}

// GetClaimedRewards returns the ClaimedRewards field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedRewards() bool {
	if o == nil || IsNil(o.ClaimedRewards) {
		var ret bool
		return ret
	}
	return *o.ClaimedRewards
}

// GetClaimedRewardsOk returns a tuple with the ClaimedRewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetClaimedRewardsOk() (*bool, bool) {
	if o == nil || IsNil(o.ClaimedRewards) {
		return nil, false
	}
	return o.ClaimedRewards, true
}

// HasClaimedRewards returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) HasClaimedRewards() bool {
	if o != nil && !IsNil(o.ClaimedRewards) {
		return true
	}

	return false
}

// SetClaimedRewards gets a reference to the given bool and assigns it to the ClaimedRewards field.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) SetClaimedRewards(v bool) {
	o.ClaimedRewards = &v
}

// GetCollected returns the Collected field value
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetCollected() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Collected
}

// GetCollectedOk returns a tuple with the Collected field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestContestsValue) GetCollectedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Collected, true
}

// SetCollected sets field value
func (o *SkyBlockProfileMemberJacobsContestContestsValue) SetCollected(v int64) {
	o.Collected = v
}

func (o SkyBlockProfileMemberJacobsContestContestsValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberJacobsContestContestsValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClaimedMedal) {
		toSerialize["claimed_medal"] = o.ClaimedMedal
	}
	if !IsNil(o.ClaimedParticipants) {
		toSerialize["claimed_participants"] = o.ClaimedParticipants
	}
	if !IsNil(o.ClaimedPosition) {
		toSerialize["claimed_position"] = o.ClaimedPosition
	}
	if !IsNil(o.ClaimedRewards) {
		toSerialize["claimed_rewards"] = o.ClaimedRewards
	}
	toSerialize["collected"] = o.Collected
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberJacobsContestContestsValue) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"collected",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberJacobsContestContestsValue := _SkyBlockProfileMemberJacobsContestContestsValue{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberJacobsContestContestsValue)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberJacobsContestContestsValue(varSkyBlockProfileMemberJacobsContestContestsValue)

	return err
}

type NullableSkyBlockProfileMemberJacobsContestContestsValue struct {
	value *SkyBlockProfileMemberJacobsContestContestsValue
	isSet bool
}

func (v NullableSkyBlockProfileMemberJacobsContestContestsValue) Get() *SkyBlockProfileMemberJacobsContestContestsValue {
	return v.value
}

func (v *NullableSkyBlockProfileMemberJacobsContestContestsValue) Set(val *SkyBlockProfileMemberJacobsContestContestsValue) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberJacobsContestContestsValue) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberJacobsContestContestsValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberJacobsContestContestsValue(val *SkyBlockProfileMemberJacobsContestContestsValue) *NullableSkyBlockProfileMemberJacobsContestContestsValue {
	return &NullableSkyBlockProfileMemberJacobsContestContestsValue{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberJacobsContestContestsValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberJacobsContestContestsValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
