/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner the model 'SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner'
type SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner string

// List of SkyBlockProfileMemberDungeons_dungeons_blah_blah_inner
const (
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONSBLAHBLAHINNER_GATEKEEPER_FIRST_TALK SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner = "gatekeeper_first_talk"
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONSBLAHBLAHINNER_MALIK_FIRST_TALK      SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner = "malik_first_talk"
	SKYBLOCKPROFILEMEMBERDUNGEONSDUNGEONSBLAHBLAHINNER_OPHELIA_FIRST_TALK    SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner = "ophelia_first_talk"
)

// All allowed values of SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner enum
var AllowedSkyBlockProfileMemberDungeonsDungeonsBlahBlahInnerEnumValues = []SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner{
	"gatekeeper_first_talk",
	"malik_first_talk",
	"ophelia_first_talk",
}

func (v *SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner(value)
	for _, existing := range AllowedSkyBlockProfileMemberDungeonsDungeonsBlahBlahInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner", value)
}

// NewSkyBlockProfileMemberDungeonsDungeonsBlahBlahInnerFromValue returns a pointer to a valid SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberDungeonsDungeonsBlahBlahInnerFromValue(v string) (*SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner, error) {
	ev := SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner: valid values are %v", v, AllowedSkyBlockProfileMemberDungeonsDungeonsBlahBlahInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberDungeonsDungeonsBlahBlahInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberDungeons_dungeons_blah_blah_inner value
func (v SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) Ptr() *SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner {
	return &v
}

type NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner struct {
	value *SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner
	isSet bool
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) Get() *SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner {
	return v.value
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) Set(val *SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner(val *SkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) *NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner {
	return &NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberDungeonsDungeonsBlahBlahInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
