/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberPlayerDataActiveEffectModifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerDataActiveEffectModifier{}

// SkyBlockProfileMemberPlayerDataActiveEffectModifier struct for SkyBlockProfileMemberPlayerDataActiveEffectModifier
type SkyBlockProfileMemberPlayerDataActiveEffectModifier struct {
	Amp int64                                                  `json:"amp"`
	Key SkyBlockProfileMemberPlayerDataActiveEffectModifierKey `json:"key"`
}

type _SkyBlockProfileMemberPlayerDataActiveEffectModifier SkyBlockProfileMemberPlayerDataActiveEffectModifier

// NewSkyBlockProfileMemberPlayerDataActiveEffectModifier instantiates a new SkyBlockProfileMemberPlayerDataActiveEffectModifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerDataActiveEffectModifier(amp int64, key SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) *SkyBlockProfileMemberPlayerDataActiveEffectModifier {
	this := SkyBlockProfileMemberPlayerDataActiveEffectModifier{}
	this.Amp = amp
	this.Key = key
	return &this
}

// NewSkyBlockProfileMemberPlayerDataActiveEffectModifierWithDefaults instantiates a new SkyBlockProfileMemberPlayerDataActiveEffectModifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerDataActiveEffectModifierWithDefaults() *SkyBlockProfileMemberPlayerDataActiveEffectModifier {
	this := SkyBlockProfileMemberPlayerDataActiveEffectModifier{}
	return &this
}

// GetAmp returns the Amp field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) GetAmp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amp
}

// GetAmpOk returns a tuple with the Amp field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) GetAmpOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amp, true
}

// SetAmp sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) SetAmp(v int64) {
	o.Amp = v
}

// GetKey returns the Key field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) GetKey() SkyBlockProfileMemberPlayerDataActiveEffectModifierKey {
	if o == nil {
		var ret SkyBlockProfileMemberPlayerDataActiveEffectModifierKey
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) GetKeyOk() (*SkyBlockProfileMemberPlayerDataActiveEffectModifierKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) SetKey(v SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) {
	o.Key = v
}

func (o SkyBlockProfileMemberPlayerDataActiveEffectModifier) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerDataActiveEffectModifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amp"] = o.Amp
	toSerialize["key"] = o.Key
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberPlayerDataActiveEffectModifier) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amp",
		"key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberPlayerDataActiveEffectModifier := _SkyBlockProfileMemberPlayerDataActiveEffectModifier{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberPlayerDataActiveEffectModifier)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberPlayerDataActiveEffectModifier(varSkyBlockProfileMemberPlayerDataActiveEffectModifier)

	return err
}

type NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier struct {
	value *SkyBlockProfileMemberPlayerDataActiveEffectModifier
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier) Get() *SkyBlockProfileMemberPlayerDataActiveEffectModifier {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier) Set(val *SkyBlockProfileMemberPlayerDataActiveEffectModifier) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerDataActiveEffectModifier(val *SkyBlockProfileMemberPlayerDataActiveEffectModifier) *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier {
	return &NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
