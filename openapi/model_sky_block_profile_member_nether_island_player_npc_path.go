/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberNetherIslandPlayerNpcPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberNetherIslandPlayerNpcPath{}

// SkyBlockProfileMemberNetherIslandPlayerNpcPath struct for SkyBlockProfileMemberNetherIslandPlayerNpcPath
type SkyBlockProfileMemberNetherIslandPlayerNpcPath struct {
	NpcId     string  `json:"npc_id"`
	PathId    string  `json:"path_id"`
	PathIndex int64   `json:"path_index"`
	Skin      *string `json:"skin,omitempty"`
}

type _SkyBlockProfileMemberNetherIslandPlayerNpcPath SkyBlockProfileMemberNetherIslandPlayerNpcPath

// NewSkyBlockProfileMemberNetherIslandPlayerNpcPath instantiates a new SkyBlockProfileMemberNetherIslandPlayerNpcPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberNetherIslandPlayerNpcPath(npcId string, pathId string, pathIndex int64) *SkyBlockProfileMemberNetherIslandPlayerNpcPath {
	this := SkyBlockProfileMemberNetherIslandPlayerNpcPath{}
	this.NpcId = npcId
	this.PathId = pathId
	this.PathIndex = pathIndex
	return &this
}

// NewSkyBlockProfileMemberNetherIslandPlayerNpcPathWithDefaults instantiates a new SkyBlockProfileMemberNetherIslandPlayerNpcPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberNetherIslandPlayerNpcPathWithDefaults() *SkyBlockProfileMemberNetherIslandPlayerNpcPath {
	this := SkyBlockProfileMemberNetherIslandPlayerNpcPath{}
	return &this
}

// GetNpcId returns the NpcId field value
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetNpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NpcId
}

// GetNpcIdOk returns a tuple with the NpcId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetNpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NpcId, true
}

// SetNpcId sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) SetNpcId(v string) {
	o.NpcId = v
}

// GetPathId returns the PathId field value
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetPathId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PathId
}

// GetPathIdOk returns a tuple with the PathId field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetPathIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathId, true
}

// SetPathId sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) SetPathId(v string) {
	o.PathId = v
}

// GetPathIndex returns the PathIndex field value
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetPathIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PathIndex
}

// GetPathIndexOk returns a tuple with the PathIndex field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetPathIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathIndex, true
}

// SetPathIndex sets field value
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) SetPathIndex(v int64) {
	o.PathIndex = v
}

// GetSkin returns the Skin field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetSkin() string {
	if o == nil || IsNil(o.Skin) {
		var ret string
		return ret
	}
	return *o.Skin
}

// GetSkinOk returns a tuple with the Skin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) GetSkinOk() (*string, bool) {
	if o == nil || IsNil(o.Skin) {
		return nil, false
	}
	return o.Skin, true
}

// HasSkin returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) HasSkin() bool {
	if o != nil && !IsNil(o.Skin) {
		return true
	}

	return false
}

// SetSkin gets a reference to the given string and assigns it to the Skin field.
func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) SetSkin(v string) {
	o.Skin = &v
}

func (o SkyBlockProfileMemberNetherIslandPlayerNpcPath) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberNetherIslandPlayerNpcPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["npc_id"] = o.NpcId
	toSerialize["path_id"] = o.PathId
	toSerialize["path_index"] = o.PathIndex
	if !IsNil(o.Skin) {
		toSerialize["skin"] = o.Skin
	}
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberNetherIslandPlayerNpcPath) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"npc_id",
		"path_id",
		"path_index",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberNetherIslandPlayerNpcPath := _SkyBlockProfileMemberNetherIslandPlayerNpcPath{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberNetherIslandPlayerNpcPath)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberNetherIslandPlayerNpcPath(varSkyBlockProfileMemberNetherIslandPlayerNpcPath)

	return err
}

type NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath struct {
	value *SkyBlockProfileMemberNetherIslandPlayerNpcPath
	isSet bool
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath) Get() *SkyBlockProfileMemberNetherIslandPlayerNpcPath {
	return v.value
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath) Set(val *SkyBlockProfileMemberNetherIslandPlayerNpcPath) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberNetherIslandPlayerNpcPath(val *SkyBlockProfileMemberNetherIslandPlayerNpcPath) *NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath {
	return &NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberNetherIslandPlayerNpcPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
