/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberPlayerDataActiveEffect type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberPlayerDataActiveEffect{}

// SkyBlockProfileMemberPlayerDataActiveEffect struct for SkyBlockProfileMemberPlayerDataActiveEffect
type SkyBlockProfileMemberPlayerDataActiveEffect struct {
	Effect         SkyBlockProfileMemberPlayerDataActiveEffectType       `json:"effect"`
	Flags          *int64                                                `json:"flags,omitempty"`
	Infinite       bool                                                  `json:"infinite"`
	Level          int64                                                 `json:"level"`
	Modifiers      []SkyBlockProfileMemberPlayerDataActiveEffectModifier `json:"modifiers"`
	TicksRemaining int64                                                 `json:"ticks_remaining"`
}

type _SkyBlockProfileMemberPlayerDataActiveEffect SkyBlockProfileMemberPlayerDataActiveEffect

// NewSkyBlockProfileMemberPlayerDataActiveEffect instantiates a new SkyBlockProfileMemberPlayerDataActiveEffect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberPlayerDataActiveEffect(effect SkyBlockProfileMemberPlayerDataActiveEffectType, infinite bool, level int64, modifiers []SkyBlockProfileMemberPlayerDataActiveEffectModifier, ticksRemaining int64) *SkyBlockProfileMemberPlayerDataActiveEffect {
	this := SkyBlockProfileMemberPlayerDataActiveEffect{}
	this.Effect = effect
	this.Infinite = infinite
	this.Level = level
	this.Modifiers = modifiers
	this.TicksRemaining = ticksRemaining
	return &this
}

// NewSkyBlockProfileMemberPlayerDataActiveEffectWithDefaults instantiates a new SkyBlockProfileMemberPlayerDataActiveEffect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberPlayerDataActiveEffectWithDefaults() *SkyBlockProfileMemberPlayerDataActiveEffect {
	this := SkyBlockProfileMemberPlayerDataActiveEffect{}
	return &this
}

// GetEffect returns the Effect field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetEffect() SkyBlockProfileMemberPlayerDataActiveEffectType {
	if o == nil {
		var ret SkyBlockProfileMemberPlayerDataActiveEffectType
		return ret
	}

	return o.Effect
}

// GetEffectOk returns a tuple with the Effect field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetEffectOk() (*SkyBlockProfileMemberPlayerDataActiveEffectType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Effect, true
}

// SetEffect sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) SetEffect(v SkyBlockProfileMemberPlayerDataActiveEffectType) {
	o.Effect = v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetFlags() int64 {
	if o == nil || IsNil(o.Flags) {
		var ret int64
		return ret
	}
	return *o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetFlagsOk() (*int64, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given int64 and assigns it to the Flags field.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) SetFlags(v int64) {
	o.Flags = &v
}

// GetInfinite returns the Infinite field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetInfinite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Infinite
}

// GetInfiniteOk returns a tuple with the Infinite field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetInfiniteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Infinite, true
}

// SetInfinite sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) SetInfinite(v bool) {
	o.Infinite = v
}

// GetLevel returns the Level field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetLevel() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetLevelOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) SetLevel(v int64) {
	o.Level = v
}

// GetModifiers returns the Modifiers field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetModifiers() []SkyBlockProfileMemberPlayerDataActiveEffectModifier {
	if o == nil {
		var ret []SkyBlockProfileMemberPlayerDataActiveEffectModifier
		return ret
	}

	return o.Modifiers
}

// GetModifiersOk returns a tuple with the Modifiers field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetModifiersOk() ([]SkyBlockProfileMemberPlayerDataActiveEffectModifier, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modifiers, true
}

// SetModifiers sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) SetModifiers(v []SkyBlockProfileMemberPlayerDataActiveEffectModifier) {
	o.Modifiers = v
}

// GetTicksRemaining returns the TicksRemaining field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetTicksRemaining() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TicksRemaining
}

// GetTicksRemainingOk returns a tuple with the TicksRemaining field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) GetTicksRemainingOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TicksRemaining, true
}

// SetTicksRemaining sets field value
func (o *SkyBlockProfileMemberPlayerDataActiveEffect) SetTicksRemaining(v int64) {
	o.TicksRemaining = v
}

func (o SkyBlockProfileMemberPlayerDataActiveEffect) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberPlayerDataActiveEffect) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["effect"] = o.Effect
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	toSerialize["infinite"] = o.Infinite
	toSerialize["level"] = o.Level
	toSerialize["modifiers"] = o.Modifiers
	toSerialize["ticks_remaining"] = o.TicksRemaining
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberPlayerDataActiveEffect) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"effect",
		"infinite",
		"level",
		"modifiers",
		"ticks_remaining",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberPlayerDataActiveEffect := _SkyBlockProfileMemberPlayerDataActiveEffect{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberPlayerDataActiveEffect)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberPlayerDataActiveEffect(varSkyBlockProfileMemberPlayerDataActiveEffect)

	return err
}

type NullableSkyBlockProfileMemberPlayerDataActiveEffect struct {
	value *SkyBlockProfileMemberPlayerDataActiveEffect
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffect) Get() *SkyBlockProfileMemberPlayerDataActiveEffect {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffect) Set(val *SkyBlockProfileMemberPlayerDataActiveEffect) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffect) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerDataActiveEffect(val *SkyBlockProfileMemberPlayerDataActiveEffect) *NullableSkyBlockProfileMemberPlayerDataActiveEffect {
	return &NullableSkyBlockProfileMemberPlayerDataActiveEffect{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
