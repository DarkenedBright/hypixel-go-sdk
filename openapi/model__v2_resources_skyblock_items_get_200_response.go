/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V2ResourcesSkyblockItemsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ResourcesSkyblockItemsGet200Response{}

// V2ResourcesSkyblockItemsGet200Response struct for V2ResourcesSkyblockItemsGet200Response
type V2ResourcesSkyblockItemsGet200Response struct {
	Items       []SkyBlockItem `json:"items,omitempty"`
	LastUpdated *int64         `json:"lastUpdated,omitempty"`
	Success     *bool          `json:"success,omitempty"`
}

// NewV2ResourcesSkyblockItemsGet200Response instantiates a new V2ResourcesSkyblockItemsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ResourcesSkyblockItemsGet200Response() *V2ResourcesSkyblockItemsGet200Response {
	this := V2ResourcesSkyblockItemsGet200Response{}
	return &this
}

// NewV2ResourcesSkyblockItemsGet200ResponseWithDefaults instantiates a new V2ResourcesSkyblockItemsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ResourcesSkyblockItemsGet200ResponseWithDefaults() *V2ResourcesSkyblockItemsGet200Response {
	this := V2ResourcesSkyblockItemsGet200Response{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockItemsGet200Response) GetItems() []SkyBlockItem {
	if o == nil || IsNil(o.Items) {
		var ret []SkyBlockItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockItemsGet200Response) GetItemsOk() ([]SkyBlockItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockItemsGet200Response) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []SkyBlockItem and assigns it to the Items field.
func (o *V2ResourcesSkyblockItemsGet200Response) SetItems(v []SkyBlockItem) {
	o.Items = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockItemsGet200Response) GetLastUpdated() int64 {
	if o == nil || IsNil(o.LastUpdated) {
		var ret int64
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockItemsGet200Response) GetLastUpdatedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockItemsGet200Response) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given int64 and assigns it to the LastUpdated field.
func (o *V2ResourcesSkyblockItemsGet200Response) SetLastUpdated(v int64) {
	o.LastUpdated = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *V2ResourcesSkyblockItemsGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ResourcesSkyblockItemsGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *V2ResourcesSkyblockItemsGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *V2ResourcesSkyblockItemsGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o V2ResourcesSkyblockItemsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ResourcesSkyblockItemsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableV2ResourcesSkyblockItemsGet200Response struct {
	value *V2ResourcesSkyblockItemsGet200Response
	isSet bool
}

func (v NullableV2ResourcesSkyblockItemsGet200Response) Get() *V2ResourcesSkyblockItemsGet200Response {
	return v.value
}

func (v *NullableV2ResourcesSkyblockItemsGet200Response) Set(val *V2ResourcesSkyblockItemsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ResourcesSkyblockItemsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ResourcesSkyblockItemsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ResourcesSkyblockItemsGet200Response(val *V2ResourcesSkyblockItemsGet200Response) *NullableV2ResourcesSkyblockItemsGet200Response {
	return &NullableV2ResourcesSkyblockItemsGet200Response{value: val, isSet: true}
}

func (v NullableV2ResourcesSkyblockItemsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ResourcesSkyblockItemsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
