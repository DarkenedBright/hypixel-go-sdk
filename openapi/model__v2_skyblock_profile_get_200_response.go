/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the V2SkyblockProfileGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2SkyblockProfileGet200Response{}

// V2SkyblockProfileGet200Response struct for V2SkyblockProfileGet200Response
type V2SkyblockProfileGet200Response struct {
	Profile SkyBlockProfile `json:"profile"`
	Success bool            `json:"success"`
}

type _V2SkyblockProfileGet200Response V2SkyblockProfileGet200Response

// NewV2SkyblockProfileGet200Response instantiates a new V2SkyblockProfileGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SkyblockProfileGet200Response(profile SkyBlockProfile, success bool) *V2SkyblockProfileGet200Response {
	this := V2SkyblockProfileGet200Response{}
	this.Profile = profile
	this.Success = success
	return &this
}

// NewV2SkyblockProfileGet200ResponseWithDefaults instantiates a new V2SkyblockProfileGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SkyblockProfileGet200ResponseWithDefaults() *V2SkyblockProfileGet200Response {
	this := V2SkyblockProfileGet200Response{}
	return &this
}

// GetProfile returns the Profile field value
func (o *V2SkyblockProfileGet200Response) GetProfile() SkyBlockProfile {
	if o == nil {
		var ret SkyBlockProfile
		return ret
	}

	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value
// and a boolean to check if the value has been set.
func (o *V2SkyblockProfileGet200Response) GetProfileOk() (*SkyBlockProfile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Profile, true
}

// SetProfile sets field value
func (o *V2SkyblockProfileGet200Response) SetProfile(v SkyBlockProfile) {
	o.Profile = v
}

// GetSuccess returns the Success field value
func (o *V2SkyblockProfileGet200Response) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *V2SkyblockProfileGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *V2SkyblockProfileGet200Response) SetSuccess(v bool) {
	o.Success = v
}

func (o V2SkyblockProfileGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2SkyblockProfileGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["profile"] = o.Profile
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

func (o *V2SkyblockProfileGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"profile",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2SkyblockProfileGet200Response := _V2SkyblockProfileGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2SkyblockProfileGet200Response)

	if err != nil {
		return err
	}

	*o = V2SkyblockProfileGet200Response(varV2SkyblockProfileGet200Response)

	return err
}

type NullableV2SkyblockProfileGet200Response struct {
	value *V2SkyblockProfileGet200Response
	isSet bool
}

func (v NullableV2SkyblockProfileGet200Response) Get() *V2SkyblockProfileGet200Response {
	return v.value
}

func (v *NullableV2SkyblockProfileGet200Response) Set(val *V2SkyblockProfileGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SkyblockProfileGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SkyblockProfileGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SkyblockProfileGet200Response(val *V2SkyblockProfileGet200Response) *NullableV2SkyblockProfileGet200Response {
	return &NullableV2SkyblockProfileGet200Response{value: val, isSet: true}
}

func (v NullableV2SkyblockProfileGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SkyblockProfileGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
