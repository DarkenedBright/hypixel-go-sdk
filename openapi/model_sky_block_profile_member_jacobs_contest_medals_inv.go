/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileMemberJacobsContestMedalsInv type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberJacobsContestMedalsInv{}

// SkyBlockProfileMemberJacobsContestMedalsInv struct for SkyBlockProfileMemberJacobsContestMedalsInv
type SkyBlockProfileMemberJacobsContestMedalsInv struct {
	Bronze *int64 `json:"bronze,omitempty"`
	Gold   *int64 `json:"gold,omitempty"`
	Silver *int64 `json:"silver,omitempty"`
}

// NewSkyBlockProfileMemberJacobsContestMedalsInv instantiates a new SkyBlockProfileMemberJacobsContestMedalsInv object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberJacobsContestMedalsInv() *SkyBlockProfileMemberJacobsContestMedalsInv {
	this := SkyBlockProfileMemberJacobsContestMedalsInv{}
	return &this
}

// NewSkyBlockProfileMemberJacobsContestMedalsInvWithDefaults instantiates a new SkyBlockProfileMemberJacobsContestMedalsInv object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberJacobsContestMedalsInvWithDefaults() *SkyBlockProfileMemberJacobsContestMedalsInv {
	this := SkyBlockProfileMemberJacobsContestMedalsInv{}
	return &this
}

// GetBronze returns the Bronze field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) GetBronze() int64 {
	if o == nil || IsNil(o.Bronze) {
		var ret int64
		return ret
	}
	return *o.Bronze
}

// GetBronzeOk returns a tuple with the Bronze field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) GetBronzeOk() (*int64, bool) {
	if o == nil || IsNil(o.Bronze) {
		return nil, false
	}
	return o.Bronze, true
}

// HasBronze returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) HasBronze() bool {
	if o != nil && !IsNil(o.Bronze) {
		return true
	}

	return false
}

// SetBronze gets a reference to the given int64 and assigns it to the Bronze field.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) SetBronze(v int64) {
	o.Bronze = &v
}

// GetGold returns the Gold field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) GetGold() int64 {
	if o == nil || IsNil(o.Gold) {
		var ret int64
		return ret
	}
	return *o.Gold
}

// GetGoldOk returns a tuple with the Gold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) GetGoldOk() (*int64, bool) {
	if o == nil || IsNil(o.Gold) {
		return nil, false
	}
	return o.Gold, true
}

// HasGold returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) HasGold() bool {
	if o != nil && !IsNil(o.Gold) {
		return true
	}

	return false
}

// SetGold gets a reference to the given int64 and assigns it to the Gold field.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) SetGold(v int64) {
	o.Gold = &v
}

// GetSilver returns the Silver field value if set, zero value otherwise.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) GetSilver() int64 {
	if o == nil || IsNil(o.Silver) {
		var ret int64
		return ret
	}
	return *o.Silver
}

// GetSilverOk returns a tuple with the Silver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) GetSilverOk() (*int64, bool) {
	if o == nil || IsNil(o.Silver) {
		return nil, false
	}
	return o.Silver, true
}

// HasSilver returns a boolean if a field has been set.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) HasSilver() bool {
	if o != nil && !IsNil(o.Silver) {
		return true
	}

	return false
}

// SetSilver gets a reference to the given int64 and assigns it to the Silver field.
func (o *SkyBlockProfileMemberJacobsContestMedalsInv) SetSilver(v int64) {
	o.Silver = &v
}

func (o SkyBlockProfileMemberJacobsContestMedalsInv) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberJacobsContestMedalsInv) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bronze) {
		toSerialize["bronze"] = o.Bronze
	}
	if !IsNil(o.Gold) {
		toSerialize["gold"] = o.Gold
	}
	if !IsNil(o.Silver) {
		toSerialize["silver"] = o.Silver
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileMemberJacobsContestMedalsInv struct {
	value *SkyBlockProfileMemberJacobsContestMedalsInv
	isSet bool
}

func (v NullableSkyBlockProfileMemberJacobsContestMedalsInv) Get() *SkyBlockProfileMemberJacobsContestMedalsInv {
	return v.value
}

func (v *NullableSkyBlockProfileMemberJacobsContestMedalsInv) Set(val *SkyBlockProfileMemberJacobsContestMedalsInv) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberJacobsContestMedalsInv) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberJacobsContestMedalsInv) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberJacobsContestMedalsInv(val *SkyBlockProfileMemberJacobsContestMedalsInv) *NullableSkyBlockProfileMemberJacobsContestMedalsInv {
	return &NullableSkyBlockProfileMemberJacobsContestMedalsInv{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberJacobsContestMedalsInv) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberJacobsContestMedalsInv) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
