/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberPlayerDataActiveEffectModifierKey the model 'SkyBlockProfileMemberPlayerDataActiveEffectModifierKey'
type SkyBlockProfileMemberPlayerDataActiveEffectModifierKey string

// List of SkyBlockProfileMemberPlayerDataActiveEffectModifier_key
const (
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_CAFFEINATED      SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "caffeinated"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_COLA             SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "cola"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_DR_PAPER         SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "dr_paper"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_JUICE            SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "juice"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_POWERFUL_POTIONS SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "powerful_potions"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_RES              SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "res"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_SLAYER_ENERGY    SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "slayer_energy"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_TEA              SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "tea"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_TEAR_FILLED      SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "tear_filled"
	SKYBLOCKPROFILEMEMBERPLAYERDATAACTIVEEFFECTMODIFIERKEY_TUTTI_FRUTTI     SkyBlockProfileMemberPlayerDataActiveEffectModifierKey = "tutti_frutti"
)

// All allowed values of SkyBlockProfileMemberPlayerDataActiveEffectModifierKey enum
var AllowedSkyBlockProfileMemberPlayerDataActiveEffectModifierKeyEnumValues = []SkyBlockProfileMemberPlayerDataActiveEffectModifierKey{
	"caffeinated",
	"cola",
	"dr_paper",
	"juice",
	"powerful_potions",
	"res",
	"slayer_energy",
	"tea",
	"tear_filled",
	"tutti_frutti",
}

func (v *SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberPlayerDataActiveEffectModifierKey(value)
	for _, existing := range AllowedSkyBlockProfileMemberPlayerDataActiveEffectModifierKeyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberPlayerDataActiveEffectModifierKey", value)
}

// NewSkyBlockProfileMemberPlayerDataActiveEffectModifierKeyFromValue returns a pointer to a valid SkyBlockProfileMemberPlayerDataActiveEffectModifierKey
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberPlayerDataActiveEffectModifierKeyFromValue(v string) (*SkyBlockProfileMemberPlayerDataActiveEffectModifierKey, error) {
	ev := SkyBlockProfileMemberPlayerDataActiveEffectModifierKey(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberPlayerDataActiveEffectModifierKey: valid values are %v", v, AllowedSkyBlockProfileMemberPlayerDataActiveEffectModifierKeyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberPlayerDataActiveEffectModifierKeyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberPlayerDataActiveEffectModifier_key value
func (v SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) Ptr() *SkyBlockProfileMemberPlayerDataActiveEffectModifierKey {
	return &v
}

type NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey struct {
	value *SkyBlockProfileMemberPlayerDataActiveEffectModifierKey
	isSet bool
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey) Get() *SkyBlockProfileMemberPlayerDataActiveEffectModifierKey {
	return v.value
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey) Set(val *SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey(val *SkyBlockProfileMemberPlayerDataActiveEffectModifierKey) *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey {
	return &NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberPlayerDataActiveEffectModifierKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
