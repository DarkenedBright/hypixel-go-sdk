/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility the model 'SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility'
type SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility string

// List of SkyBlockProfileMemberMiningCore_selected_pickaxe_ability
const (
	SKYBLOCKPROFILEMEMBERMININGCORESELECTEDPICKAXEABILITY_ANOMALOUS_DESIRE   SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility = "anomalous_desire"
	SKYBLOCKPROFILEMEMBERMININGCORESELECTEDPICKAXEABILITY_MANIAC_MINER       SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility = "maniac_miner"
	SKYBLOCKPROFILEMEMBERMININGCORESELECTEDPICKAXEABILITY_MINING_SPEED_BOOST SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility = "mining_speed_boost"
	SKYBLOCKPROFILEMEMBERMININGCORESELECTEDPICKAXEABILITY_PICKAXE_TOSS       SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility = "pickaxe_toss"
	SKYBLOCKPROFILEMEMBERMININGCORESELECTEDPICKAXEABILITY_SHEER_FORCE        SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility = "sheer_force"
)

// All allowed values of SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility enum
var AllowedSkyBlockProfileMemberMiningCoreSelectedPickaxeAbilityEnumValues = []SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility{
	"anomalous_desire",
	"maniac_miner",
	"mining_speed_boost",
	"pickaxe_toss",
	"sheer_force",
}

func (v *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility(value)
	for _, existing := range AllowedSkyBlockProfileMemberMiningCoreSelectedPickaxeAbilityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility", value)
}

// NewSkyBlockProfileMemberMiningCoreSelectedPickaxeAbilityFromValue returns a pointer to a valid SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileMemberMiningCoreSelectedPickaxeAbilityFromValue(v string) (*SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility, error) {
	ev := SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility: valid values are %v", v, AllowedSkyBlockProfileMemberMiningCoreSelectedPickaxeAbilityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileMemberMiningCoreSelectedPickaxeAbilityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfileMemberMiningCore_selected_pickaxe_ability value
func (v SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) Ptr() *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility {
	return &v
}

type NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility struct {
	value *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility
	isSet bool
}

func (v NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) Get() *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility {
	return v.value
}

func (v *NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) Set(val *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility(val *SkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) *NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility {
	return &NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberMiningCoreSelectedPickaxeAbility) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
