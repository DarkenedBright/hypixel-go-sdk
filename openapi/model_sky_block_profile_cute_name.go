/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SkyBlockProfileCuteName the model 'SkyBlockProfileCuteName'
type SkyBlockProfileCuteName string

// List of SkyBlockProfile_cute_name
const (
	SKYBLOCKPROFILECUTENAME_APPLE       SkyBlockProfileCuteName = "Apple"
	SKYBLOCKPROFILECUTENAME_BANANA      SkyBlockProfileCuteName = "Banana"
	SKYBLOCKPROFILECUTENAME_BLUEBERRY   SkyBlockProfileCuteName = "Blueberry"
	SKYBLOCKPROFILECUTENAME_COCONUT     SkyBlockProfileCuteName = "Coconut"
	SKYBLOCKPROFILECUTENAME_CUCUMBER    SkyBlockProfileCuteName = "Cucumber"
	SKYBLOCKPROFILECUTENAME_GRAPES      SkyBlockProfileCuteName = "Grapes"
	SKYBLOCKPROFILECUTENAME_KIWI        SkyBlockProfileCuteName = "Kiwi"
	SKYBLOCKPROFILECUTENAME_LEMON       SkyBlockProfileCuteName = "Lemon"
	SKYBLOCKPROFILECUTENAME_LIME        SkyBlockProfileCuteName = "Lime"
	SKYBLOCKPROFILECUTENAME_MANGO       SkyBlockProfileCuteName = "Mango"
	SKYBLOCKPROFILECUTENAME_ORANGE      SkyBlockProfileCuteName = "Orange"
	SKYBLOCKPROFILECUTENAME_PAPAYA      SkyBlockProfileCuteName = "Papaya"
	SKYBLOCKPROFILECUTENAME_PEACH       SkyBlockProfileCuteName = "Peach"
	SKYBLOCKPROFILECUTENAME_PEAR        SkyBlockProfileCuteName = "Pear"
	SKYBLOCKPROFILECUTENAME_PINEAPPLE   SkyBlockProfileCuteName = "Pineapple"
	SKYBLOCKPROFILECUTENAME_POMEGRANATE SkyBlockProfileCuteName = "Pomegranate"
	SKYBLOCKPROFILECUTENAME_RASPBERRY   SkyBlockProfileCuteName = "Raspberry"
	SKYBLOCKPROFILECUTENAME_STRAWBERRY  SkyBlockProfileCuteName = "Strawberry"
	SKYBLOCKPROFILECUTENAME_TOMATO      SkyBlockProfileCuteName = "Tomato"
	SKYBLOCKPROFILECUTENAME_WATERMELON  SkyBlockProfileCuteName = "Watermelon"
	SKYBLOCKPROFILECUTENAME_ZUCCHINI    SkyBlockProfileCuteName = "Zucchini"
)

// All allowed values of SkyBlockProfileCuteName enum
var AllowedSkyBlockProfileCuteNameEnumValues = []SkyBlockProfileCuteName{
	"Apple",
	"Banana",
	"Blueberry",
	"Coconut",
	"Cucumber",
	"Grapes",
	"Kiwi",
	"Lemon",
	"Lime",
	"Mango",
	"Orange",
	"Papaya",
	"Peach",
	"Pear",
	"Pineapple",
	"Pomegranate",
	"Raspberry",
	"Strawberry",
	"Tomato",
	"Watermelon",
	"Zucchini",
}

func (v *SkyBlockProfileCuteName) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SkyBlockProfileCuteName(value)
	for _, existing := range AllowedSkyBlockProfileCuteNameEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SkyBlockProfileCuteName", value)
}

// NewSkyBlockProfileCuteNameFromValue returns a pointer to a valid SkyBlockProfileCuteName
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSkyBlockProfileCuteNameFromValue(v string) (*SkyBlockProfileCuteName, error) {
	ev := SkyBlockProfileCuteName(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SkyBlockProfileCuteName: valid values are %v", v, AllowedSkyBlockProfileCuteNameEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SkyBlockProfileCuteName) IsValid() bool {
	for _, existing := range AllowedSkyBlockProfileCuteNameEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SkyBlockProfile_cute_name value
func (v SkyBlockProfileCuteName) Ptr() *SkyBlockProfileCuteName {
	return &v
}

type NullableSkyBlockProfileCuteName struct {
	value *SkyBlockProfileCuteName
	isSet bool
}

func (v NullableSkyBlockProfileCuteName) Get() *SkyBlockProfileCuteName {
	return v.value
}

func (v *NullableSkyBlockProfileCuteName) Set(val *SkyBlockProfileCuteName) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileCuteName) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileCuteName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileCuteName(val *SkyBlockProfileCuteName) *NullableSkyBlockProfileCuteName {
	return &NullableSkyBlockProfileCuteName{value: val, isSet: true}
}

func (v NullableSkyBlockProfileCuteName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileCuteName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
