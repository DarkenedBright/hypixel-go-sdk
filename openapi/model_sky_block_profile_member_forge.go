/*
Hypixel Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SkyBlockProfileMemberForge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileMemberForge{}

// SkyBlockProfileMemberForge struct for SkyBlockProfileMemberForge
type SkyBlockProfileMemberForge struct {
	ForgeProcesses map[string]map[string]SkyBlockProfileMemberForgeProcessesProcessSlot `json:"forge_processes"`
}

type _SkyBlockProfileMemberForge SkyBlockProfileMemberForge

// NewSkyBlockProfileMemberForge instantiates a new SkyBlockProfileMemberForge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileMemberForge(forgeProcesses map[string]map[string]SkyBlockProfileMemberForgeProcessesProcessSlot) *SkyBlockProfileMemberForge {
	this := SkyBlockProfileMemberForge{}
	this.ForgeProcesses = forgeProcesses
	return &this
}

// NewSkyBlockProfileMemberForgeWithDefaults instantiates a new SkyBlockProfileMemberForge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileMemberForgeWithDefaults() *SkyBlockProfileMemberForge {
	this := SkyBlockProfileMemberForge{}
	return &this
}

// GetForgeProcesses returns the ForgeProcesses field value
func (o *SkyBlockProfileMemberForge) GetForgeProcesses() map[string]map[string]SkyBlockProfileMemberForgeProcessesProcessSlot {
	if o == nil {
		var ret map[string]map[string]SkyBlockProfileMemberForgeProcessesProcessSlot
		return ret
	}

	return o.ForgeProcesses
}

// GetForgeProcessesOk returns a tuple with the ForgeProcesses field value
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileMemberForge) GetForgeProcessesOk() (*map[string]map[string]SkyBlockProfileMemberForgeProcessesProcessSlot, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForgeProcesses, true
}

// SetForgeProcesses sets field value
func (o *SkyBlockProfileMemberForge) SetForgeProcesses(v map[string]map[string]SkyBlockProfileMemberForgeProcessesProcessSlot) {
	o.ForgeProcesses = v
}

func (o SkyBlockProfileMemberForge) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileMemberForge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["forge_processes"] = o.ForgeProcesses
	return toSerialize, nil
}

func (o *SkyBlockProfileMemberForge) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"forge_processes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSkyBlockProfileMemberForge := _SkyBlockProfileMemberForge{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSkyBlockProfileMemberForge)

	if err != nil {
		return err
	}

	*o = SkyBlockProfileMemberForge(varSkyBlockProfileMemberForge)

	return err
}

type NullableSkyBlockProfileMemberForge struct {
	value *SkyBlockProfileMemberForge
	isSet bool
}

func (v NullableSkyBlockProfileMemberForge) Get() *SkyBlockProfileMemberForge {
	return v.value
}

func (v *NullableSkyBlockProfileMemberForge) Set(val *SkyBlockProfileMemberForge) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileMemberForge) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileMemberForge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileMemberForge(val *SkyBlockProfileMemberForge) *NullableSkyBlockProfileMemberForge {
	return &NullableSkyBlockProfileMemberForge{value: val, isSet: true}
}

func (v NullableSkyBlockProfileMemberForge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileMemberForge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
