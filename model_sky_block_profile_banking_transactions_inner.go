/*
Hypixel Public API

# Introduction This is the official Hypixel API documentation. [Hypixel Website](https://hypixel.net/) - [GitHub Repo](https://github.com/HypixelDev/PublicAPI) - [API Help Forum](https://hypixel.net/forums/api-help.111/)  All use of the API must conform to the [API policies](https://developer.hypixel.net/policies), violation of these policies may lead to applications being revoked or users banned from the API. ## Limits API keys are limited to a maximum amount of requests per 5 minute intervals. These limits will depend on the type of application that the key is assigned to.  Endpoints which require the use of an API key will also respond with headers to assist with managing the rate limit: - 'RateLimit-Limit' - The limit of requests per minute for the provided API key. - 'RateLimit-Remaining' - The remaining amount of requests allowed for the current minute. - 'RateLimit-Reset' - The amount of seconds until the next minute and the reset of the API key usages.  ## GameTypes | ID | Type Name      | Database Name | Clean Name           |  |----|----------------|---------------|----------------------|  | 2  | QUAKECRAFT     | Quake         | Quake                |  | 3  | WALLS          | Walls         | Walls                |  | 4  | PAINTBALL      | Paintball     | Paintball            |  | 5  | SURVIVAL_GAMES | HungerGames   | Blitz Survival Games |  | 6  | TNTGAMES       | TNTGames      | TNT Games            |  | 7  | VAMPIREZ       | VampireZ      | VampireZ             |  | 13 | WALLS3         | Walls3        | Mega Walls           |  | 14 | ARCADE         | Arcade        | Arcade               |  | 17 | ARENA          | Arena         | Arena                |  | 20 | UHC            | UHC           | UHC Champions        |  | 21 | MCGO           | MCGO          | Cops and Crims       |  | 23 | BATTLEGROUND   | Battleground  | Warlords             |  | 24 | SUPER_SMASH    | SuperSmash    | Smash Heroes         |  | 25 | GINGERBREAD    | GingerBread   | Turbo Kart Racers    |  | 26 | HOUSING        | Housing       | Housing              |  | 51 | SKYWARS        | SkyWars       | SkyWars              |  | 52 | TRUE_COMBAT    | TrueCombat    | Crazy Walls          |  | 54 | SPEED_UHC      | SpeedUHC      | Speed UHC            |  | 55 | SKYCLASH       | SkyClash      | SkyClash             |  | 56 | LEGACY         | Legacy        | Classic Games        |  | 57 | PROTOTYPE      | Prototype     | Prototype            |  | 58 | BEDWARS        | Bedwars       | Bed Wars             |  | 59 | MURDER_MYSTERY | MurderMystery | Murder Mystery       |  | 60 | BUILD_BATTLE   | BuildBattle   | Build Battle         |  | 61 | DUELS          | Duels         | Duels                |  | 63 | SKYBLOCK       | SkyBlock      | SkyBlock             |  | 64 | PIT            | Pit           | Pit                  |  | 65 | REPLAY         | Replay        | Replay               |  | 67 | SMP            | SMP           | SMP                  |  | 68 | WOOL_GAMES     | WoolGames     | Wool Wars            |  ### Storage Games store their respective stats and data in a Player's `stats` collection. The game's specific data is held within a JSON object named after it's `Database Name` (seen above.) ### GameType Notes * Clean names are what is displayed to the user when referencing the name. * Database names or IDs are used when the API references a specific GameType. ## Notes  ### Date and Time Generally dates are stored as a Unix Epoch times in milliseconds. ### Response Format Responses are served in JSON format. ### UUID Parameters All uuid parameters support both dashed and undashed versions. ### SkyBlock items and inventories Items and inventory data are stored as a base64 encoded string containing gzipped nbt data. If a method is missing important information about an item or inventory, you should try checking this! >Note: the base64 string may contain a unicode escape for non-alphabetical symbols, and some programming languages may have silent defects when interpreting the string.   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SkyBlockProfileBankingTransactionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkyBlockProfileBankingTransactionsInner{}

// SkyBlockProfileBankingTransactionsInner struct for SkyBlockProfileBankingTransactionsInner
type SkyBlockProfileBankingTransactionsInner struct {
	Timestamp *float32 `json:"timestamp,omitempty"`
	Action *string `json:"action,omitempty"`
	InitiatorName *string `json:"initiator_name,omitempty"`
	Amount *float64 `json:"amount,omitempty"`
}

// NewSkyBlockProfileBankingTransactionsInner instantiates a new SkyBlockProfileBankingTransactionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkyBlockProfileBankingTransactionsInner() *SkyBlockProfileBankingTransactionsInner {
	this := SkyBlockProfileBankingTransactionsInner{}
	return &this
}

// NewSkyBlockProfileBankingTransactionsInnerWithDefaults instantiates a new SkyBlockProfileBankingTransactionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkyBlockProfileBankingTransactionsInnerWithDefaults() *SkyBlockProfileBankingTransactionsInner {
	this := SkyBlockProfileBankingTransactionsInner{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SkyBlockProfileBankingTransactionsInner) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBankingTransactionsInner) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SkyBlockProfileBankingTransactionsInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *SkyBlockProfileBankingTransactionsInner) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *SkyBlockProfileBankingTransactionsInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBankingTransactionsInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *SkyBlockProfileBankingTransactionsInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *SkyBlockProfileBankingTransactionsInner) SetAction(v string) {
	o.Action = &v
}

// GetInitiatorName returns the InitiatorName field value if set, zero value otherwise.
func (o *SkyBlockProfileBankingTransactionsInner) GetInitiatorName() string {
	if o == nil || IsNil(o.InitiatorName) {
		var ret string
		return ret
	}
	return *o.InitiatorName
}

// GetInitiatorNameOk returns a tuple with the InitiatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBankingTransactionsInner) GetInitiatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.InitiatorName) {
		return nil, false
	}
	return o.InitiatorName, true
}

// HasInitiatorName returns a boolean if a field has been set.
func (o *SkyBlockProfileBankingTransactionsInner) HasInitiatorName() bool {
	if o != nil && !IsNil(o.InitiatorName) {
		return true
	}

	return false
}

// SetInitiatorName gets a reference to the given string and assigns it to the InitiatorName field.
func (o *SkyBlockProfileBankingTransactionsInner) SetInitiatorName(v string) {
	o.InitiatorName = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SkyBlockProfileBankingTransactionsInner) GetAmount() float64 {
	if o == nil || IsNil(o.Amount) {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkyBlockProfileBankingTransactionsInner) GetAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SkyBlockProfileBankingTransactionsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *SkyBlockProfileBankingTransactionsInner) SetAmount(v float64) {
	o.Amount = &v
}

func (o SkyBlockProfileBankingTransactionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkyBlockProfileBankingTransactionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.InitiatorName) {
		toSerialize["initiator_name"] = o.InitiatorName
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableSkyBlockProfileBankingTransactionsInner struct {
	value *SkyBlockProfileBankingTransactionsInner
	isSet bool
}

func (v NullableSkyBlockProfileBankingTransactionsInner) Get() *SkyBlockProfileBankingTransactionsInner {
	return v.value
}

func (v *NullableSkyBlockProfileBankingTransactionsInner) Set(val *SkyBlockProfileBankingTransactionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSkyBlockProfileBankingTransactionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSkyBlockProfileBankingTransactionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkyBlockProfileBankingTransactionsInner(val *SkyBlockProfileBankingTransactionsInner) *NullableSkyBlockProfileBankingTransactionsInner {
	return &NullableSkyBlockProfileBankingTransactionsInner{value: val, isSet: true}
}

func (v NullableSkyBlockProfileBankingTransactionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkyBlockProfileBankingTransactionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


