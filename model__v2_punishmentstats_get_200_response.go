/*
Hypixel Public API

# Introduction This is the official Hypixel API documentation. [Hypixel Website](https://hypixel.net/) - [GitHub Repo](https://github.com/HypixelDev/PublicAPI) - [API Help Forum](https://hypixel.net/forums/api-help.111/)  All use of the API must conform to the [API policies](https://developer.hypixel.net/policies), violation of these policies may lead to applications being revoked or users banned from the API. ## Limits API keys are limited to a maximum amount of requests per 5 minute intervals. These limits will depend on the type of application that the key is assigned to.  Endpoints which require the use of an API key will also respond with headers to assist with managing the rate limit: - 'RateLimit-Limit' - The limit of requests per minute for the provided API key. - 'RateLimit-Remaining' - The remaining amount of requests allowed for the current minute. - 'RateLimit-Reset' - The amount of seconds until the next minute and the reset of the API key usages.  ## GameTypes | ID | Type Name      | Database Name | Clean Name           |  |----|----------------|---------------|----------------------|  | 2  | QUAKECRAFT     | Quake         | Quake                |  | 3  | WALLS          | Walls         | Walls                |  | 4  | PAINTBALL      | Paintball     | Paintball            |  | 5  | SURVIVAL_GAMES | HungerGames   | Blitz Survival Games |  | 6  | TNTGAMES       | TNTGames      | TNT Games            |  | 7  | VAMPIREZ       | VampireZ      | VampireZ             |  | 13 | WALLS3         | Walls3        | Mega Walls           |  | 14 | ARCADE         | Arcade        | Arcade               |  | 17 | ARENA          | Arena         | Arena                |  | 20 | UHC            | UHC           | UHC Champions        |  | 21 | MCGO           | MCGO          | Cops and Crims       |  | 23 | BATTLEGROUND   | Battleground  | Warlords             |  | 24 | SUPER_SMASH    | SuperSmash    | Smash Heroes         |  | 25 | GINGERBREAD    | GingerBread   | Turbo Kart Racers    |  | 26 | HOUSING        | Housing       | Housing              |  | 51 | SKYWARS        | SkyWars       | SkyWars              |  | 52 | TRUE_COMBAT    | TrueCombat    | Crazy Walls          |  | 54 | SPEED_UHC      | SpeedUHC      | Speed UHC            |  | 55 | SKYCLASH       | SkyClash      | SkyClash             |  | 56 | LEGACY         | Legacy        | Classic Games        |  | 57 | PROTOTYPE      | Prototype     | Prototype            |  | 58 | BEDWARS        | Bedwars       | Bed Wars             |  | 59 | MURDER_MYSTERY | MurderMystery | Murder Mystery       |  | 60 | BUILD_BATTLE   | BuildBattle   | Build Battle         |  | 61 | DUELS          | Duels         | Duels                |  | 63 | SKYBLOCK       | SkyBlock      | SkyBlock             |  | 64 | PIT            | Pit           | Pit                  |  | 65 | REPLAY         | Replay        | Replay               |  | 67 | SMP            | SMP           | SMP                  |  | 68 | WOOL_GAMES     | WoolGames     | Wool Wars            |  ### Storage Games store their respective stats and data in a Player's `stats` collection. The game's specific data is held within a JSON object named after it's `Database Name` (seen above.) ### GameType Notes * Clean names are what is displayed to the user when referencing the name. * Database names or IDs are used when the API references a specific GameType. ## Notes  ### Date and Time Generally dates are stored as a Unix Epoch times in milliseconds. ### Response Format Responses are served in JSON format. ### UUID Parameters All uuid parameters support both dashed and undashed versions. ### SkyBlock items and inventories Items and inventory data are stored as a base64 encoded string containing gzipped nbt data. If a method is missing important information about an item or inventory, you should try checking this! >Note: the base64 string may contain a unicode escape for non-alphabetical symbols, and some programming languages may have silent defects when interpreting the string.   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V2PunishmentstatsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2PunishmentstatsGet200Response{}

// V2PunishmentstatsGet200Response struct for V2PunishmentstatsGet200Response
type V2PunishmentstatsGet200Response struct {
	Success *bool `json:"success,omitempty"`
	WatchdogLastMinute *int32 `json:"watchdog_lastMinute,omitempty"`
	StaffRollingDaily *int32 `json:"staff_rollingDaily,omitempty"`
	WatchdogTotal *int32 `json:"watchdog_total,omitempty"`
	WatchdogRollingDaily *int32 `json:"watchdog_rollingDaily,omitempty"`
	StaffTotal *int32 `json:"staff_total,omitempty"`
}

// NewV2PunishmentstatsGet200Response instantiates a new V2PunishmentstatsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2PunishmentstatsGet200Response() *V2PunishmentstatsGet200Response {
	this := V2PunishmentstatsGet200Response{}
	return &this
}

// NewV2PunishmentstatsGet200ResponseWithDefaults instantiates a new V2PunishmentstatsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2PunishmentstatsGet200ResponseWithDefaults() *V2PunishmentstatsGet200Response {
	this := V2PunishmentstatsGet200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *V2PunishmentstatsGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2PunishmentstatsGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *V2PunishmentstatsGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *V2PunishmentstatsGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetWatchdogLastMinute returns the WatchdogLastMinute field value if set, zero value otherwise.
func (o *V2PunishmentstatsGet200Response) GetWatchdogLastMinute() int32 {
	if o == nil || IsNil(o.WatchdogLastMinute) {
		var ret int32
		return ret
	}
	return *o.WatchdogLastMinute
}

// GetWatchdogLastMinuteOk returns a tuple with the WatchdogLastMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2PunishmentstatsGet200Response) GetWatchdogLastMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.WatchdogLastMinute) {
		return nil, false
	}
	return o.WatchdogLastMinute, true
}

// HasWatchdogLastMinute returns a boolean if a field has been set.
func (o *V2PunishmentstatsGet200Response) HasWatchdogLastMinute() bool {
	if o != nil && !IsNil(o.WatchdogLastMinute) {
		return true
	}

	return false
}

// SetWatchdogLastMinute gets a reference to the given int32 and assigns it to the WatchdogLastMinute field.
func (o *V2PunishmentstatsGet200Response) SetWatchdogLastMinute(v int32) {
	o.WatchdogLastMinute = &v
}

// GetStaffRollingDaily returns the StaffRollingDaily field value if set, zero value otherwise.
func (o *V2PunishmentstatsGet200Response) GetStaffRollingDaily() int32 {
	if o == nil || IsNil(o.StaffRollingDaily) {
		var ret int32
		return ret
	}
	return *o.StaffRollingDaily
}

// GetStaffRollingDailyOk returns a tuple with the StaffRollingDaily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2PunishmentstatsGet200Response) GetStaffRollingDailyOk() (*int32, bool) {
	if o == nil || IsNil(o.StaffRollingDaily) {
		return nil, false
	}
	return o.StaffRollingDaily, true
}

// HasStaffRollingDaily returns a boolean if a field has been set.
func (o *V2PunishmentstatsGet200Response) HasStaffRollingDaily() bool {
	if o != nil && !IsNil(o.StaffRollingDaily) {
		return true
	}

	return false
}

// SetStaffRollingDaily gets a reference to the given int32 and assigns it to the StaffRollingDaily field.
func (o *V2PunishmentstatsGet200Response) SetStaffRollingDaily(v int32) {
	o.StaffRollingDaily = &v
}

// GetWatchdogTotal returns the WatchdogTotal field value if set, zero value otherwise.
func (o *V2PunishmentstatsGet200Response) GetWatchdogTotal() int32 {
	if o == nil || IsNil(o.WatchdogTotal) {
		var ret int32
		return ret
	}
	return *o.WatchdogTotal
}

// GetWatchdogTotalOk returns a tuple with the WatchdogTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2PunishmentstatsGet200Response) GetWatchdogTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.WatchdogTotal) {
		return nil, false
	}
	return o.WatchdogTotal, true
}

// HasWatchdogTotal returns a boolean if a field has been set.
func (o *V2PunishmentstatsGet200Response) HasWatchdogTotal() bool {
	if o != nil && !IsNil(o.WatchdogTotal) {
		return true
	}

	return false
}

// SetWatchdogTotal gets a reference to the given int32 and assigns it to the WatchdogTotal field.
func (o *V2PunishmentstatsGet200Response) SetWatchdogTotal(v int32) {
	o.WatchdogTotal = &v
}

// GetWatchdogRollingDaily returns the WatchdogRollingDaily field value if set, zero value otherwise.
func (o *V2PunishmentstatsGet200Response) GetWatchdogRollingDaily() int32 {
	if o == nil || IsNil(o.WatchdogRollingDaily) {
		var ret int32
		return ret
	}
	return *o.WatchdogRollingDaily
}

// GetWatchdogRollingDailyOk returns a tuple with the WatchdogRollingDaily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2PunishmentstatsGet200Response) GetWatchdogRollingDailyOk() (*int32, bool) {
	if o == nil || IsNil(o.WatchdogRollingDaily) {
		return nil, false
	}
	return o.WatchdogRollingDaily, true
}

// HasWatchdogRollingDaily returns a boolean if a field has been set.
func (o *V2PunishmentstatsGet200Response) HasWatchdogRollingDaily() bool {
	if o != nil && !IsNil(o.WatchdogRollingDaily) {
		return true
	}

	return false
}

// SetWatchdogRollingDaily gets a reference to the given int32 and assigns it to the WatchdogRollingDaily field.
func (o *V2PunishmentstatsGet200Response) SetWatchdogRollingDaily(v int32) {
	o.WatchdogRollingDaily = &v
}

// GetStaffTotal returns the StaffTotal field value if set, zero value otherwise.
func (o *V2PunishmentstatsGet200Response) GetStaffTotal() int32 {
	if o == nil || IsNil(o.StaffTotal) {
		var ret int32
		return ret
	}
	return *o.StaffTotal
}

// GetStaffTotalOk returns a tuple with the StaffTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2PunishmentstatsGet200Response) GetStaffTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.StaffTotal) {
		return nil, false
	}
	return o.StaffTotal, true
}

// HasStaffTotal returns a boolean if a field has been set.
func (o *V2PunishmentstatsGet200Response) HasStaffTotal() bool {
	if o != nil && !IsNil(o.StaffTotal) {
		return true
	}

	return false
}

// SetStaffTotal gets a reference to the given int32 and assigns it to the StaffTotal field.
func (o *V2PunishmentstatsGet200Response) SetStaffTotal(v int32) {
	o.StaffTotal = &v
}

func (o V2PunishmentstatsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2PunishmentstatsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.WatchdogLastMinute) {
		toSerialize["watchdog_lastMinute"] = o.WatchdogLastMinute
	}
	if !IsNil(o.StaffRollingDaily) {
		toSerialize["staff_rollingDaily"] = o.StaffRollingDaily
	}
	if !IsNil(o.WatchdogTotal) {
		toSerialize["watchdog_total"] = o.WatchdogTotal
	}
	if !IsNil(o.WatchdogRollingDaily) {
		toSerialize["watchdog_rollingDaily"] = o.WatchdogRollingDaily
	}
	if !IsNil(o.StaffTotal) {
		toSerialize["staff_total"] = o.StaffTotal
	}
	return toSerialize, nil
}

type NullableV2PunishmentstatsGet200Response struct {
	value *V2PunishmentstatsGet200Response
	isSet bool
}

func (v NullableV2PunishmentstatsGet200Response) Get() *V2PunishmentstatsGet200Response {
	return v.value
}

func (v *NullableV2PunishmentstatsGet200Response) Set(val *V2PunishmentstatsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2PunishmentstatsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2PunishmentstatsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2PunishmentstatsGet200Response(val *V2PunishmentstatsGet200Response) *NullableV2PunishmentstatsGet200Response {
	return &NullableV2PunishmentstatsGet200Response{value: val, isSet: true}
}

func (v NullableV2PunishmentstatsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2PunishmentstatsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


