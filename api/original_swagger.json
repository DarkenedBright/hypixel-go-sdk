{
    "components": {
        "responses": {
            "DataMissing": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Missing one or more fields [...]",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Some data is missing, this is usually a field."
            },
            "InvalidKey": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Invalid API key",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Access is forbidden, usually due to an invalid API key being used."
            },
            "InvalidPage": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Invalid page",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "The page provided is invalid."
            },
            "MalformedData": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Malformed UUID",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Some data provided is invalid."
            },
            "MissingPage": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Page not found",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "The page provided does not exist."
            },
            "NoResult": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "No result was found",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "The request responded with no result."
            },
            "NotPopulated": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Leaderboard data has not yet been populated",
                                    "type": "string"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "The data is not yet populated and should be available shortly"
            },
            "RateLimited": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "cause": {
                                    "example": "Key throttle",
                                    "type": "string"
                                },
                                "global": {
                                    "description": "When this boolean exists and is true, the throttle occurring is a global throttle applied to all users",
                                    "example": true,
                                    "type": "boolean"
                                },
                                "success": {
                                    "example": false,
                                    "type": "boolean"
                                },
                                "throttle": {
                                    "example": true,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "A request limit has been reached, usually this is due to the limit on the key being reached but can also be triggered by a global throttle."
            }
        },
        "schemas": {
            "ActiveBooster": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Booster"
                    },
                    {
                        "properties": {
                            "stacked": {
                                "items": {
                                    "description": "UUID of the player in a dashed format",
                                    "example": "ad8fefaa-8351-454b-b739-a4eaa872173f",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Booster": {
                "properties": {
                    "_id": {
                        "format": "objectid",
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "dateActivated": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "gameType": {
                        "type": "integer"
                    },
                    "length": {
                        "type": "integer"
                    },
                    "originalLength": {
                        "type": "integer"
                    },
                    "purchaserUuid": {
                        "example": "ad8fefaa8351454bb739a4eaa872173f",
                        "format": "uuid",
                        "type": "string"
                    }
                }
            },
            "Game": {
                "description": "Information about a specific game. When a field is not present you should fallback to the provided default if there is one, required fields will always exist.",
                "example": {
                    "databaseName": "Bedwars",
                    "id": 58,
                    "modeNames": {
                        "BEDWARS_EIGHT_ONE": "Solo",
                        "BEDWARS_TWO_FOUR": "4v4"
                    },
                    "name": "Bed Wars"
                },
                "properties": {
                    "databaseName": {
                        "description": "The key used for database storage, such as for stats.",
                        "example": "Bedwars",
                        "type": "string"
                    },
                    "id": {
                        "description": "The backend ID of the game.",
                        "example": 1,
                        "type": "integer"
                    },
                    "legacy": {
                        "default": false,
                        "description": "True if the game is legacy and part of the Classic Lobby.",
                        "type": "boolean"
                    },
                    "modeNames": {
                        "description": "A map of mode key to display name",
                        "example": {
                            "solo_normal": "Solo",
                            "team_normal": "Doubles"
                        },
                        "type": "object"
                    },
                    "name": {
                        "description": "The display name of the game.",
                        "example": "Bed Wars",
                        "type": "string"
                    },
                    "retired": {
                        "default": false,
                        "description": "True if the game is retired and no longer playable.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "databaseName",
                    "id",
                    "name"
                ]
            },
            "HousingHouse": {
                "description": "Information about a player's house.",
                "properties": {
                    "cookies": {
                        "properties": {
                            "current": {
                                "description": "The current amount of cookies that this house has for the current week.",
                                "format": "int32",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "createdAt": {
                        "description": "The time this house was created.",
                        "format": "int64",
                        "type": "number"
                    },
                    "name": {
                        "description": "The name of this house, may contain Minecraft color symbols.",
                        "nullable": true,
                        "type": "string"
                    },
                    "owner": {
                        "description": "The UUID of the owner of this house.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "players": {
                        "description": "The number of players in this house.",
                        "format": "int32",
                        "type": "number"
                    },
                    "uuid": {
                        "description": "The UUID of this house.",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "cookies",
                    "createdAt",
                    "name",
                    "owner",
                    "players",
                    "uuid"
                ]
            },
            "QueuedBooster": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Booster"
                    },
                    {
                        "properties": {
                            "stacked": {
                                "nullable": true,
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SkyBlockAuction": {
                "example": {
                    "auctioneer": "347ef6c1daac45ed9d1fa02818cf0fb6",
                    "bids": [
                        {
                            "amount": 7607533,
                            "auction_id": "409a1e0f261a49849493278d6cd9305a",
                            "bidder": "99748e629dee463892f68abf3a780094",
                            "profile_id": "99748e629dee463892f68abf3a780094",
                            "timestamp": 1573760824844
                        }
                    ],
                    "category": "blocks",
                    "claimed": true,
                    "claimed_bidders": [],
                    "coop": [
                        "347ef6c1daac45ed9d1fa02818cf0fb6"
                    ],
                    "end": 1573761102637,
                    "extra": "Azure Bluet Red Rose",
                    "highest_bid_amount": 7607533,
                    "item_bytes": {
                        "data": "H4sIAAAAAAAAAB2NQQqCQBhGv1ErHaKu0KoLtGtnarRIhTpA/OGfDIwZ4wxUF/IeHiyyto/3eBKIIJQEIDx4qsJaYJK07m6FhG+p9hEdVMV7TXU3Wh+JWaW6h6ZXhODYGg5/LeZDfxt6nZR5XhYhgoIaxmKE8dsZXu20YwuJZfa0hmJrjbo6y134f8pTll5O5TnbbgAP05Qaqhk+8AVIrd2eoAAAAA==",
                        "type": 0
                    },
                    "item_lore": "§f§lCOMMON",
                    "item_name": "Azure Bluet",
                    "profile_id": "347ef6c1daac45ed9d1fa02818cf0fb6",
                    "start": 1573760802637,
                    "starting_bid": 1,
                    "tier": "COMMON",
                    "uuid": "409a1e0f261a49849493278d6cd9305a"
                },
                "properties": {
                    "_id": {
                        "format": "objectid",
                        "type": "string"
                    },
                    "auctioneer": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "bids": {
                        "items": {
                            "properties": {
                                "amount": {
                                    "type": "number"
                                },
                                "auction_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "bidder": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "profile_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "format": "int64",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "category": {
                        "type": "string"
                    },
                    "claimed": {
                        "type": "boolean"
                    },
                    "claimed_bidders": {
                        "type": "array"
                    },
                    "coop": {
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "end": {
                        "format": "int64",
                        "type": "number"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "highest_bid_amount": {
                        "type": "number"
                    },
                    "item_bytes": {
                        "properties": {
                            "data": {
                                "type": "string"
                            },
                            "type": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "item_lore": {
                        "type": "string"
                    },
                    "item_name": {
                        "type": "string"
                    },
                    "profile_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "start": {
                        "format": "int64",
                        "type": "number"
                    },
                    "starting_bid": {
                        "type": "number"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "uuid": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            },
            "SkyBlockFireSale": {
                "properties": {
                    "amount": {
                        "description": "The amount of items available for this sale",
                        "type": "integer"
                    },
                    "end": {
                        "description": "The end time in unix milliseconds for the sale",
                        "type": "number"
                    },
                    "item_id": {
                        "description": "The SkyBlock item ID for this sale",
                        "type": "string"
                    },
                    "price": {
                        "description": "The price in Gems for this sale",
                        "type": "integer"
                    },
                    "start": {
                        "description": "The start time in unix milliseconds for the sale",
                        "type": "number"
                    }
                }
            },
            "SkyBlockGarden": {
                "description": "Information about a player's SkyBlock garden, the only guaranteed field is the `uuid` field.",
                "properties": {
                    "active_commissions": {
                        "example": {
                            "fear_mongerer": {
                                "extra_rewards": [
                                    {
                                        "candy": "PURPLE_CANDY"
                                    }
                                ],
                                "position": 5,
                                "requirement": [
                                    {
                                        "amount": 1,
                                        "item": "POLISHED_PUMPKIN",
                                        "original_amount": 27709,
                                        "original_item": "PUMPKIN"
                                    }
                                ],
                                "status": "NOT_STARTED"
                            },
                            "liam": {
                                "position": 1,
                                "requirement": [
                                    {
                                        "amount": 4,
                                        "item": "MUTANT_NETHER_STALK",
                                        "original_amount": 93995,
                                        "original_item": "NETHER_STALK"
                                    }
                                ],
                                "status": "NOT_STARTED"
                            },
                            "lumberjack": {
                                "position": 2,
                                "requirement": [
                                    {
                                        "amount": 3,
                                        "item": "ENCHANTED_BAKED_POTATO",
                                        "original_amount": 81380,
                                        "original_item": "POTATO_ITEM"
                                    }
                                ],
                                "status": "NOT_STARTED"
                            },
                            "oringo": {
                                "position": 3,
                                "requirement": [
                                    {
                                        "amount": 21,
                                        "item": "ENCHANTED_HAY_BLOCK",
                                        "original_amount": 26798,
                                        "original_item": "WHEAT"
                                    }
                                ],
                                "status": "NOT_STARTED"
                            },
                            "rhys": {
                                "position": 4,
                                "requirement": [
                                    {
                                        "amount": 512,
                                        "item": "JACK_O_LANTERN",
                                        "original_amount": 512,
                                        "original_item": "JACK_O_LANTERN"
                                    }
                                ],
                                "status": "NOT_STARTED"
                            }
                        },
                        "type": "object"
                    },
                    "commission_data": {
                        "properties": {
                            "completed": {
                                "description": "A map of visitor identifier to completed count",
                                "example": {
                                    "andrew": 2,
                                    "jacob": 1,
                                    "jerry": 1
                                },
                                "type": "object"
                            },
                            "total_completed": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "unique_npcs_served": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "visits": {
                                "description": "A map of visitor identifier to visit count",
                                "example": {
                                    "andrew": 3,
                                    "jacob": 2,
                                    "jerry": 1
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "composter_data": {
                        "example": {
                            "compost_items": 2,
                            "compost_units": 0,
                            "conversion_ticks": 300,
                            "fuel_units": 17000,
                            "last_save": 1721039418436,
                            "organic_matter": 1772.8,
                            "upgrades": {
                                "cost_reduction": 25,
                                "fuel_cap": 22,
                                "multi_drop": 25,
                                "organic_matter_cap": 25,
                                "speed": 25
                            }
                        },
                        "type": "object"
                    },
                    "crop_upgrade_levels": {
                        "example": {
                            "INK_SACK:3": 3,
                            "POTATO_ITEM": 2,
                            "WHEAT": 1
                        },
                        "type": "object"
                    },
                    "garden_experience": {
                        "format": "double",
                        "type": "integer"
                    },
                    "resources_collected": {
                        "description": "A map of resource ID to amount collected",
                        "example": {
                            "INK_SACK:3": 100,
                            "POTATO_ITEM": 100,
                            "WHEAT": 100
                        },
                        "type": "object"
                    },
                    "selected_barn_skin": {
                        "type": "string"
                    },
                    "unlocked_barn_skins": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "unlocked_plots_ids": {
                        "example": [
                            "beginner_1",
                            "intermediate_3"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "uuid": {
                        "description": "The UUID of the profile for this garden.",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "uuid"
                ]
            },
            "SkyBlockItem": {
                "example": {
                    "category": "CHESTPLATE",
                    "color": "255,215,0",
                    "id": "FARM_ARMOR_CHESTPLATE",
                    "material": "LEATHER_CHESTPLATE",
                    "name": "Farm Armor Chestplate",
                    "npc_sell_price": 5200,
                    "stats": {
                        "DEFENSE": 75,
                        "HEALTH": 20
                    },
                    "tier": "RARE"
                },
                "properties": {
                    "color": {
                        "description": "The color metadata to be applied to an item, usually leather armor pieces",
                        "pattern": "^(?:(?:^|,\\s*)([01]?\\d\\d?|2[0-4]\\d|25[0-5])){3}$",
                        "type": "string"
                    },
                    "id": {
                        "description": "The unique identifier for this item",
                        "type": "string"
                    },
                    "material": {
                        "description": "The Bukkit material enum value for the item",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the item",
                        "type": "string"
                    },
                    "skin": {
                        "description": "The skin value for a skull based item",
                        "type": "string"
                    },
                    "tier": {
                        "description": "The rarity tier of the item",
                        "enum": [
                            "COMMON",
                            "EPIC",
                            "LEGENDARY",
                            "MYTHIC",
                            "RARE",
                            "SPECIAL",
                            "SUPREME",
                            "UNCOMMON",
                            "VERY_SPECIAL"
                        ],
                        "type": "string"
                    }
                }
            },
            "SkyBlockMuseum": {
                "properties": {
                    "appraisal": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "object"
                    },
                    "special": {
                        "properties": {
                            "donated_time": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "items": {
                                "type": "object"
                            }
                        },
                        "type": "array"
                    },
                    "value": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "SkyBlockProfile": {
                "properties": {
                    "banking": {
                        "description": "Information about the bank account for this profile, only present if the API banking setting is enabled",
                        "nullable": true,
                        "properties": {
                            "balance": {
                                "format": "double",
                                "type": "number"
                            },
                            "transactions": {
                                "items": {
                                    "properties": {
                                        "action": {
                                            "enum": [
                                                "DEPOSIT",
                                                "WITHDRAW"
                                            ],
                                            "type": "string"
                                        },
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "initiator_name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "format": "int64",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "community_upgrades": {
                        "nullable": true,
                        "type": "object"
                    },
                    "cute_name": {
                        "description": "The cute name of the profile, only provided on the profiles endpoint",
                        "nullable": true,
                        "type": "string"
                    },
                    "game_mode": {
                        "description": "The SkyBlock game mode of the profile, not present if normal mode",
                        "enum": [
                            "bingo",
                            "ironman",
                            "island"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "members": {
                        "description": "A map of member UUIDs to member profiles objects",
                        "properties": {
                            "player_id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "profile": {
                                "properties": {
                                    "deletion_notice": {
                                        "description": "If this field exists, the member profile is marked as deleted",
                                        "nullable": true,
                                        "properties": {
                                            "timestamp": {
                                                "format": "int64",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "profile_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "selected": {
                        "description": "Whether or not this is the currently selected profile, only provided on the profiles endpoint",
                        "nullable": true,
                        "type": "boolean"
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKey": {
                "description": "Obtained via the [Hypixel Developer Dashboard](https://developer.hypixel.net) when creating an application. You can also request higher limits for production applications in this dashboard.",
                "in": "header",
                "name": "API-Key",
                "type": "apiKey"
            }
        }
    },
    "info": {
        "contact": {
            "name": "Hypixel Support",
            "url": "https://developer.hypixel.net"
        },
        "description": "# Introduction\nThis is the official Hypixel API documentation. [Hypixel Website](https://hypixel.net/) - [GitHub Repo](https://github.com/HypixelDev/PublicAPI) - [API Help Forum](https://hypixel.net/forums/api-help.111/)\n\nAll use of the API must conform to the [API policies](https://developer.hypixel.net/policies), violation of these policies may lead to applications being revoked or users banned from the API.\n## Limits\nAPI keys are limited to a maximum amount of requests per 5 minute intervals. These limits will depend on the type of application that the key is assigned to.\n\nEndpoints which require the use of an API key will also respond with headers to assist with managing the rate limit:\n- 'RateLimit-Limit' - The limit of requests per minute for the provided API key.\n- 'RateLimit-Remaining' - The remaining amount of requests allowed for the current minute.\n- 'RateLimit-Reset' - The amount of seconds until the next minute and the reset of the API key usages.\n\n## GameTypes\n| ID | Type Name      | Database Name | Clean Name           |\n |----|----------------|---------------|----------------------|\n | 2  | QUAKECRAFT     | Quake         | Quake                |\n | 3  | WALLS          | Walls         | Walls                |\n | 4  | PAINTBALL      | Paintball     | Paintball            |\n | 5  | SURVIVAL_GAMES | HungerGames   | Blitz Survival Games |\n | 6  | TNTGAMES       | TNTGames      | TNT Games            |\n | 7  | VAMPIREZ       | VampireZ      | VampireZ             |\n | 13 | WALLS3         | Walls3        | Mega Walls           |\n | 14 | ARCADE         | Arcade        | Arcade               |\n | 17 | ARENA          | Arena         | Arena                |\n | 20 | UHC            | UHC           | UHC Champions        |\n | 21 | MCGO           | MCGO          | Cops and Crims       |\n | 23 | BATTLEGROUND   | Battleground  | Warlords             |\n | 24 | SUPER_SMASH    | SuperSmash    | Smash Heroes         |\n | 25 | GINGERBREAD    | GingerBread   | Turbo Kart Racers    |\n | 26 | HOUSING        | Housing       | Housing              |\n | 51 | SKYWARS        | SkyWars       | SkyWars              |\n | 52 | TRUE_COMBAT    | TrueCombat    | Crazy Walls          |\n | 54 | SPEED_UHC      | SpeedUHC      | Speed UHC            |\n | 55 | SKYCLASH       | SkyClash      | SkyClash             |\n | 56 | LEGACY         | Legacy        | Classic Games        |\n | 57 | PROTOTYPE      | Prototype     | Prototype            |\n | 58 | BEDWARS        | Bedwars       | Bed Wars             |\n | 59 | MURDER_MYSTERY | MurderMystery | Murder Mystery       |\n | 60 | BUILD_BATTLE   | BuildBattle   | Build Battle         |\n | 61 | DUELS          | Duels         | Duels                |\n | 63 | SKYBLOCK       | SkyBlock      | SkyBlock             |\n | 64 | PIT            | Pit           | Pit                  |\n | 65 | REPLAY         | Replay        | Replay               |\n | 67 | SMP            | SMP           | SMP                  |\n | 68 | WOOL_GAMES     | WoolGames     | Wool Wars            |\n\n### Storage\nGames store their respective stats and data in a Player's `stats` collection. The game's specific data is held within a JSON object named after it's `Database Name` (seen above.)\n### GameType Notes\n* Clean names are what is displayed to the user when referencing the name.\n* Database names or IDs are used when the API references a specific GameType.\n## Notes\n\n### Date and Time\nGenerally dates are stored as a Unix Epoch times in milliseconds.\n### Response Format\nResponses are served in JSON format.\n### UUID Parameters\nAll uuid parameters support both dashed and undashed versions.\n### SkyBlock items and inventories\nItems and inventory data are stored as a base64 encoded string containing gzipped nbt data.\nIf a method is missing important information about an item or inventory, you should try checking this!\n>Note: the base64 string may contain a unicode escape for non-alphabetical symbols, and some programming languages may have silent defects when interpreting the string. \n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
        "termsOfService": "https://hypixel.net/tos",
        "title": "Hypixel Public API",
        "version": "v2",
        "x-logo": {
            "altText": "Hypixel Logo",
            "href": "#",
            "url": "https://api.hypixel.net/assets/images/logo.png"
        }
    },
    "openapi": "3.0.3",
    "paths": {
        "/v2/boosters": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "boosters": {
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/ActiveBooster"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/QueuedBooster"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "boosterState": {
                                            "properties": {
                                                "decrementing": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Get boosters list"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Active Network Boosters",
                "tags": [
                    "Other"
                ]
            }
        },
        "/v2/counts": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "games": {
                                            "example": {
                                                "GAME_TYPE": {
                                                    "modes": {
                                                        "mode_1": 1,
                                                        "mode_2": 1
                                                    },
                                                    "players": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "playerCount": {
                                            "type": "integer"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Current Player Counts",
                "tags": [
                    "Other"
                ]
            }
        },
        "/v2/guild": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "format": "objectid",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "player",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "guild": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Get guild information"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Retrieve a Guild by a player, id, or name",
                "tags": [
                    "Player Data"
                ]
            }
        },
        "/v2/housing/active": {
            "get": {
                "description": "This data may be cached for a short period of time.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HousingHouse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "The currently active public houses.",
                "tags": [
                    "Housing"
                ]
            }
        },
        "/v2/housing/house": {
            "get": {
                "description": "This data may be cached for a short period of time.",
                "parameters": [
                    {
                        "description": "The UUID of the house to get information about.",
                        "in": "query",
                        "name": "house",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HousingHouse"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "404": {
                        "$ref": "#/components/responses/NoResult"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Information about a specific house.",
                "tags": [
                    "Housing"
                ]
            }
        },
        "/v2/housing/houses": {
            "get": {
                "description": "This data may be cached for a short period of time.",
                "parameters": [
                    {
                        "description": "The UUID of the player to get houses for.",
                        "in": "query",
                        "name": "player",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HousingHouse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "The public houses for a specific player.",
                "tags": [
                    "Housing"
                ]
            }
        },
        "/v2/leaderboards": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "leaderboards": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    },
                    "503": {
                        "$ref": "#/components/responses/NotPopulated"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Current Leaderboards",
                "tags": [
                    "Other"
                ]
            }
        },
        "/v2/player": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "player": {
                                            "properties": {
                                                "displayname": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "firstLogin": {
                                                    "nullable": true,
                                                    "type": "number"
                                                },
                                                "lastLogin": {
                                                    "nullable": true,
                                                    "type": "number"
                                                },
                                                "lastLogout": {
                                                    "nullable": true,
                                                    "type": "number"
                                                },
                                                "monthlyPackageRank": {
                                                    "enum": [
                                                        "NONE",
                                                        "SUPERSTAR"
                                                    ],
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "newPackageRank": {
                                                    "enum": [
                                                        "MVP",
                                                        "MVP_PLUS",
                                                        "NONE",
                                                        "VIP",
                                                        "VIP_PLUS"
                                                    ],
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "packageRank": {
                                                    "enum": [
                                                        "MVP",
                                                        "MVP_PLUS",
                                                        "NONE",
                                                        "VIP",
                                                        "VIP_PLUS"
                                                    ],
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "rank": {
                                                    "enum": [
                                                        "ADMIN",
                                                        "HELPER",
                                                        "MODERATOR",
                                                        "NORMAL"
                                                    ],
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "stats": {
                                                    "nullable": true,
                                                    "type": "object"
                                                },
                                                "uuid": {
                                                    "example": "3fa85f6457174562b3fc2c963f66afa6",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Get player's data"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Data of a specific player, including game stats",
                "tags": [
                    "Player Data"
                ]
            }
        },
        "/v2/punishmentstats": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "staff_rollingDaily": {
                                            "type": "integer"
                                        },
                                        "staff_total": {
                                            "type": "integer"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "watchdog_lastMinute": {
                                            "type": "integer"
                                        },
                                        "watchdog_rollingDaily": {
                                            "type": "integer"
                                        },
                                        "watchdog_total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    },
                    "503": {
                        "$ref": "#/components/responses/NotPopulated"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Punishment Statistics",
                "tags": [
                    "Other"
                ]
            }
        },
        "/v2/recentgames": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "games": {
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "format": "int64",
                                                        "type": "number"
                                                    },
                                                    "ended": {
                                                        "format": "int64",
                                                        "type": "number"
                                                    },
                                                    "gameType": {
                                                        "type": "string"
                                                    },
                                                    "map": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "uuid": {
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Get player's recent game"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "The recently played games of a specific player",
                "tags": [
                    "Player Data"
                ]
            }
        },
        "/v2/resources/achievements": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "achievements": {
                                            "type": "object"
                                        },
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Achievements",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/resources/challenges": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "challenges": {
                                            "type": "object"
                                        },
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Challenges",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/resources/games": {
            "get": {
                "description": "Returns information about Hypixel Games. This endpoint is in early development and we are working to add more information when possible <a href=\"https://github.com/HypixelDev/PublicAPI/discussions/197#discussioncomment-1047648\">HypixelDev/PublicAPI#197</a>",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "games": {
                                            "additionalProperties": {
                                                "$ref": "#/components/schemas/Game"
                                            },
                                            "description": "A map where the key is the backend name of the game",
                                            "type": "object"
                                        },
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Game Information",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/resources/guilds/achievements": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "one_time": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "tiered": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Guild Achievements",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/resources/quests": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "quests": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Quests",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/resources/skyblock/bingo": {
            "get": {
                "description": "Information regarding the current bingo event and its goals.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "end": {
                                            "description": "The end time of the current bingo event in unix milliseconds",
                                            "example": 1709874000000,
                                            "format": "int64",
                                            "type": "number"
                                        },
                                        "goals": {
                                            "description": "The goals for the current bingo event, as well as their progress",
                                            "items": {
                                                "properties": {
                                                    "fullLore": {
                                                        "description": "The full description of this goal",
                                                        "type": "array"
                                                    },
                                                    "id": {
                                                        "description": "The backend ID for this goal",
                                                        "type": "string"
                                                    },
                                                    "lore": {
                                                        "description": "Description of this goal",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The user friendly display name for this goal",
                                                        "type": "string"
                                                    },
                                                    "progress": {
                                                        "description": "The global progress of this goal",
                                                        "format": "int64",
                                                        "type": "number"
                                                    },
                                                    "requiredAmount": {
                                                        "description": "The required amount for this specific goal",
                                                        "format": "int32",
                                                        "type": "number"
                                                    },
                                                    "tiers": {
                                                        "description": "The tiers of this goal, if a global goal",
                                                        "items": {
                                                            "format": "int64",
                                                            "type": "number"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "description": "The current bingo event ID, increments by 1 for each bingo hosted",
                                            "example": 27,
                                            "format": "int32",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "description": "The unix milliseconds timestamp of the last time this data was updated",
                                            "format": "int64",
                                            "type": "number"
                                        },
                                        "modifier": {
                                            "description": "The modifier for the current bingo event",
                                            "enum": [
                                                "EXTREME",
                                                "NORMAL",
                                                "SECRET"
                                            ],
                                            "example": "NORMAL",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The display name for the current bingo event",
                                            "example": "March 2024",
                                            "type": "string"
                                        },
                                        "start": {
                                            "description": "The start time of the current bingo event in unix milliseconds",
                                            "example": 1709269200000,
                                            "format": "int64",
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "end",
                                        "goals",
                                        "id",
                                        "lastUpdated",
                                        "modifier",
                                        "name",
                                        "start",
                                        "success"
                                    ],
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Current Bingo Event",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/resources/skyblock/collections": {
            "get": {
                "description": "Information regarding Collections in the SkyBlock game.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "collections": {
                                            "type": "object"
                                        },
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "version": {
                                            "example": "0.11.22",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Collections",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/resources/skyblock/election": {
            "get": {
                "description": "Information regarding the current mayor and ongoing election in SkyBlock.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current": {
                                            "description": "Data regarding the current election, will not be provided if there is no open election ongoing",
                                            "type": "object"
                                        },
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "mayor": {
                                            "description": "Data regarding the current mayor",
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Election and Mayor",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/resources/skyblock/items": {
            "get": {
                "description": "Information regarding items in the SkyBlock game.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/SkyBlockItem"
                                            },
                                            "type": "array"
                                        },
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Items",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/resources/skyblock/skills": {
            "get": {
                "description": "Information regarding skills in the SkyBlock game.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "skills": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "version": {
                                            "example": "0.11.22",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Skills",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/resources/vanity/companions": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "rarities": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "types": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Vanity Companions",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/resources/vanity/pets": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastUpdated": {
                                            "type": "number"
                                        },
                                        "rarities": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "types": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Vanity Pets",
                "tags": [
                    "Resources"
                ]
            }
        },
        "/v2/skyblock/auction": {
            "get": {
                "description": "Returns the auctions selected by the provided query. Only one query parameter can be used in a single request, and cannot be filtered by multiple.",
                "parameters": [
                    {
                        "description": "The auction UUID that you wish to request",
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The player UUID that you wish to request",
                        "in": "query",
                        "name": "player",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The profile UUID that you wish to request",
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "auctions": {
                                            "items": {
                                                "$ref": "#/components/schemas/SkyBlockAuction"
                                            },
                                            "type": "array"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Request auction(s) by the auction UUID, player UUID, or profile UUID.",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/auctions": {
            "get": {
                "description": "Returns the currently active auctions sorted by last updated first and paginated.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "default": 0,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "auctions": {
                                            "items": {
                                                "$ref": "#/components/schemas/SkyBlockAuction"
                                            },
                                            "type": "array"
                                        },
                                        "lastUpdated": {
                                            "example": 1571065561345,
                                            "format": "int64",
                                            "type": "number"
                                        },
                                        "page": {
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "totalAuctions": {
                                            "example": 31267,
                                            "type": "number"
                                        },
                                        "totalPages": {
                                            "example": 32,
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/MissingPage"
                    },
                    "422": {
                        "$ref": "#/components/responses/InvalidPage"
                    },
                    "503": {
                        "$ref": "#/components/responses/NotPopulated"
                    }
                },
                "summary": "Active auctions",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/auctions_ended": {
            "get": {
                "description": "SkyBlock auctions which ended in the last 60 seconds.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "auctions": {
                                            "items": {
                                                "example": {
                                                    "auction_id": "015fe0c67e6041e69797bbe0c2725a21",
                                                    "bin": true,
                                                    "buyer": "c1eff55de0d24ec6b44848799e9323ba",
                                                    "buyer_profile": "a3e1c076533a40a58085e7f43a598bf3",
                                                    "item_bytes": "H4sIAAAAAAAAAEWR3W7TQBCFx2mBxKgtSH2ArUACZKL6L9jtndUYBdHQyGlV7qq1PXZX9U+03kB6yYNw7ffwo/AgiHEC4m7mmz1nz87qACPQhA4A2gAGItUGGjy5qNeV0nTYUzzX4PlNFUvkDzwuUNuD0Uyk+LHgeUOi3zo8S0WzKvjjCPYva4lDoofwsmu9KS95juesaxPDN+GY0FJJrHJ1v4PWxKTDAfGQy4rQB8M2WVKLqqHGy2RdsrKuGoWSPYiiaNjbS/yGBQ3RMo3+TF0Vj+/I5NXWj+2u7Acr0hCbmGbfbdWgd60/5xtmOBM4JPq5p9sofY43W4tfP3+wfyn/++Bfn+91nYJBxS0VlLQoMFGCIvYu6FnvXcenindtMQ++htMT8u11dPH1vWiYUFiyhFcsRiYxq2WO6Qm86NozUkRBFLLl7VU0HcL+F14iHNAg4rRuyYINgg5H4UZJHiglRbxW2AxhVEuRi+qa53CwnF0t7hY30cUsWIbD/jdBj4JP0zC6ozBkul4Teu34Tua7vj124tQduz73xtxOvbGVoZtMbN/xnIyMlSixUbxcwZFln/qn9DX2ue2wxRxgAE93q6b3wR9BYJa/RAIAAA==",
                                                    "price": 190000,
                                                    "seller": "fc76242bf64a4698ae0ebc136d900929",
                                                    "seller_profile": "85b96cd3e73e4580b8379162ec059141",
                                                    "timestamp": 1607456400329
                                                }
                                            },
                                            "type": "array"
                                        },
                                        "lastUpdated": {
                                            "example": 1607456463916,
                                            "format": "int64",
                                            "type": "number"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Recently ended auctions",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/bazaar": {
            "get": {
                "description": "Returns the list of products along with their sell summary, buy summary and quick status.\n ### Product Description\n The returned product info has 3 main fields:\n - `buy_summary`\n - `sell_summary`\n - `quick_status`\n\n`buy_summary` and `sell_summary` are the current top 30 orders for each transaction type (in-game example: [Stock of Stonks](https://i.imgur.com/SjRONxq.png)).\n\n`quick_status` is a computed summary of the live state of the product (used for advanced mode view in the bazaar):\n- `sellVolume` and `buyVolume` are the sum of item amounts in all orders.\n - `sellPrice` and `buyPrice` are the weighted average of the top 2% of orders by volume.\n - `movingWeek` is the historic transacted volume from last 7d + live state.\n - `sellOrders` and `buyOrders` are the count of active orders. ",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastUpdated": {
                                            "example": 1590854517479,
                                            "format": "int64",
                                            "type": "number"
                                        },
                                        "products": {
                                            "example": {
                                                "INK_SACK:3": {
                                                    "buy_summary": [
                                                        {
                                                            "amount": 640,
                                                            "orders": 1,
                                                            "pricePerUnit": 4.8
                                                        },
                                                        {
                                                            "amount": 640,
                                                            "orders": 1,
                                                            "pricePerUnit": 4.9
                                                        },
                                                        {
                                                            "amount": 25957,
                                                            "orders": 3,
                                                            "pricePerUnit": 5
                                                        }
                                                    ],
                                                    "product_id": "INK_SACK:3",
                                                    "quick_status": {
                                                        "buyMovingWeek": 5830656,
                                                        "buyOrders": 85,
                                                        "buyPrice": 4.99260315136572,
                                                        "buyVolume": 1254854,
                                                        "productId": "INK_SACK:3",
                                                        "sellMovingWeek": 8301075,
                                                        "sellOrders": 11,
                                                        "sellPrice": 4.2,
                                                        "sellVolume": 409855
                                                    },
                                                    "sell_summary": [
                                                        {
                                                            "amount": 20569,
                                                            "orders": 1,
                                                            "pricePerUnit": 4.2
                                                        },
                                                        {
                                                            "amount": 140326,
                                                            "orders": 2,
                                                            "pricePerUnit": 3.8
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "503": {
                        "$ref": "#/components/responses/NotPopulated"
                    }
                },
                "summary": "Bazaar",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/bingo": {
            "get": {
                "description": "Bingo data for participated events of the provided player.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "events": {
                                            "items": {
                                                "properties": {
                                                    "completed_goals": {
                                                        "description": "The completed goal IDs",
                                                        "items": {
                                                            "example": [
                                                                "KILL_TRAPPER_MOB",
                                                                "stat_walk_speed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "key": {
                                                        "description": "The id for this event",
                                                        "example": 2,
                                                        "format": "int32",
                                                        "type": "number"
                                                    },
                                                    "points": {
                                                        "description": "The amount of points earned",
                                                        "example": 117,
                                                        "format": "int32",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "completed_goals",
                                                    "key",
                                                    "points"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cause": {
                                            "example": "No bingo data could be found",
                                            "type": "string"
                                        },
                                        "success": {
                                            "example": false,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "No data could be found for the provided player uuid."
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Bingo data by player",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/firesales": {
            "get": {
                "description": "Retrieve the currently active or upcoming Fire Sales for SkyBlock.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "sales": {
                                            "items": {
                                                "$ref": "#/components/schemas/SkyBlockFireSale"
                                            },
                                            "type": "array"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    }
                },
                "summary": "Active/Upcoming Fire Sales",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/garden": {
            "get": {
                "description": "SkyBlock garden data for the provided profile.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "garden": {
                                            "$ref": "#/components/schemas/SkyBlockGarden"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "404": {
                        "$ref": "#/components/responses/NoResult"
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Garden data by profile ID",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/museum": {
            "get": {
                "description": "SkyBlock museum data for all members of the provided profile. The data returned can differ depending on the players in-game API settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "profile": {
                                            "$ref": "#/components/schemas/SkyBlockMuseum"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Museum data by profile ID",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/news": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "example": {
                                                    "item": {
                                                        "material": "DIAMOND"
                                                    },
                                                    "link": "https://hypixel.net",
                                                    "text": "15th January 2021",
                                                    "title": "SkyBlock v0.11"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "News",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/profile": {
            "get": {
                "description": "SkyBlock profile data, such as stats, objectives etc. The data returned can differ depending on the players in-game API settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "profile": {
                                            "$ref": "#/components/schemas/SkyBlockProfile"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Profile by UUID",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/skyblock/profiles": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "profiles": {
                                            "items": {
                                                "$ref": "#/components/schemas/SkyBlockProfile"
                                            },
                                            "type": "array"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "A successful response"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "422": {
                        "$ref": "#/components/responses/MalformedData"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Profiles by player",
                "tags": [
                    "SkyBlock"
                ]
            }
        },
        "/v2/status": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "session": {
                                            "properties": {
                                                "gameType": {
                                                    "type": "string"
                                                },
                                                "map": {
                                                    "type": "string"
                                                },
                                                "mode": {
                                                    "type": "string"
                                                },
                                                "online": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "uuid": {
                                            "example": "ad8fefaa8351454bb739a4eaa872173f",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Get player status"
                    },
                    "400": {
                        "$ref": "#/components/responses/DataMissing"
                    },
                    "403": {
                        "$ref": "#/components/responses/InvalidKey"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "The current online status of a specific player",
                "tags": [
                    "Player Data"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://api.hypixel.net"
        }
    ]
}